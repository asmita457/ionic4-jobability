{"version":3,"sources":["webpack:///./src/app/employerpostjobdetails/employerpostjobdetails.module.ts","webpack:///./src/app/employerpostjobdetails/employerpostjobdetails.page.html","webpack:///./src/app/employerpostjobdetails/employerpostjobdetails.page.scss","webpack:///./src/app/employerpostjobdetails/employerpostjobdetails.page.ts"],"names":[],"mappings":"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","file":"employerpostjobdetails-employerpostjobdetails-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmployerpostjobdetailsPage } from './employerpostjobdetails.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployerpostjobdetailsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmployerpostjobdetailsPage]\n})\nexport class EmployerpostjobdetailsPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Post Job</ion-title>\\n  </ion-item>\\n</ion-toolbar>\\n\\n<ion-content>\\n  <h5 align=\\\"center\\\" style=\\\"color:#2b0c43\\\">Job Detail</h5>\\n  <div class=\\\"inputDiv\\\" style=\\\"margin-top:10px\\\">\\n\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showJobTitleErrorMsg == true, 'blacklabel' : showJobTitleErrorMsg == false}\\\">\\n              Job Title\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" name=\\\"jobtitle\\\" [(ngModel)]=\\\"jobtitle\\\" (ionChange)=\\\"jobTitleValidator()\\\" required>\\n            </ion-input>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showJobTitleErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showJobTitleErrorMsg\\\">{{jobTitleErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showJobDescriptionErrorMsg == true, 'blacklabel' : showJobDescriptionErrorMsg == false}\\\">\\n              Job Description\\n            </ion-label>\\n            <ion-input class=\\\"headerNameCss\\\" type=\\\"email\\\" name=\\\"jobdescription\\\" [(ngModel)]=\\\"jobdescription\\\"\\n              (ionChange)=\\\"jobDescriptionValidator()\\\" required>\\n            </ion-input>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showJobDescriptionErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showJobDescriptionErrorMsg\\\">{{jobDescriptionErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <ion-label class=\\\"headerNameCss\\\"\\n      [ngClass]=\\\"{'redlabel' : onDisabilityStatusSelect == true, 'blacklabel' : onDisabilityStatusSelect == false}\\\">\\n      Disability Type:</ion-label>\\n    <ion-select class=\\\"ionSelectBorder ionselectcss\\\" multiple=\\\"true\\\" (ionChange)=\\\"onDisabilitySelect($event)\\\"\\n      placeholder=\\\"Disability\\\" [(ngModel)]=\\\"disability_id\\\">\\n      <ion-select-option *ngFor=\\\"let item of disabilityArray;\\\"\\n        [value]=\\\"item.id\\\">{{item.name}}</ion-select-option>\\n    </ion-select>\\n    <ion-label *ngIf=\\\"onDisabilityStatusSelect\\\" style=\\\"color: red\\\">Please select atleast one disability type</ion-label> <br>\\n\\n\\n    <ion-label class=\\\"headerNameCss\\\">Work Experience:</ion-label>\\n    <br>\\n    <ion-row class=\\\"ionselectcss\\\">\\n\\n      <ion-col size=\\\"6\\\">\\n        <ion-label class=\\\"headerNameCss\\\"\\n          [ngClass]=\\\"{'redlabel' : onMinExperienceStatusSelect == true, 'blacklabel' : onMinExperienceStatusSelect == false}\\\">\\n          Min Experience:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headerNameCss\\\" [(ngModel)]=\\\"selectedMinExperienceValue\\\"\\n          (ionChange)=\\\"selecteMinExperienceValue($event)\\\" placeholder=\\\"Min Experience\\\">\\n          <ion-select-option *ngFor=\\\"let item of min_experience; let i = index\\\"\\n            [value]=\\\"item\\\" >\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\">\\n        <ion-label class=\\\"headerNameCss\\\"\\n          [ngClass]=\\\"{'redlabel' : onMaxExperienceStatusSelect == true, 'blacklabel' : onMaxExperienceStatusSelect == false}\\\">\\n          Max Experience:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headerNameCss\\\" [(ngModel)]=\\\"selectedMaxExperienceValue\\\"\\n          (ionChange)=\\\"selecteMaxExperienceValue($event)\\\"  placeholder=\\\"Max Experience\\\" >\\n          <ion-select-option *ngFor=\\\"let item of max_experience; let i = index\\\"\\n            [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n    <br>\\n\\n    <ion-label class=\\\"headerNameCss\\\">Annual Salary:</ion-label>\\n    <br>\\n    <ion-row class=\\\"ionselectcss\\\">\\n      <ion-col size=\\\"4\\\">\\n        <ion-label class=\\\"headerNameCss\\\"\\n          [ngClass]=\\\"{'redlabel' : onCurrencyStatusSelect == true, 'blacklabel' : onCurrencyStatusSelect == false}\\\">\\n          Currency:</ion-label>\\n        <!-- <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"clearCurrency\\\" (ionChange)=\\\"onChangeCurrency($event)\\\"\\n          placeholder=\\\"Currency\\\">\\n          <ion-select-option *ngFor=\\\"let item of currencyArray; let i = index\\\"\\n            [selected]=\\\"item.currency == currencyPreselection\\\" [value]=\\\"item\\\">\\n            {{item.currency}}</ion-select-option>\\n        </ion-select> -->\\n\\n        <ion-select class=\\\"ionSelectBorder\\\" (ionChange)=\\\"onChangeCurrency($event)\\\"\\n        placeholder=\\\"Currency\\\" [(ngModel)]=\\\"Currency_id\\\">\\n        <ion-select-option *ngFor=\\\"let item of currencyArray; let i = index\\\"\\n          [selected]=\\\"item.currency==INR\\\" [value]=\\\"item.currency\\\">\\n          {{item.currency}}</ion-select-option>\\n      </ion-select>\\n      </ion-col>\\n\\n      <ion-col size=\\\"4\\\">\\n        <ion-label class=\\\"headerNameCss\\\"\\n          [ngClass]=\\\"{'redlabel' : onMinSalaryStatusSelect == true, 'blacklabel' : onMinSalaryStatusSelect == false}\\\">\\n          Min Salary:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"ctcFrom\\\" (ionChange)=\\\"selectedMinSalaryValue($event)\\\"\\n          placeholder=\\\"Min Salary\\\">\\n          <ion-select-option *ngFor=\\\"let item of annual_ctc_from; let i = index\\\" \\n            [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n\\n\\n      <ion-col size=\\\"4\\\">\\n        <ion-label class=\\\"headerNameCss\\\"\\n          [ngClass]=\\\"{'redlabel' : onMaxSalaryStatusSelect == true, 'blacklabel' : onMaxSalaryStatusSelect == false}\\\">\\n          Max Salary:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"ctcTo\\\" (ionChange)=\\\"selectedMaxSalaryValue($event)\\\"\\n          placeholder=\\\"Max Salary\\\">\\n          <ion-select-option *ngFor=\\\"let item of annual_ctc_to; let i = index\\\"\\n            [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <ion-row>\\n      <ion-col size=\\\"1\\\">\\n        <ion-checkbox [(ngModel)]=\\\"salaryHideShow\\\" clalabelss=\\\"checkBoxBorder\\\"></ion-checkbox>\\n      </ion-col>\\n      <ion-col size=\\\"11\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Hide Salary from Jobseekers</ion-label>\\n      </ion-col>\\n    </ion-row>\\n\\n\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\" style=\\\"margin-top:-9px\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showJobVacanciesErrorMsg == true, 'blacklabel' : showJobVacanciesErrorMsg == false}\\\">\\n              Vacancies\\n            </ion-label>\\n            <ion-input type=\\\"number\\\" name=\\\"vacancies\\\" [(ngModel)]=\\\"vacancies\\\" (ionChange)=\\\"jobVacancyValidator()\\\" required pattern=\\\"^[0-9]{10}$\\\">\\n            </ion-input>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showJobVacanciesErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showJobVacanciesErrorMsg\\\">{{jobVacanciErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\" style=\\\"margin-top:-9px\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showJobLastDateErrorMsg == true, 'blacklabel' : showJobLastDateErrorMsg == false}\\\">\\n              Last date for applying\\n            </ion-label>\\n\\n            <ion-datetime #myPicker style=\\\"height: 30px\\\" align=\\\"start\\\" (ionChange)=\\\"jobLastDateValidator()\\\"\\n              displayFormat=\\\"YYYY-MM-DD\\\" name=\\\"lastdate\\\" [(ngModel)]=\\\"lastdate\\\" min=\\\"{{startLastDate}}\\\" max=\\\"2050-12-30\\\">\\n            </ion-datetime>\\n\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showJobLastDateErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"10\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showJobLastDateErrorMsg\\\">{{jobLastDateErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n  </div>\\n\\n  <div class=\\\"saveButtonPadding\\\">\\n    <button class=\\\"buttonfont\\\" (click)=\\\"nextPage()\\\">CONTINUE</button>\\n  </div>\\n</ion-content>\"","module.exports = \".alert-button-group .sc-ion-alert-md {\\n  height: 50px !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9lbXBsb3llcnBvc3Rqb2JkZXRhaWxzL2VtcGxveWVycG9zdGpvYmRldGFpbHMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llcnBvc3Rqb2JkZXRhaWxzL2VtcGxveWVycG9zdGpvYmRldGFpbHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXG4uYWxlcnQtYnV0dG9uLWdyb3VwIC5zYy1pb24tYWxlcnQtbWQge1xuICAgIGhlaWdodDogNTBweCAhaW1wb3J0YW50O1xufSJdfQ== */\"","// import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { NavComponent } from '@ionic/core';\nimport { NavController } from '@ionic/angular';\n\n@Component({\nselector: 'app-employerpostjobdetails',\ntemplateUrl: './employerpostjobdetails.page.html',\nstyleUrls: ['./employerpostjobdetails.page.scss'],\n})\nexport class EmployerpostjobdetailsPage implements OnInit {\n\n\n// currencyPreselection = \"INR\"\nCurrency_id: any\nDDlListArray: any\ndisabilityArray = []\ncurrencyArray = []\nselectedMinExperienceValue: number\nselectedMaxExperienceValue: number\nctcFrom = \"\"\nctcTo = \"\"\ncurrency_list = []\ndisability_id = []\nmin_experience = []\nmax_experience = []\nannual_ctc_from = []\nannual_ctc_to = []\ndisabilityPreselection: any\njobtitle = \"\"\nvacancies = \"\"\nsalaryHideShow: boolean\nhide_salary = 0;\nlastdate = \"\"\npostJobDetail = []\ngetPrePopulatedDataArray = []\njobdescription = \"\"\ndisability_name = [];\nprePopulateDisabilityType = []\nbackwardJobDetailFlag = \"\"\nstartLastDate: string\njobDescriptionErrorMsg: any\njobTitleErrorMsg: any\njobLastDateErrorMsg: any\n\nshowJobLastDateErrorMsg = false\nshowJobVacanciesErrorMsg = false\nonCurrencyStatusSelect = false\nonMaxSalaryStatusSelect = false\nonMinSalaryStatusSelect = false\nonMaxExperienceStatusSelect = false\nonMinExperienceStatusSelect = false\nonDisabilityStatusSelect = false\nshowJobDescriptionErrorMsg = false\nshowJobTitleErrorMsg = false\n\nmyDate: any\n\njobVacanciErrorMsg: any\nbackPostJobDetail = []\nconstructor(\nprivate router: Router,\nprivate changeRef: ChangeDetectorRef,\nprivate activatedRoute: ActivatedRoute,\nprivate navController: NavController\n) { }\n\nngOnInit() {\n}\nselectedDisabilityServedValue(item: any) {\nthis.disabilityPreselection = item.detail.value;\nconsole.log('Selected Disability Type ::' + this.disabilityPreselection)\n\n}\n\nionViewWillEnter() {\n// this.myDate = new Date();\nthis.salaryHideShow = false\nthis.startLastDate = new Date().toISOString().slice(0, 10);\n\nthis.DDlListArray = JSON.parse(localStorage.getItem('employerDDLResponse'));\nlet jobdetaildata = JSON.parse(localStorage.getItem('postJobDetail'))\nconsole.log('test detail data:', jobdetaildata)\nthis.currencyArray = this.DDlListArray.currency_list;\n\nthis.backPostJobDetail = []\nthis.backwardJobDetailFlag = localStorage.getItem('backwardJobDetailFlag')\nif (this.backwardJobDetailFlag == \"1\") {\nthis.backPostJobDetail = JSON.parse(localStorage.getItem('postJobDetail'))\nconsole.log('post Job Detail LocalStorage :', this.backPostJobDetail)\n\nthis.disability_id = this.backPostJobDetail[0].disabilityType;\n}\nelse {\nthis.backPostJobDetail = []\n\nlocalStorage.removeItem('postJobDetail')\n}\n\n\nthis.disabilityArray = this.DDlListArray.disability_list;\n//this.changeRef.detectChanges();\nsetTimeout(() => {\nthis.showJobTitleErrorMsg = false;\n}, 500);\n\n\n\nfor (let i = 0; i <= 40; i++) {\nthis.min_experience.push(i);\nthis.max_experience.push(i);\n}\n\nfor (let i = 10000; i <= 2000000; i = i + 10000) {\nthis.annual_ctc_from.push(i);\nthis.annual_ctc_to.push(i);\n}\n}\nonChangeCurrency(item) {\nthis.Currency_id = item.detail.value;\nif (this.Currency_id == \"\" || this.Currency_id == undefined || this.Currency_id == null) {\nthis.onCurrencyStatusSelect = true\n} else {\nthis.onCurrencyStatusSelect = false\n}\nconsole.log('Currency :: ' + this.Currency_id)\n}\n\nselecteMinExperienceValue(item: any) {\nthis.selectedMinExperienceValue = item.detail.value;\nif (this.selectedMinExperienceValue == 0) {\nthis.onMinExperienceStatusSelect = false\n\n}\nif (this.selectedMinExperienceValue == undefined || this.selectedMinExperienceValue == null) {\nthis.onMinExperienceStatusSelect = true\n} else {\nthis.onMinExperienceStatusSelect = false\n}\nthis.max_experience = []\nfor (let i = item.detail.value; i <= 40; i++) {\nthis.max_experience.push(i);\nthis.changeRef.detectChanges();\n}\nconsole.log('Min Experience :: ' + JSON.stringify(item.detail.value))\n}\n\n\nselecteMaxExperienceValue(item: any) {\nthis.selectedMaxExperienceValue = item.detail.value;\nconsole.log('Max Experience:: ' + JSON.stringify(item.detail.value))\n\nif (this.selectedMaxExperienceValue == 0) {\nthis.onMaxExperienceStatusSelect = false\n}\n\nif (this.selectedMaxExperienceValue == undefined || this.selectedMaxExperienceValue == null) {\nthis.onMaxExperienceStatusSelect = true\n} else {\nthis.onMaxExperienceStatusSelect = false\n}\n\n}\n\nselectedMinSalaryValue(item) {\nthis.ctcFrom = item.detail.value;\nif (this.ctcFrom == \"\" || this.ctcFrom == undefined || this.ctcFrom == null) {\nthis.onMinSalaryStatusSelect = true\n} else {\nthis.onMinSalaryStatusSelect = false\n}\nthis.annual_ctc_to = []\nfor (let i = item.detail.value; i <= 2000000; i = i + 10000) {\nthis.annual_ctc_to.push(i);\nthis.changeRef.detectChanges();\n\n}\nconsole.log('Min Salary :: ' + this.ctcFrom)\n}\n\n\nselectedMaxSalaryValue(item) {\nthis.ctcTo = item.detail.value;\nif (this.ctcTo == \"\" || this.ctcTo == undefined || this.ctcTo == null) {\nthis.onMaxSalaryStatusSelect = true\n} else {\nthis.onMaxSalaryStatusSelect = false\n}\nconsole.log('Max Salary :: ' + this.ctcTo)\n}\n\njobDescriptionValidator() {\nif (this.jobdescription == \"\" || this.jobdescription == null || this.jobdescription == undefined) {\nthis.showJobDescriptionErrorMsg = true\nthis.jobDescriptionErrorMsg = \"Please enter job description\"\n} else {\nthis.showJobDescriptionErrorMsg = false\n}\n}\n\njobTitleValidator() {\n// if(this.backPostJobDetail != null){\n// if(this.backwardJobDetailFlag != \"1\")\n// {\n\nif (this.jobtitle == \"\" || this.jobtitle == null || this.jobtitle == undefined) {\nthis.showJobTitleErrorMsg = true\nthis.jobTitleErrorMsg = \"Please enter job title\"\n} else {\nthis.showJobTitleErrorMsg = false\n}\n\n\n// }\n// else{\n// event.stop();\n// }\n\n}\n\njobLastDateValidator() {\n// if (this.lastdate == \"\" || this.lastdate == null || this.lastdate == undefined) {\n// this.showJobLastDateErrorMsg = true\n// this.jobLastDateErrorMsg = \"Please enter last date for applying\"\n// } else {\n// this.showJobLastDateErrorMsg = false\n// }\n}\n\njobVacancyValidator() {\nif (this.vacancies == \"\" || this.vacancies == null || this.vacancies == undefined) {\nthis.showJobVacanciesErrorMsg = true\nthis.jobVacanciErrorMsg = \"Please enter no. of vacancies\"\n} else {\nthis.showJobVacanciesErrorMsg = false\n}\n}\n\n\nonDisabilitySelect(item) {\nthis.onDisabilityStatusSelect = false\n\n\nif (this.disability_id.length == 0) {\nthis.onDisabilityStatusSelect = true\nreturn\n} else {\nthis.disability_id = [];\nthis.disability_id = item.detail.value;\nthis.onDisabilityStatusSelect = false\nreturn\n}\n\n//code update by sujit\n//for (let i = 0; i < arrayLength; i++) {\n\n\n//this.disability_id.push(item.detail.value[i].id);\n//this.disability_name.push(item.detail.value[i].name)\n// this.onDisabilityStatusSelect = false\n// //}\n// if (this.disability_id.length == 0) {\n// this.onDisabilityStatusSelect = true\n// } else {\n// this.onDisabilityStatusSelect = false\n// }\n// this.disability_id =item.detail.value.id;\n//console.log('Disability Type :: ' + this.disability_id)\n}\n\nclosePage() {\nthis.navController.navigateRoot(['/dashboardemployer']).then(() => {\n\n});\n\n}\n\nnextPage() {\nif (this.salaryHideShow == true) {\nthis.hide_salary = 1;\n}\nelse {\nthis.hide_salary = 0;\n}\n\nif ((this.jobtitle == \"\" || this.jobtitle == null) &&\n(this.jobdescription == \"\" || this.jobdescription == null) &&\n(this.disability_id == undefined || this.disability_id == null || this.disability_id == []) &&\n(this.selectedMinExperienceValue == null || this.selectedMinExperienceValue == undefined) &&\n(this.selectedMaxExperienceValue == null || this.selectedMaxExperienceValue == undefined) &&\n(this.Currency_id == \"\" || this.Currency_id == null || this.Currency_id == undefined) &&\n(this.ctcFrom == \"\" || this.ctcFrom == null || this.ctcFrom == undefined) &&\n(this.ctcTo == \"\" || this.ctcTo == null || this.ctcTo == undefined) &&\n(this.vacancies == \"\" || this.vacancies == null || this.vacancies == undefined) &&\n// (this.lastdate == \"\" || this.lastdate == null || this.lastdate == undefined) &&\n(this.disability_id.length == 0)\n) {\n// this.presentAlert('All fields are mandatory', '')\n// return\nthis.showJobTitleErrorMsg = true\nthis.jobTitleErrorMsg = \"Please enter job title\"\nthis.showJobDescriptionErrorMsg = true;\nthis.jobDescriptionErrorMsg = \"Please enter job description\"\nthis.onDisabilityStatusSelect = true\nthis.onMinExperienceStatusSelect = true\nthis.onMaxExperienceStatusSelect = true\nthis.onMinSalaryStatusSelect = true\nthis.onMaxSalaryStatusSelect = true\nthis.showJobVacanciesErrorMsg = true\nthis.onCurrencyStatusSelect = true\nthis.jobVacanciErrorMsg = \"Please enter no. of vacancies\"\n// this.showJobLastDateErrorMsg = true\n// this.jobLastDateErrorMsg = \"Please enter last date for applying\"\nthis.onDisabilityStatusSelect = true\n\n} else {\nthis.showJobTitleErrorMsg = false\nthis.showJobDescriptionErrorMsg = false\nthis.onDisabilityStatusSelect = false\nthis.onMinExperienceStatusSelect = false\nthis.onMaxExperienceStatusSelect = false\nthis.onMinSalaryStatusSelect = false\nthis.onMaxSalaryStatusSelect = false\nthis.showJobVacanciesErrorMsg = false\n// this.showJobLastDateErrorMsg = false\nthis.onCurrencyStatusSelect = false\n\n}\n\nthis.jobVacancyValidator();\nthis.jobTitleValidator();\nthis.jobDescriptionValidator();\nthis.jobLastDateValidator();\n\n\nif (this.selectedMaxExperienceValue == undefined || this.selectedMaxExperienceValue == null) {\nthis.onMaxExperienceStatusSelect = true\n} else {\nthis.onMaxExperienceStatusSelect = false\n}\n\nif (this.selectedMinExperienceValue == undefined || this.selectedMinExperienceValue == null) {\nthis.onMinExperienceStatusSelect = true\n} else {\nthis.onMinExperienceStatusSelect = false\n}\n\nif (this.ctcFrom == \"\" || this.ctcFrom == undefined || this.ctcFrom == null) {\nthis.onMinSalaryStatusSelect = true\n} else {\nthis.onMinSalaryStatusSelect = false\n}\n\nif (this.ctcTo == \"\" || this.ctcTo == undefined || this.ctcTo == null) {\nthis.onMaxSalaryStatusSelect = true\n} else {\nthis.onMaxSalaryStatusSelect = false\n}\n\nif (this.disability_id.length == 0) {\nthis.onDisabilityStatusSelect = true\n} else {\nthis.onDisabilityStatusSelect = false\n}\n\nif (this.Currency_id == \"\" || this.Currency_id == undefined || this.Currency_id == null) {\nthis.onCurrencyStatusSelect = true\n} else {\nthis.onCurrencyStatusSelect = false\n}\n\nlet LASTDATE = \"\"\nif (this.lastdate != \"\") {\nvar date = new Date(this.lastdate);\nlet month = String(date.getMonth() + 1);\nlet day = String(date.getDate());\nconst year = String(date.getFullYear());\nif (day.length < 2) { \nday = '0' + day \n}\nif (month.length < 2) { \nmonth = '0' + month \n}\nLASTDATE = day + '-' + month + '-' + year\nconsole.log('Full selected date:-' + day + '-' + month + '-' + year)\n}\n\n\n\nif (this.showJobTitleErrorMsg == false &&\nthis.showJobDescriptionErrorMsg == false &&\nthis.onDisabilityStatusSelect == false &&\nthis.onMinExperienceStatusSelect == false &&\nthis.onMaxExperienceStatusSelect == false &&\nthis.onMinSalaryStatusSelect == false &&\nthis.onMaxSalaryStatusSelect == false &&\nthis.showJobVacanciesErrorMsg == false &&\n// this.showJobLastDateErrorMsg == false &&\nthis.onCurrencyStatusSelect == false) {\n// let LASTDATE = this.lastdate.split('T')[0].split('-')[2] + '-' + this.lastdate.split('T')[0].split('-')[1] + '-' + this.lastdate.split('T')[0].split('-')[0]\n\nthis.postJobDetail.push({\njobtitle: this.jobtitle,\njobdescription: this.jobdescription,\ndisabilityType: this.disability_id,\nselectedMinExperienceValue: this.selectedMinExperienceValue,\nselectedMaxExperienceValue: this.selectedMaxExperienceValue,\nCurrency_id: this.Currency_id,\nctcFrom: this.ctcFrom,\nctcTo: this.ctcTo,\nsalaryHideShow: this.hide_salary,\nvacancies: this.vacancies,\nlastdate: LASTDATE\n});\n\nlocalStorage.setItem('postJobDetail', JSON.stringify(this.postJobDetail))\nthis.router.navigate(['/employerpostjoblocation'])\n\n// this.router.navigate(['/employerpostjoblocation', { item: JSON.stringify(this.postJobDetail) }])\n\n}\n\n}\n}"],"sourceRoot":""}