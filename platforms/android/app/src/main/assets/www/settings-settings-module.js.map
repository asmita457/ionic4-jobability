{"version":3,"sources":["webpack:///./src/app/settings/settings.module.ts","webpack:///./src/app/settings/settings.page.html","webpack:///./src/app/settings/settings.page.scss","webpack:///./src/app/settings/settings.page.ts"],"names":[],"mappings":"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","file":"settings-settings-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-buttons slot=\\\"start\\\">\\n    <ion-menu-button></ion-menu-button>\\n  </ion-buttons>\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\" style=\\\"color: #2b0c43\\\">\\n    <ion-title>\\n      Settings\\n    </ion-title>\\n    <ion-icon class=\\\"headerNameCss\\\" name=\\\"notifications\\\" (click)=\\\"navigateToNotification()\\\" aria-label=\\\"notifications button\\\" alt=\\\"notifications button\\\"></ion-icon>\\n    <ion-badge *ngIf=\\\"badgecount != 0\\\" id=\\\"notifications-badge\\\" color=\\\"danger\\\">{{badgecount}}</ion-badge>\\n  </ion-item>\\n</ion-toolbar>\\n\\n<ion-content>\\n  <ion-item lines=\\\"none\\\" class=\\\"itemColor\\\">\\n    <ion-label>Notification</ion-label>\\n    <ion-toggle checked={{isActive}}  (ionChange)=\\\"onOffNotification($event)\\\"></ion-toggle>\\n  </ion-item>\\n  <p *ngIf=\\\"isActive\\\" class=\\\"note\\\">Note: Turn off to stop receiving push notifications on your mobile device\\n    from i2Talent.</p>\\n  <p *ngIf=\\\"!isActive\\\" class=\\\"note\\\">Note: Turn on to start receiving push notifications on your mobile device\\n    from i2Talent.</p>\\n</ion-content>\"","module.exports = \".note {\\n  color: gray;\\n  text-align: justify;\\n  padding: 0% 5% 0% 4%; }\\n\\n.itemColor {\\n  --background: #f6f6ee; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9zZXR0aW5ncy9zZXR0aW5ncy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLG9CQUFvQixFQUFBOztBQUd4QjtFQUNJLHFCQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zZXR0aW5ncy9zZXR0aW5ncy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm90ZXtcbiAgICBjb2xvcjogZ3JheTtcbiAgICB0ZXh0LWFsaWduOiBqdXN0aWZ5O1xuICAgIHBhZGRpbmc6IDAlIDUlIDAlIDQlO1xufVxuXG4uaXRlbUNvbG9ye1xuICAgIC0tYmFja2dyb3VuZCA6ICNmNmY2ZWU7XG59XG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { MobileAccessibility } from '@ionic-native/mobile-accessibility/ngx';\nimport { TextToSpeech } from '@ionic-native/text-to-speech/ngx';\n\n@Component({\n    selector: 'app-settings',\n    templateUrl: './settings.page.html',\n    styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n    badgecount: any\n    badgeResultData: any\n    isActive: boolean\n\n\n    constructor\n        (\n            private router: Router,\n            public loadingController: LoadingController,\n            private dataServices: DataservicesService,\n            private alertCtrl: AlertController,\n            private tts: TextToSpeech,\n            private mobileAccessibility: MobileAccessibility,\n    ) { }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.getNotificationStatus()\n        this.getNotificationBadgeCount()\n    }\n\n    ionViewDidEnter() {\n        this.mobileAccessibility.isScreenReaderRunning().then(bool => {\n            if (bool) {\n                setTimeout(() => {\n                    this.tts.speak('Create Success Story Screen')\n                        .then(() => console.log('Success'))\n                        .catch((reason: any) => console.log(reason));\n                }, 1000);\n            }\n        })\n    }\n\n    getNotificationBadgeCount() {\n        // this.presentLoading();\n        this.dataServices.getNotificationBadgeCount().then((result) => {\n            console.log(result)\n            this.badgeResultData = result\n            if (this.badgeResultData.status == 1) {\n                // this.loadingController.dismiss();\n                this.badgecount = this.badgeResultData.total_notification_count\n            } else {\n                // this.loadingController.dismiss();\n            }\n        }, error => {\n            // this.loadingController.dismiss();\n            console.log('Error in login: ' + JSON.stringify(error))\n        })\n    }\n\n    navigateToNotification() {\n        this.router.navigate(['/notification'])\n    }\n    //Display loader \n\n    getNotificationStatus() {\n        this.presentLoading()\n        this.dataServices.getNotificationStatus().then((result: any) => {\n            this.loadingController.dismiss();\n            if (result.status == 1) {\n                this.isActive = result.notification_status == \"1\" ? true : false\n            } else {\n                this.presentAlert('', result.message)\n            }\n        }, error => {\n            this.loadingController.dismiss();\n            console.log('Error in login: ' + JSON.stringify(error))\n        })\n    }\n\n    onOffNotification(event) {\n        this.presentLoading()\n        if (this.isActive != event.detail.checked) {\n            this.isActive = event.detail.checked\n            let status = this.isActive == true ? 1 : 0\n            this.dataServices.onOffNotification(status).then((result: any) => {\n                this.loadingController.dismiss();\n                if (result.status == 1) {\n                    if (this.isActive) {\n                        this.presentAlert('', 'Push notifications turn on.')\n                    } else {\n                        this.presentAlert('', 'Push notifications turn off.')\n                    }\n                } else {\n                    this.presentAlert('', result.message)\n                }\n            }, error => {\n                this.loadingController.dismiss();\n                console.log('Error in login: ' + JSON.stringify(error))\n            })\n        }\n\n    }\n\n\n    async presentLoading() {\n        const loading = await this.loadingController.create({\n            message: 'Please wait...',\n            // spinner: null\n        });\n        await loading.present();\n        setTimeout(() => {\n            loading.dismiss();\n        }, 500);\n        const { role, data } = await loading.onDidDismiss();\n        console.log('Loading dismissed!' + role + ' Data: ' + data);\n\n    }//Display Function Ends Here \n\n    async presentAlert(title, message) {\n        const alert = await this.alertCtrl.create({\n            header: title,\n            subHeader: message,\n            buttons: [{\n                text: 'OK',\n                cssClass: 'secondary',\n                handler: (blah) => {\n                    // this.closePage();\n                }\n            }]\n        });\n        await alert.present();\n    }\n\n}"],"sourceRoot":""}