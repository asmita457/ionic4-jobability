{"version":3,"sources":["webpack:///./src/app/updatecontact/updatecontact.module.ts","webpack:///./src/app/updatecontact/updatecontact.page.html","webpack:///./src/app/updatecontact/updatecontact.page.scss","webpack:///./src/app/updatecontact/updatecontact.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEY;AACyB;AAElF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qEAAiB;KAC7B;CACF,CAAC;AAgBF;IAAA;IAAsC,CAAC;IAA1B,uBAAuB;QAdnC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,uBAAuB;gBACvB,kEAAmB,CAAC,UAAU,CAAC,EAAC,4BAA4B,EAAE,OAAO,EAAC,CAAC;gBACvE,gEAAc;gBACd,+DAAa;gBACb,iEAAe;gBACf,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qEAAiB,CAAC;SAClC,CAAC;OACW,uBAAuB,CAAG;IAAD,8BAAC;CAAA;AAAH;;;;;;;;;;;;AC/BpC,+PAA+P,0kDAA0kD,GAAG,o6BAAo6B,GAAG,ynCAAynC,2CAA2C,WAAW,0tBAA0tB,WAAW,uxBAAuxB,WAAW,spDAAspD,WAAW,itBAAitB,WAAW,oqBAAoqB,WAAW,8b;;;;;;;;;;;ACAr9Q,oCAAoC,iBAAiB,wBAAwB,4BAA4B,oBAAoB,gBAAgB,iBAAiB,qBAAqB,wBAAwB,EAAE,gBAAgB,oBAAoB,wBAAwB,EAAE,kBAAkB,wBAAwB,EAAE,eAAe,eAAe,EAAE,iBAAiB,iBAAiB,EAAE,+CAA+C,m+D;;;;;;;;;;;;;;;;;;;;;;ACAhX;AAC2B;AACrB;AACP;AACE;AAEF;AASzD;IAiDE,2BACU,YAAiC,EACjC,SAA0B,EAC1B,cAA8B,EAC9B,MAAc,EACf,iBAAoC,EACpC,WAAwB,EACxB,OAAsB;QANrB,iBAAY,GAAZ,YAAY,CAAqB;QACjC,cAAS,GAAT,SAAS,CAAiB;QAC1B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QACf,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,gBAAW,GAAX,WAAW,CAAa;QACxB,YAAO,GAAP,OAAO,CAAe;QAtD/B,kBAAa,GAAY,KAAK;QAE9B,oBAAe,GAAG,EAAE;QAKpB,kBAAa,GAAQ,EAAE,CAAC;QAGxB,eAAU,GAAW,sBAAsB;QAC3C,sBAAiB,GAAW,8BAA8B;QAC1D,uBAAkB,GAAW,+BAA+B;QAC5D,gBAAW,GAAW,uBAAuB;QAC7C,cAAS,GAAW,qBAAqB;QACzC,aAAQ,GAAW,oBAAoB;QAGvC,wBAAmB,GAAQ,EAAE;QAC7B,oBAAoB;QACpB,6BAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAChD,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAC3G,MAAM,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACjC,aAAa,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,UAAU,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAChC,CAAC,CAAC;QAEH,uBAAkB,GAAQ;YACxB,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE;YACzB,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,aAAa,EAAE;SACjC,CAAC;QAEF,8BAAyB,GAAQ;YAC/B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;YAC3B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE;YAC7B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,SAAS,EAAE;YAC5B,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,WAAW,EAAE;SAC/B,CAAC;QAYA,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,4CAAgB,GAAhB;IAEA,CAAC;IAED,oCAAQ,GAAR;IAEA,CAAC;IAED,sCAAU,GAAV;QAEE,IAAM,WAAW,GAAG,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAChD,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;QACzD,IAAI,CAAC,iBAAiB,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAEnE,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,IAAI,EAAE,EAAE;YACtC,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACxE;QAED,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,EAAE,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,CAAC;YAC1F,CAAC,IAAI,CAAC,iBAAiB,IAAI,EAAE,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI,IAAI,IAAI,CAAC,iBAAiB,IAAI,SAAS,CAAC,EAAE;YACzG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;SAChE;QACD,IAAI,CAAC,6BAA6B,EAAE;IAEtC,CAAC;IAGD,yDAA6B,GAA7B;QAEE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE;gBAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI;aAClD;SACF;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE;gBACzE,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,IAAI;aAChE;SACF;QAED,IAAI,CAAC,mBAAmB,GAAG,EAAE;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC5D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACpD,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE;oBACjE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;iBAC5D;aACF;SACF;QACD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE;IAC/D,CAAC;IAED,kCAAkC;IAElC,4CAA4C;IAC5C,0CAAc,GAAd,UAAe,MAAM;QACnB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvD,IAAI,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,EAAE;gBAC3C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,IAAI;aAClD;SACF;IACH,CAAC;IAED,iDAAqB,GAArB,UAAsB,MAAM;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAC9D,IAAI,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,EAAE;gBAClD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,IAAI;aAChE;SACF;IACH,CAAC;IAED,gDAAoB,GAApB,UAAqB,EAAE;QACrB,IAAI,CAAC,mBAAmB,GAAG,EAAE;QAC7B,IAAI,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACjB,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;oBACpD,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE;wBACvC,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;qBAC5D;iBACF;aACF;SACF;QAED,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE;IAC/D,CAAC;IAED,0CAAc,GAAd,UAAe,YAAY,EAAE,iBAAiB;QAC5C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC;QAC9E,IAAI,CAAC,4BAA4B,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC,YAAY,CAAC;QAE1E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjE,IAAI,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACrE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,IAAI;aAC7D;SACF;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,EAAE;YAC7B,IAAI,CAAC,iCAAiC,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC3F,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iCAAiC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtE,IAAI,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;oBACxE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,IAAI;oBAC/D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,IAAI;iBACpE;aACF;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;oBACnD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI;iBAC3C;aACF;SACF;IACH,CAAC,EAAC,2BAA2B;IAE7B,gDAAoB,GAApB,UAAqB,SAAS;QAC5B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE;QACxB,IAAI,CAAC,SAAS,GAAG,qBAAqB;QACtC,IAAI,CAAC,QAAQ,GAAG,oBAAoB;QACpC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACjE,IAAI,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;gBACrE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,IAAI;aAC7D;SACF;IACH,CAAC;IAED,+CAAmB,GAAnB,UAAoB,OAAO;QACzB,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE;QACxB,IAAI,CAAC,QAAQ,GAAG,oBAAoB;QACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,iCAAiC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACtE,IAAI,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,OAAO,EAAE;gBAC3D,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,IAAI;gBACnE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iCAAiC,CAAC,CAAC,CAAC,CAAC,IAAI;aAChE;SACF;IACH,CAAC;IAED,6CAAiB,GAAjB,UAAkB,IAAI;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClD,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,IAAI,EAAE;gBACpC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI;aAC3C;SACF;IACH,CAAC;IAED,6CAA6C;IAE7C,qCAAS,GAAT,UAAU,SAAS;QAAnB,iBAYC;QAXC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;YACnD,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;gBACnB,KAAI,CAAC,iCAAiC,GAAG,EAAE,CAAC;gBAC5C,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,CAAC;gBACnC,KAAI,CAAC,iCAAiC,GAAG,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC;aAClE;QACH,CAAC,EAAE,eAAK;YACN,OAAO,CAAC,GAAG,CAAC,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEzD,CAAC,CAAC;IACJ,CAAC;IAED,+CAAmB,GAAnB,UAAoB,YAAY;QAAhC,iBAuBC;QArBC,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE;YACzC,IAAI,CAAC,aAAa,GAAG,IAAI;YACzB,OAAM;SACP;aACI;YACH,IAAI,CAAC,cAAc,EAAE;YACrB,IAAI,CAAC,aAAa,GAAG,KAAK;YAC1B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,YAAY,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,UAAC,GAAQ;gBAC/E,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACjC,IAAI,GAAG,CAAC,MAAM,IAAI,CAAC,EAAE;oBACnB,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;iBACpC;qBACI;oBACH,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;iBACpC;YACH,CAAC,EAAE,UAAC,KAAK;gBACP,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;SAEJ;IACH,CAAC;IAED,qCAAS,GAAT;QACE,qCAAqC;QACrC,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;IACxC,CAAC;IAEK,wCAAY,GAAlB,UAAmB,KAAK,EAAE,OAAO;;;;;;4BACjB,qBAAM,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;4BACxC,MAAM,EAAE,KAAK;4BACb,SAAS,EAAE,OAAO;4BAClB,OAAO,EAAE,CAAC;oCACR,IAAI,EAAE,IAAI;oCACV,QAAQ,EAAE,WAAW;oCACrB,OAAO,EAAE,UAAC,IAAI;wCACZ,KAAI,CAAC,SAAS,EAAE,CAAC;oCACnB,CAAC;iCACF,CAAC;yBACH,CAAC;;wBAVI,KAAK,GAAG,SAUZ;wBACF,qBAAM,KAAK,CAAC,OAAO,EAAE;;wBAArB,SAAqB,CAAC;;;;;KACvB;IAGD,iBAAiB;IACX,0CAAc,GAApB;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,OAAO,EAAE,gBAAgB;yBAE1B,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;;;;;KACzB,+BAA6B;IAE9B,4CAAgB,GAAhB;QACE,IAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;IACnC,CAAC;IA3RU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,iHAAwC;;SAEzC,CAAC;+EAmDwB,gGAAmB;YACtB,8DAAe;YACV,8DAAc;YACtB,sDAAM;YACI,gEAAiB;YACvB,0DAAW;YACf,4DAAa;OAxDpB,iBAAiB,CA4R7B;IAAD,wBAAC;CAAA;AA5R6B;AA8R9B,kEAAkE;AAClE;IAAA;IAKA,CAAC;IAJC,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,OAAO,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;IAC7F,CAAC;IACH,0BAAC;AAAD,CAAC","file":"updatecontact-updatecontact-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdatecontactPage } from './updatecontact.page';\nimport { MatInputModule, MatIconModule,MatSelectModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdatecontactPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    // ReactiveFormsModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdatecontactPage]\n})\nexport class UpdatecontactPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Contact Information</ion-title>\\n  </ion-item>\\n</ion-toolbar>\\n\\n<ion-content>\\n\\n  <!-- <div class=\\\"cameraBacground\\\">\\n    <ion-icon class=\\\"cameraIcon\\\" ios=\\\"ios-camera\\\" md=\\\"md-camera\\\"></ion-icon>\\n  </div> -->\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-content>\\n      <div class=\\\"formPadding\\\">\\n        <form [formGroup]=\\\"updateContactDetailsForm\\\" (ngSubmit)=\\\"updateContactDetail(updateContactDetailsForm.value)\\\">\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <input matInput placeholder=\\\"Name\\\" [(ngModel)]=\\\"dataArray.name\\\" formControlName=\\\"name\\\"\\n              [errorStateMatcher]=\\\"esMatcher\\\" pattern=\\\"^[a-zA-Z]+[\\\\-'\\\\s]?[a-zA-Z ]+$\\\">\\n            <mat-icon matSuffix color=\\\"warn\\\"\\n              *ngIf=\\\"(updateContactDetailsForm.controls.name.invalid && updateContactDetailsForm.controls.name.touched) || (updateContactDetailsForm.controls.name.invalid && showErrorIcon && !updateContactDetailsForm.controls.name.touched)\\\">\\n              error\\n            </mat-icon>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.name.errors?.required\\\">Name is required.</span>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.name.errors?.pattern\\\">Please enter valid name.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"dataArray.email\\\" formControlName=\\\"email\\\"\\n              [errorStateMatcher]=\\\"esMatcher\\\" pattern=\\\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,}$\\\">\\n            <mat-icon matSuffix color=\\\"warn\\\"\\n              *ngIf=\\\"(updateContactDetailsForm.controls.email.invalid && updateContactDetailsForm.controls.email.touched) || (updateContactDetailsForm.controls.email.invalid && showErrorIcon && !updateContactDetailsForm.controls.email.touched)\\\">\\n              error\\n            </mat-icon>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.email.errors?.required\\\">Email is required.</span>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.email.errors?.pattern\\\">Please enter valid email\\n                address.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <input type=\\\"tel\\\" matInput placeholder=\\\"Mobile\\\" [(ngModel)]=\\\"dataArray.mobile\\\" formControlName=\\\"mobile\\\"\\n              [errorStateMatcher]=\\\"esMatcher\\\" pattern=\\\"^[0-9]{10}$\\\">\\n            <mat-icon matSuffix color=\\\"warn\\\"\\n              *ngIf=\\\"(updateContactDetailsForm.controls.mobile.invalid && updateContactDetailsForm.controls.mobile.touched) || (updateContactDetailsForm.controls.mobile.invalid  && showErrorIcon && !updateContactDetailsForm.controls.mobile.touched)\\\">\\n              error</mat-icon>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.mobile.errors?.required\\\">Mobile number is required.</span>\\n              <span\\n                *ngIf=\\\"updateContactDetailsForm.controls.mobile.errors?.minlength || updateContactDetailsForm.controls.mobile.errors?.maxlength\\\">Please\\n                enter valid mobile number.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>Gender</mat-label>\\n            <mat-select formControlName=\\\"gender\\\" [errorStateMatcher]=\\\"esMatcher\\\" [(ngModel)]=\\\"dataArray.gender\\\"\\n              (selectionChange)=\\\"selectedGender($event.value)\\\" [aria-label]=\\\"readGender\\\">\\n              <mat-option *ngFor=\\\"let item of contactGenderArray;\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.gender.errors?.required\\\">Gender is required.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>Marital Status</mat-label>\\n            <mat-select formControlName=\\\"maritalStatus\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              [(ngModel)]=\\\"dataArray.marritalStatus\\\" (selectionChange)=\\\"selectedMaritalStatus($event.value)\\\"\\n              [aria-label]=\\\"readMaritalStatus\\\">\\n              <mat-option *ngFor=\\\"let item of contactMaritalStatusArray\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.maritalStatus.errors?.required\\\">Marital status is\\n                required.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>Disability Type</mat-label>\\n            <mat-select role=\\\"listbox\\\" formControlName=\\\"disability\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              [(ngModel)]=\\\"dataArray.disability_id\\\" multiple (selectionChange)=\\\"selectedDisabilities($event.value)\\\"\\n              [aria-label]=\\\"readDisabilityType\\\">\\n              <mat-option role=\\\"option\\\" *ngFor=\\\"let item of disability_list\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.disability.errors?.required\\\">Please select at least one\\n                disability type.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n        \\n          <mat-form-field class=\\\"inputFields\\\">\\n            <textarea matInput placeholder=\\\"Address\\\" [(ngModel)]=\\\"dataArray.address\\\" formControlName=\\\"address\\\"\\n              [errorStateMatcher]=\\\"esMatcher\\\" pattern=\\\".*[^ ].*\\\"></textarea>\\n            <mat-icon matSuffix color=\\\"warn\\\"\\n              *ngIf=\\\"(updateContactDetailsForm.controls.address.invalid && updateContactDetailsForm.controls.address.touched) || (updateContactDetailsForm.controls.address.invalid && showErrorIcon && !updateContactDetailsForm.controls.address.touched)\\\">\\n              error\\n            </mat-icon>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.address.errors?.required\\\">Address is required.</span>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.address.errors?.pattern\\\">Please enter valid address.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>Country</mat-label>\\n            <mat-select formControlName=\\\"country\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              (selectionChange)=\\\"selectedCountryValue($event.value)\\\" [(ngModel)]=\\\"dataArray.country\\\"\\n              [aria-label]=\\\"readCountry\\\">\\n              <mat-option *ngFor=\\\"let item of countryArrayFromLocalStorage\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.country.errors?.required\\\">Country is\\n                required.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>State</mat-label>\\n            <mat-select formControlName=\\\"state\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              (selectionChange)=\\\"selectedStatesValue($event.value)\\\" [(ngModel)]=\\\"dataArray.state\\\"\\n              [aria-label]=\\\"readState\\\">\\n              <mat-option *ngFor=\\\"let item of cityAndStateArrayFromLocalStorage\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.state.errors?.required\\\">State is\\n                required.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>City</mat-label>\\n            <mat-select formControlName=\\\"city\\\" [errorStateMatcher]=\\\"esMatcher\\\" [(ngModel)]=\\\"dataArray.city\\\"\\n              (selectionChange)=\\\"selectedCityValue($event.value)\\\" [aria-label]=\\\"readCity\\\">\\n              <mat-option *ngFor=\\\"let item of cityNameArray\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateContactDetailsForm.controls.city.errors?.required\\\">City is\\n                required.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <button type=\\\"submit\\\" class=\\\"buttonfont selector loginButton\\\">SAVE</button>\\n        </form>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n</ion-content>\"","module.exports = \".profile-picture {\\n  padding: 3px;\\n  border-radius: 100%;\\n  box-sizing: content-box;\\n  margin: 5% auto;\\n  width: 80px;\\n  height: 80px;\\n  overflow: hidden;\\n  background: #d6d1c3; }\\n\\n.ionSelect {\\n  min-width: 100%;\\n  --padding-start: 0%; }\\n\\n.itemPadding {\\n  --padding-start: 0%; }\\n\\n.redlabel {\\n  color: red; }\\n\\n.blacklabel {\\n  color: black; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC91cGRhdGVjb250YWN0L3VwZGF0ZWNvbnRhY3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksWUFBWTtFQUNaLG1CQUFtQjtFQUduQix1QkFBdUI7RUFDdkIsZUFBZTtFQUNmLFdBQVc7RUFDWCxZQUFZO0VBQ1osZ0JBQWdCO0VBQ2hCLG1CQUFtQixFQUFBOztBQUlyQjtFQUNJLGVBQWU7RUFDakIsbUJBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsbUJBQWdCLEVBQUE7O0FBRWxCO0VBQ0UsVUFBVSxFQUFBOztBQUdaO0VBQ0UsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvdXBkYXRlY29udGFjdC91cGRhdGVjb250YWN0LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wcm9maWxlLXBpY3R1cmUge1xuICAgIHBhZGRpbmc6IDNweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4gICAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgICBtYXJnaW46IDUlIGF1dG87XG4gICAgd2lkdGg6IDgwcHg7XG4gICAgaGVpZ2h0OiA4MHB4O1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZDogI2Q2ZDFjMztcblxuICB9XG4gIFxuICAuaW9uU2VsZWN0e1xuICAgICAgbWluLXdpZHRoOiAxMDAlO1xuICAgIC0tcGFkZGluZy1zdGFydDogMCU7XG4gIH1cblxuICAuaXRlbVBhZGRpbmd7XG4gICAgLS1wYWRkaW5nLXN0YXJ0OiAwJTtcbiAgfVxuICAucmVkbGFiZWx7XG4gICAgY29sb3I6IHJlZDtcbiAgfVxuXG4gIC5ibGFja2xhYmVse1xuICAgIGNvbG9yOiBibGFjaztcbiAgfVxuXG5cbi8vICAgLmNhbWVyYUJhY2dyb3VuZHtcbi8vICAgICBib3JkZXI6IDFweCBzb2xpZCAjZmNlZmVmZTc7XG4vLyAgICAgcGFkZGluZzogMTBweDtcbi8vICAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xuLy8gICAgIC13ZWJraXQtYm94LXNpemluZzogY29udGVudC1ib3g7XG4vLyAgICAgLW1vei1ib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbi8vICAgICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbi8vICAgICB3aWR0aDogMTVweDtcbi8vICAgICBoZWlnaHQ6IDE1cHg7XG4vLyAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbi8vICAgICBiYWNrZ3JvdW5kOiAjZDZkMWMzO1xuLy8gICAgIG1hcmdpbi1sZWZ0OiA1MyU7XG4vLyAgICAgcG9zaXRpb246IGFic29sdXRlO1xuLy8gICB9XG5cbi8vIC5jYW1lcmFJY29ue1xuLy8gICAgIHpvb206IDIuMDtcbi8vICAgICBkaXNwbGF5OiBjb250ZW50cztcbi8vICAgfVxuXG4vLyA6Om5nLWRlZXAgLm1hdC1zZWxlY3QtY29udGVudHtcbi8vICAgd2lkdGg6MjAwMHB4O1xuLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XG4vLyAgIGZvbnQtc2l6ZTogMTBweDsgICBcbi8vIH0iXX0= */\"","import { Component, OnInit, NgZone } from '@angular/core';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Events, LoadingController } from '@ionic/angular';\n\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Component({\n  selector: 'app-updatecontact',\n  templateUrl: './updatecontact.page.html',\n  styleUrls: ['./updatecontact.page.scss'],\n})\nexport class UpdatecontactPage implements OnInit {\n\n  showErrorIcon: boolean = false\n  dataArray: any\n  disability_list = []\n  uacc_id: any\n  countryArray: any\n  stateAndCityArray: any\n  countryArrayFromLocalStorage: any;\n  cityNameArray: any = [];\n  cityAndStateArrayFromLocalStorage: any;\n\n  readGender: string = 'Please select gender'\n  readMaritalStatus: string = 'Please select marital status'\n  readDisabilityType: string = 'Please select disability type'\n  readCountry: string = 'Please select country'\n  readState: string = 'Please select state'\n  readCity: string = 'Please select city'\n\n\n  disabilityNameArray: any = []\n  // Forms declaration\n  updateContactDetailsForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    email: ['', Validators.required],\n    mobile: ['', Validators.compose([Validators.required, Validators.minLength(10), Validators.maxLength(10)])],\n    gender: ['', Validators.required],\n    maritalStatus: ['', Validators.required],\n    disability: ['', Validators.required],\n    address: ['', Validators.required],\n    country: ['', Validators.required],\n    state: ['', Validators.required],\n    city: ['', Validators.required],\n  });\n\n  contactGenderArray: any = [\n    { id: 'm', name: 'Male' },\n    { id: 'f', name: 'Female' },\n    { id: 't', name: 'Transgender' },\n  ];\n\n  contactMaritalStatusArray: any = [\n    { id: '1', name: 'Single' },\n    { id: '2', name: 'Married' },\n    { id: '3', name: 'Divorced' },\n    { id: '4', name: 'Widowed' },\n    { id: '5', name: 'Separated' },\n  ];\n\n  constructor(\n    private dataServices: DataservicesService,\n    private alertCtrl: AlertController,\n    private activatedRoute: ActivatedRoute,\n    private router: Router,\n    public loadingController: LoadingController,\n    public formBuilder: FormBuilder,\n    public navCtrl: NavController\n  ) {\n\n    this.onPageLoad();\n  }\n\n  ionViewWillEnter() {\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  onPageLoad() {\n\n    const contactInfo = (this.activatedRoute.snapshot.paramMap.get('seekerContactInfo'));\n    this.dataArray = JSON.parse(contactInfo);\n    this.uacc_id = localStorage.getItem(\"users_id\");\n    this.countryArray = localStorage.getItem(\"countryArray\");\n    this.stateAndCityArray = localStorage.getItem(\"stateAndCityArray\");\n\n    if (this.dataArray.disability_id != '') {\n      this.dataArray.disability_id = this.dataArray.disability_id.split(\",\");\n    }\n\n    if ((this.countryArray != '' || this.countryArray != null || this.countryArray != undefined) &&\n      (this.stateAndCityArray != '' || this.stateAndCityArray != null || this.stateAndCityArray != undefined)) {\n      this.setDefaultCity(this.countryArray, this.stateAndCityArray);\n    }\n    this.getStringDataForAccessability()\n\n  }\n\n\n  getStringDataForAccessability() {\n\n    for (let i = 0; i < this.contactGenderArray.length; i++) {\n      if (this.contactGenderArray[i].id == this.dataArray.gender) {\n        this.readGender = this.contactGenderArray[i].name\n      }\n    }\n\n    for (let i = 0; i < this.contactMaritalStatusArray.length; i++) {\n      if (this.contactMaritalStatusArray[i].id == this.dataArray.marritalStatus) {\n        this.readMaritalStatus = this.contactMaritalStatusArray[i].name\n      }\n    }\n\n    this.disabilityNameArray = []\n    for (let i = 0; i < this.dataArray.disability_id.length; i++) {\n      for (let j = 0; j < this.disability_list.length; j++) {\n        if (this.disability_list[j].id == this.dataArray.disability_id[i]) {\n          this.disabilityNameArray.push(this.disability_list[j].name)\n        }\n      }\n    }\n    this.readDisabilityType = this.disabilityNameArray.toString()\n  }\n\n  //OnChange Functions for DropDowns\n\n  // Function for showing selected value city.\n  selectedGender(gender) {\n    for (let i = 0; i < this.contactGenderArray.length; i++) {\n      if (this.contactGenderArray[i].id == gender) {\n        this.readGender = this.contactGenderArray[i].name\n      }\n    }\n  }\n\n  selectedMaritalStatus(status) {\n    for (let i = 0; i < this.contactMaritalStatusArray.length; i++) {\n      if (this.contactMaritalStatusArray[i].id == status) {\n        this.readMaritalStatus = this.contactMaritalStatusArray[i].name\n      }\n    }\n  }\n\n  selectedDisabilities(id) {\n    this.disabilityNameArray = []\n    if (id.length > 0) {\n      this.showErrorIcon = false;\n      for (let i = 0; i < id.length; i++) {\n        for (let j = 0; j < this.disability_list.length; j++) {\n          if (this.disability_list[j].id == id[i]) {\n            this.disabilityNameArray.push(this.disability_list[j].name)\n          }\n        }\n      }\n    } \n\n    this.readDisabilityType = this.disabilityNameArray.toString()\n  }\n\n  setDefaultCity(countryArray, stateAndCityArray) {\n    this.disability_list = JSON.parse(stateAndCityArray).ddl_list.disability_list;\n    this.countryArrayFromLocalStorage = JSON.parse(countryArray).country_list;\n\n    for (let i = 0; i < this.countryArrayFromLocalStorage.length; i++) {\n      if (this.countryArrayFromLocalStorage[i].id == this.dataArray.country) {\n        this.readCountry = this.countryArrayFromLocalStorage[i].name\n      }\n    }\n\n    if (this.dataArray.state != 0) {\n      this.cityAndStateArrayFromLocalStorage = JSON.parse(stateAndCityArray).ddl_list.state_list;\n      for (let i = 0; i < this.cityAndStateArrayFromLocalStorage.length; i++) {\n        if (this.cityAndStateArrayFromLocalStorage[i].id == this.dataArray.state) {\n          this.readState = this.cityAndStateArrayFromLocalStorage[i].name\n          this.cityNameArray = this.cityAndStateArrayFromLocalStorage[i].city\n        }\n      }\n\n      for (let i = 0; i < this.cityNameArray.length; i++) {\n        if (this.cityNameArray[i].id == this.dataArray.city) {\n          this.readCity = this.cityNameArray[i].name\n        }\n      }\n    }\n  } //setDefaultCity Ends Here;\n\n  selectedCountryValue(countryId) {\n    this.dataArray.state = ''\n    this.dataArray.city = ''\n    this.readState = 'Please select state'\n    this.readCity = 'Please select city'\n    this.getDDLAPI(countryId);\n    for (let i = 0; i < this.countryArrayFromLocalStorage.length; i++) {\n      if (this.countryArrayFromLocalStorage[i].id == this.dataArray.country) {\n        this.readCountry = this.countryArrayFromLocalStorage[i].name\n      }\n    }\n  }\n\n  selectedStatesValue(stateId) {\n    this.dataArray.city = ''\n    this.readCity = 'Please select city'\n    for (let i = 0; i < this.cityAndStateArrayFromLocalStorage.length; i++) {\n      if (this.cityAndStateArrayFromLocalStorage[i].id == stateId) {\n        this.cityNameArray = this.cityAndStateArrayFromLocalStorage[i].city\n        this.readState = this.cityAndStateArrayFromLocalStorage[i].name\n      }\n    }\n  }\n\n  selectedCityValue(city) {\n    for (let i = 0; i < this.cityNameArray.length; i++) {\n      if (this.cityNameArray[i].id == city) {\n        this.readCity = this.cityNameArray[i].name\n      }\n    }\n  }\n\n  //OnChange Functions For DropDowns Ends Here.\n\n  getDDLAPI(CountryID) {\n    this.dataServices.getDDLAPI(CountryID).then((res: any) => {\n      if (res.status == 1) {\n        this.cityAndStateArrayFromLocalStorage = [];\n        localStorage.setItem(\"stateAndCityArray\", JSON.stringify(res));\n        this.dataArray.country = CountryID;\n        this.cityAndStateArrayFromLocalStorage = res.ddl_list.state_list;\n      }\n    }, error => {\n      console.log('Error in login: ' + JSON.stringify(error))\n\n    })\n  }\n\n  updateContactDetail(formDeatails) {\n\n    if (this.updateContactDetailsForm.invalid) {\n      this.showErrorIcon = true\n      return\n    }\n    else {\n      this.presentLoading()\n      this.showErrorIcon = false\n      this.dataServices.updateContactInfoAPI(formDeatails, this.uacc_id).then((res: any) => {\n        this.loadingController.dismiss();\n        if (res.status == 1) {\n          this.presentAlert(res.message, '');\n        }\n        else {\n          this.presentAlert(res.message, '');\n        }\n      }, (error) => {\n        this.loadingController.dismiss();\n        console.log(error);\n      });\n\n    }\n  }\n\n  closePage() {\n    // this.router.navigate(['/profile'])\n    this.navCtrl.navigateRoot('/profile');\n  }\n\n  async presentAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      subHeader: message,\n      buttons: [{\n        text: 'OK',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          this.closePage();\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n\n  //Display loader \n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n  }//Display Function Ends Here \n\n  ionViewWillLeave() {\n    this.loadingController.dismiss();\n  }\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n"],"sourceRoot":""}