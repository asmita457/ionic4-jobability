{"version":3,"sources":["webpack:///./src/app/employerjobdetail/employerjobdetail.module.ts","webpack:///./src/app/employerjobdetail/employerjobdetail.page.html","webpack:///./src/app/employerjobdetail/employerjobdetail.page.scss","webpack:///./src/app/employerjobdetail/employerjobdetail.page.ts"],"names":[],"mappings":"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","file":"employerjobdetail-employerjobdetail-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmployerjobdetailPage } from './employerjobdetail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployerjobdetailPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmployerjobdetailPage]\n})\nexport class EmployerjobdetailPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Job Detail</ion-title>\\n    <ion-icon ios=\\\"ios-trash\\\" md=\\\"md-trash\\\" (click)=\\\"presentAlertForDelete()\\\"></ion-icon>\\n  </ion-item>\\n</ion-toolbar>\\n\\n\\n<ion-content>\\n\\n\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1\\\">JOB DETAIL</ion-label>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"\\\">\\n            <ion-label class=\\\"headingLabel\\\">Job Title:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Job Description:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.job_desciption}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Disability Accepted:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.disability_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Work Experience:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.min_experience}} - {{employerJobDetailArray.max_experience}} years</ion-label>\\n            <br>\\n            <div *ngIf=\\\"hideSalary\\\">\\n            <ion-label class=\\\"headingLabel\\\">Annual Salary:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.annual_ctc_to}} - {{employerJobDetailArray.annual_ctc_to}}</ion-label>\\n            <br></div>\\n            <!-- <ion-label class=\\\"headingLabel\\\">Hide Salary from Jobseekers:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.hide_salary}}</ion-label>\\n            <br> -->\\n            <ion-label class=\\\"headingLabel\\\">Number of Vacancies:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.number_of_vacancies}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Last date for Applying:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.expiry_date}}</ion-label>\\n          </ion-col>\\n        \\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1\\\">JOB LOCATION</ion-label>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"headingLabel\\\">Job in Country:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.country_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Job District/City:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.location_name}}</ion-label>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1\\\">JOB REQUIREMENT</ion-label>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"headingLabel\\\">Industry:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.industry_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Functional Area:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.functional_area}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Job Role:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.job_role}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Qualification:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.qualification_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Skills:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.key_skills}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Reference Code:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.reference_code}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Candidate Profile:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.candidate_profile}}</ion-label>\\n            <br>\\n\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1\\\">RECEIVE RESPONSES ON: EMAIL/WALK-IN</ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding\\\">\\n      <ion-grid>\\n        <ion-row>\\n\\n            <ion-col size=\\\"12\\\" *ngIf=\\\"manageResponsesEmail\\\">    \\n                <ion-label class=\\\"headingLabel\\\">Email1:</ion-label>\\n                <br>\\n                <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.email}}</ion-label>\\n                <br>\\n                <ion-label class=\\\"headingLabel\\\">Email2:</ion-label>\\n                <br>\\n                <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.business_email}}</ion-label>\\n                <br>\\n                <ion-label class=\\\"headingLabel\\\">display this email Id to applicant:</ion-label>\\n                <br>\\n                <ion-label class=\\\"contentInfo\\\">{{applicantDisaply}}</ion-label>\\n                <br>\\n              </ion-col>\\n\\n          <ion-col size=\\\"12\\\" *ngIf=\\\"manageResponsesWalkin\\\">\\n\\n            <ion-label class=\\\"headingLabel\\\">Walk-In</ion-label><br>\\n\\n            <ion-label class=\\\"headingLabel\\\">From Date:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.walkin_from_date}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">To Date:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.walkin_to_date}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Start Time:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.walkin_from_time}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">End Time:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.walkin_to_time}}</ion-label>\\n            <br>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n\\n  </ion-card>\\n\\n\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1\\\">CONTACT DETAIL</ion-label>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\" *ngIf=\\\"contactDetailShow\\\">\\n\\n            <ion-label class=\\\"headingLabel\\\">Company Name:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.company_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">About Company:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.company_description}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Company Website:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.company_website}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Contact Person:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.person_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Address:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.company_address}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Country:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.country_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">State/Province:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.state_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">District/City:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.city_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">ZIP/PIN Code:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.company_pincode}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Mobile:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.mobile}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Phone:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{employerJobDetailArray.phone}}</ion-label>\\n          </ion-col>\\n\\n          <ion-col size=\\\"12\\\" *ngIf=\\\"contactDetailHide\\\">\\n            <ion-label>The employer has not shared their contact details</ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n  \\n</ion-content>\"","module.exports = \".headingLabel {\\n  color: #2b0c43;\\n  font-size: 12px;\\n  font-weight: bold; }\\n\\n.contentInfo {\\n  font-size: 15px;\\n  color: #2b0c43;\\n  display: inline-block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9lbXBsb3llcmpvYmRldGFpbC9lbXBsb3llcmpvYmRldGFpbC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxjQUFhO0VBQ2IsZUFBYztFQUNkLGlCQUFnQixFQUFBOztBQUdoQjtFQUNBLGVBQWM7RUFDZCxjQUFhO0VBQ2IscUJBQXFCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9lbXBsb3llcmpvYmRldGFpbC9lbXBsb3llcmpvYmRldGFpbC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaGVhZGluZ0xhYmVse1xuICAgIGNvbG9yOiMyYjBjNDM7XG4gICAgZm9udC1zaXplOjEycHg7XG4gICAgZm9udC13ZWlnaHQ6Ym9sZDtcbiAgICB9XG4gICAgXG4gICAgLmNvbnRlbnRJbmZve1xuICAgIGZvbnQtc2l6ZToxNXB4O1xuICAgIGNvbG9yOiMyYjBjNDM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH1cbiAgIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employerjobdetail',\n  templateUrl: './employerjobdetail.page.html',\n  styleUrls: ['./employerjobdetail.page.scss'],\n})\nexport class EmployerjobdetailPage implements OnInit {\n\n  uacc_id: any\n  id: any\n  employerJobDetailResponse: any\n  employerJobDetailArray = []\n  jobId: any\n  manageResponsesWalkin = false\n  manageResponsesEmail = false\n  walkinFromDate: any\n  walkin_to_date: any\n  applicants_display: any\n  hide_salary: any\n  hideSalary = true\n  show_contact: any\n  contactDetailShow = true\n  contactDetailHide = false\n  employerJobDeleteAPIResponse: any\n  applicantDisaply: any\n\n  constructor(\n    private location: Location,\n    public loadingController: LoadingController,\n    private dataServices: DataservicesService,\n    private alertCtrl: AlertController,\n    private activatedRoute: ActivatedRoute,\n    private router: Router) { }\n\n  ngOnInit() {\n    // this.jobId = (this.activatedRoute.snapshot.paramMap.get('jobId'));\n    // console.log('resumeId:', this.jobId)\n    // this.getJobDetail();\n  }\n\n  ionViewWillEnter(){\n    this.jobId = (this.activatedRoute.snapshot.paramMap.get('jobId'));\n    console.log('resumeId:', this.jobId)\n    this.getJobDetail();\n\n  }\n\n\n  getJobDetail(){\n    this.uacc_id = 0\n    this.presentLoading();\n    this.dataServices.getEmployerJobDetailAPI(this.jobId, this.uacc_id).then((result) => {\n      this.employerJobDetailResponse = result;\n      if (this.employerJobDetailResponse.status == 1) {\n        this.loadingController.dismiss(); \n        this.employerJobDetailArray = this.employerJobDetailResponse.job_details_data[0]\n        this.walkinFromDate =this.employerJobDetailResponse.job_details_data[0].walkin_from_date;\n        this.walkin_to_date = this.employerJobDetailResponse.job_details_data[0].walkin_to_date;\n        this.applicants_display = this.employerJobDetailResponse.job_details_data[0].applicants_display\n        this.hide_salary = this.employerJobDetailResponse.job_details_data[0].hide_salary;\n        this.show_contact = this.employerJobDetailResponse.job_details_data[0].show_contact;\n\n        if((this.walkinFromDate == 0 && this.walkin_to_date == 0) || this.applicants_display == 1)\n        {\n          this.manageResponsesEmail = true;\n          this.manageResponsesWalkin = false;\n        }\n        else{\n          this.manageResponsesEmail = false;\n          this.manageResponsesWalkin = true;\n        }\n\n        if(this.applicants_display == 0)\n        {\n          this.applicantDisaply = \"Show\"\n        }\n        else\n        {\n          this.applicantDisaply = \"Hide\"\n        }\n\n      if(this.hide_salary == 1)\n      {\n        this.hideSalary = false\n      }\n\n      if(this.show_contact == 1)\n      {\n        this.contactDetailHide = true;\n        this.contactDetailShow = false;\n      }\n      else\n      {\n        this.contactDetailHide = false;\n        this.contactDetailShow = true;\n      }\n        // this.presentAlert('', this.employerJobDetailResponse.message);\n\n      } else {\n        this.loadingController.dismiss();\n        // this.presentAlert('', this.employerJobDetailResponse.message);\n      }\n    }, error => {\n      this.loadingController.dismiss();\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n\n  deleteJobDetail(){\n\n\n    this.presentLoading();\n    this.dataServices.deleteEmployerJobDetailAPI(this.jobId).then((result) => {\n      this.employerJobDeleteAPIResponse = result;\n      if (this.employerJobDeleteAPIResponse.status == 1) {\n        this.loadingController.dismiss(); \n        // this.employerJobDetailArray = this.employerJobDeleteAPIResponse\n       \n        this.presentAlert('', this.employerJobDeleteAPIResponse.message);\n\n      } else {\n        this.loadingController.dismiss();\n        this.presentAlert('', this.employerJobDeleteAPIResponse.message);\n      }\n    }, error => {\n      this.loadingController.dismiss();\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n\n  async presentAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      subHeader: message,\n      buttons: [{\n        text: 'OK',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          this.router.navigate(['/joblistingemployee'])        }\n      }]\n    });\n    await alert.present();\n  }\n\nasync presentAlertForDelete() {\n    const alert = await this.alertCtrl.create({\n      subHeader: \"Are you sure you want to delete?\",\n      buttons: [{\n        text: 'Cancel',\n        cssClass: 'secondary',\n        role: 'cancel'\n      },\n      {\n        text: 'OK',\n        cssClass: 'secondary',\n        handler: _ => {\n          //api call\n\n          this.deleteAPICall();\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n  deleteAPICall(){\n    this.presentLoading();\n    this.dataServices.deleteEmployerJobDetailAPI(this.jobId).then((result) => {\n      this.employerJobDeleteAPIResponse = result;\n      if (this.employerJobDeleteAPIResponse.status == 1) {\n        this.loadingController.dismiss(); \n        // this.employerJobDetailArray = this.employerJobDeleteAPIResponse\n       \n        this.presentAlert('', this.employerJobDeleteAPIResponse.message);\n\n      } else {\n        this.loadingController.dismiss();\n        this.presentAlert('', this.employerJobDeleteAPIResponse.message);\n      }\n    }, error => {\n      this.loadingController.dismiss();\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n   //Display loader \n   async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n    setTimeout(() => {\n      loading.dismiss();\n    }, 6000);\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!' + role + ' Data: ' + data);\n\n  }//Display Function Ends Here \n\n  closePage(){\n    this.location.back();\n    // this.router.navigate(['/'])\n  }\n}\n"],"sourceRoot":""}