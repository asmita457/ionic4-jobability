{"version":3,"sources":["webpack:///./src/app/employerprofile/employerprofile.module.ts","webpack:///./src/app/employerprofile/employerprofile.page.html","webpack:///./src/app/employerprofile/employerprofile.page.scss","webpack:///./src/app/employerprofile/employerprofile.page.ts"],"names":[],"mappings":"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","file":"employerprofile-employerprofile-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmployerprofilePage } from './employerprofile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployerprofilePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmployerprofilePage]\n})\nexport class EmployerprofilePageModule {}\n","module.exports = \"<!-- - <ion-header color=\\\"medium\\\"> -->\\n<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button style=\\\"color: #2b0c43\\\"></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title style=\\\" color: #2b0c43\\\">My Profile</ion-title>\\n    <ion-icon class=\\\"headerNameCss\\\" name=\\\"notifications\\\" (click)=\\\"navigateToNotification()\\\"></ion-icon>\\n    <ion-badge *ngIf=\\\"badgecount != 0\\\" id=\\\"notifications-badge\\\" color=\\\"danger\\\">{{badgecount}}</ion-badge>  </ion-item>\\n</ion-toolbar>\\n<!-- </ion-header> -->\\n\\n<ion-content *ngFor=\\\"let item of employerInformation\\\">\\n  <ion-card class=\\\"cardMargins headerNameCss\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"10\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1 headerNameCss\\\">CONTACT INFORMATION</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\">\\n            <ion-label (click)=\\\"updateContactInfo()\\\" class=\\\"profilePageHeaderStripSection2\\\">EDIT</ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding headerNameCss\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"headingLabel\\\">Name:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.first_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Designation:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.designation}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Email:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.email}}</ion-label>\\n            <br>\\n            <div *ngIf=\\\"showVerifyButton\\\">\\n              <ion-button class=\\\"verifyEmail\\\" size=\\\"small\\\" shape=\\\"round\\\" fill=\\\"outline\\\" style=\\\"color:red\\\" (click)=\\\"emailVerification()\\\">Verify</ion-button>\\n              <br>\\n            </div>\\n            <div *ngIf=\\\"!showVerifyButton\\\">\\n              <ion-button class=\\\"verifiedEmail\\\" size=\\\"small\\\" shape=\\\"round\\\" fill=\\\"outline\\\" style=\\\"color: #2b0c43\\\">\\n                Verified</ion-button>\\n              <br>\\n            </div>\\n            <ion-label class=\\\"headingLabel\\\">Mobile:</ion-label>\\n            <br>\\n            <a href=\\\"tel:{{item.mobile}}\\\" [attr.aria-label]=\\\"splitMobile\\\">{{item.mobile}}</a>\\n\\n            <br>\\n          </ion-col>\\n\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n  <ion-card class=\\\"cardMargins headerNameCss\\\">\\n    <ion-card-header class=\\\"profileCardHeader\\\">\\n      <ion-grid class=\\\"cardPadding\\\">\\n        <ion-row class=\\\"profilePageHeaderrow\\\">\\n          <ion-col size=\\\"10\\\">\\n            <ion-label class=\\\"profilePageHeaderStripSection1\\\">EMPLOYER INFORMATION</ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\">\\n            <ion-label (click)=\\\"updateEmployerInfo()\\\" class=\\\"profilePageHeaderStripSection2\\\">EDIT</ion-label>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-header>\\n\\n    <ion-card-content class=\\\"cardPadding headerNameCss\\\">\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"12\\\">\\n            <ion-label class=\\\"headingLabel\\\">Company Name:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.company_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Company Type:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.company_type_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Year of Establishment:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.year_establishment}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Industry:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.industry_name}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Website URL:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.website_url}}</ion-label>\\n            <br>\\n            <ion-label class=\\\"headingLabel\\\">Company Description:</ion-label>\\n            <br>\\n            <ion-label class=\\\"contentInfo\\\">{{item.company_description}}</ion-label>\\n            <br>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-card-content>\\n  </ion-card>\\n\\n\\n</ion-content>\"","module.exports = \".headingLabel {\\n  color: #2b0c43;\\n  font-size: 12px;\\n  font-weight: bold !important; }\\n\\n.contentInfo {\\n  font-size: 15px;\\n  color: #2b0c43;\\n  display: inline-block; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9lbXBsb3llcnByb2ZpbGUvZW1wbG95ZXJwcm9maWxlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGNBQWE7RUFDYixlQUFjO0VBQ2QsNEJBQTJCLEVBQUE7O0FBRzNCO0VBQ0EsZUFBYztFQUNkLGNBQWE7RUFDYixxQkFBcUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVycHJvZmlsZS9lbXBsb3llcnByb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmhlYWRpbmdMYWJlbHtcbiAgICBjb2xvcjojMmIwYzQzO1xuICAgIGZvbnQtc2l6ZToxMnB4O1xuICAgIGZvbnQtd2VpZ2h0OmJvbGQgIWltcG9ydGFudDtcbiAgICB9XG4gICAgXG4gICAgLmNvbnRlbnRJbmZve1xuICAgIGZvbnQtc2l6ZToxNXB4O1xuICAgIGNvbG9yOiMyYjBjNDM7XG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { Events, LoadingController, AlertController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-employerprofile',\n    templateUrl: './employerprofile.page.html',\n    styleUrls: ['./employerprofile.page.scss'],\n})\nexport class EmployerprofilePage implements OnInit {\n\n    verify_email: any\n    resultData: any\n    companyTypeArray: any = []\n    industryTypeArray: any = []\n    companyIdArray = []\n    industryIdArray = []\n    uacc_id: any\n    first_name: any\n    results: any = []\n    companyNAME: any\n    companyTypeIndex: any\n    country: any\n    countryData: any\n    company_description: any\n    showVerifyButton: boolean\n    showVerifiedButton: boolean\n    emailVerificatonResponse: any\n    employerInformation: any\n    badgecount: any\n    badgeResultData: any\n    splitMobile: any\n\n    constructor(\n        private router: Router,\n        public events: Events,\n        private dataServices: DataservicesService,\n        public loadingController: LoadingController,\n        private alertCtrl: AlertController\n    ) {\n        this.uacc_id = localStorage.getItem('users_id');\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.getEmployerInformation();\n        this.getCountryArray();\n        this.getNotificationBadgeCount()\n    }\n\n    getNotificationBadgeCount() {\n        // this.presentLoading();\n        this.dataServices.getNotificationBadgeCount().then((result) => {\n          console.log(result)\n          this.badgeResultData = result\n          if (this.badgeResultData.status == 1) {\n            // this.loadingController.dismiss();\n            this.badgecount = this.badgeResultData.total_notification_count       \n          } else {\n            // this.loadingController.dismiss();\n          }\n        }, error => {\n        //   this.loadingController.dismiss();\n          console.log('Error in login: ' + JSON.stringify(error))\n        })\n      }\n    \n    navigateToNotification() {\n    this.router.navigate(['/notification'])\n    }\n\n    getCountryArray() {\n        this.countryData = [];\n        this.dataServices.getCountryArrayAPI().then((result) => {\n            this.countryData = result\n            if (this.countryData.status == 1) {\n                localStorage.setItem(\"countryArray\", JSON.stringify(this.countryData));\n            } else {\n            }\n        }, error => {\n            console.log('Error in login: ' + JSON.stringify(error))\n\n        })\n    }\n\n    //Display loader \n    async presentLoading() {\n        const loading = await this.loadingController.create({\n            message: 'Please wait...',\n            // spinner: null\n        });\n        await loading.present();\n        setTimeout(() => {\n            loading.dismiss();\n        }, 6000);\n        const { role, data } = await loading.onDidDismiss();\n        console.log('Loading dismissed!' + role + ' Data: ' + data);\n    }//Display Function Ends Here \n\n    updateEmployerInfo() {\n        let info = {\n            empInfo: this.results[0],\n        }\n        this.router.navigate(['/updateemployeeemployerinfo', { item: JSON.stringify(info) }]);\n    }\n\n    updateContactInfo() {\n        this.router.navigate(['/updateemployeecontactinfo', { item: JSON.stringify(this.results[0]) }]);\n    }\n\n    getEmployerDDL(country) {\n        console.log(\"country id: \" + country)\n        this.dataServices.getDDLAPI(country).then((result) => {\n            console.log(result)\n            this.resultData = result\n            if (this.resultData.status == 1) {\n                localStorage.setItem(\"ddl_list\", JSON.stringify(this.resultData));\n\n            } else {\n            }\n        }, error => {\n            console.log('Error in login: ' + JSON.stringify(error))\n\n        })\n    }\n\n    // Function For Email Verification\n    emailVerification() {\n        this.presentLoading();\n        this.dataServices.emailVerification().then((result) => {\n            this.emailVerificatonResponse = result\n            if (this.emailVerificatonResponse.status == 1) {\n                this.loadingController.dismiss();\n                this.presentAlert('', this.emailVerificatonResponse.message);\n            } else {\n                this.loadingController.dismiss();\n                this.presentAlert('', this.emailVerificatonResponse.message);\n            }\n        }, error => {\n            console.log('Error in login: ' + JSON.stringify(error))\n        })\n    } // Function emailVerification Ends Here.\n\n\n\n    async presentAlert(title, message) {\n        const alert = await this.alertCtrl.create({\n            header: title,\n            subHeader: message,\n            buttons: ['OK']\n        });\n        await alert.present();\n    }\n\n\n    getEmployerInformation() {\n        // this.uacc_id = localStorage.getItem(\"users_id\");\n        this.presentLoading();\n        this.dataServices.getEmployerData(this.uacc_id).then((result) => {\n            console.log('employer details :: ' + result)\n            this.resultData = result\n            if (this.resultData.status == 1) {\n\n                this.employerInformation = this.resultData.employer_details;\n                this.first_name = this.resultData.employer_details[0].first_name;\n                this.country = this.resultData.employer_details[0].country;\n                this.verify_email = this.resultData.employer_details[0].verify_email;\n\n                this.splitMobile =  this.resultData.employer_details[0].mobile.split('').join(' ').replace(/0/g, 'zero')\n\n                console.log(\"show Verify email: \" + this.verify_email)\n                localStorage.setItem('userName', this.first_name)\n\n                if (this.verify_email == 0) {\n                    this.showVerifyButton = true;\n                } else {\n                    this.showVerifyButton = false;\n                }\n                this.getEmployerDDL(this.country);\n                this.events.publish('Event-UserName')\n                this.results = [];\n                this.results.push({\n                    compnayName: this.resultData.employer_details[0].company_name,\n                    company_type_name: this.resultData.employer_details[0].company_type_name,\n                    companytype_id: this.resultData.employer_details[0].companytype_id,\n                    year_establishment: this.resultData.employer_details[0].year_establishment,\n                    industry: this.resultData.employer_details[0].industry,\n                    company_description: this.resultData.employer_details[0].company_description,\n                    industry_name: this.resultData.employer_details[0].industry_name,\n                    industry_id: this.resultData.employer_details[0].industry_id,\n                    website_url: this.resultData.employer_details[0].website_url,\n                    first_name: this.resultData.employer_details[0].first_name,\n                    designation: this.resultData.employer_details[0].designation,\n                    email: this.resultData.employer_details[0].email,\n                    phone: this.resultData.employer_details[0].phone,\n                    mobile: this.resultData.employer_details[0].mobile,\n                    address: this.resultData.employer_details[0].address,\n                    zip_code: this.resultData.employer_details[0].zip_code,\n                    companyTypeIndex: this.companyTypeIndex,\n                    country: this.resultData.employer_details[0].country,\n                    state: this.resultData.employer_details[0].state,\n                    city: this.resultData.employer_details[0].city,\n                    business_email: this.resultData.employer_details[0].business_email\n\n                });\n                this.loadingController.dismiss();\n            } else {\n                this.loadingController.dismiss();\n                alert(this.resultData.message);\n\n            }\n        }, error => {\n            console.log('Error in login: ' + JSON.stringify(error))\n\n        })\n    }\n\n}\n"],"sourceRoot":""}