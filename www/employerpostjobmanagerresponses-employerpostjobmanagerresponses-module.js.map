{"version":3,"sources":["webpack:///./src/app/employerpostjobmanagerresponses/employerpostjobmanagerresponses.module.ts","webpack:///./src/app/employerpostjobmanagerresponses/employerpostjobmanagerresponses.page.html","webpack:///./src/app/employerpostjobmanagerresponses/employerpostjobmanagerresponses.page.scss","webpack:///./src/app/employerpostjobmanagerresponses/employerpostjobmanagerresponses.page.ts"],"names":[],"mappings":"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","file":"employerpostjobmanagerresponses-employerpostjobmanagerresponses-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmployerpostjobmanagerresponsesPage } from './employerpostjobmanagerresponses.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployerpostjobmanagerresponsesPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmployerpostjobmanagerresponsesPage]\n})\nexport class EmployerpostjobmanagerresponsesPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-row>\\n    <ion-col size=\\\"2\\\" (click)=\\\"goBack()\\\">\\n      <ion-img src=\\\"../../assets/img/backnavigation.png\\\" style=\\\"padding: 20% 25% 25% 25%;\\\">\\n      </ion-img>\\n    </ion-col>\\n    <ion-col size=\\\"10\\\">\\n      <ion-title class=\\\"titlecss\\\" style=\\\"margin-top:4px\\\">Post Job</ion-title>\\n    </ion-col>\\n  </ion-row>\\n</ion-toolbar>\\n\\n\\n<ion-content>\\n  <h5 align=\\\"center\\\" style=\\\"color:#2b0c43\\\">Manage Responses</h5>\\n\\n  <ion-grid style=\\\"margin-top:5%\\\">\\n    <ion-row>\\n      <ion-col size=\\\"6\\\" *ngIf=\\\"emailNonSelected\\\">\\n        <button (click)=\\\"jobPostResponsesWithEmail()\\\" type=\\\"submit\\\"\\n          class=\\\"postjobbuttonfont selector loginWithOtpButton\\\">EMAIL</button>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\" *ngIf=\\\"emailSelected\\\">\\n        <button type=\\\"submit\\\" class=\\\"postjobbuttonafterclick selector loginWithOtpButton\\\">EMAIL</button>\\n      </ion-col>\\n\\n\\n      <ion-col size=\\\"6\\\" *ngIf=\\\"walkinNonSelected\\\">\\n        <button (click)=\\\"jobPostResponsesWithWalkin()\\\" type=\\\"submit\\\"\\n          class=\\\"postjobbuttonfont selector loginWithOtpButton\\\">WALK-IN</button>\\n      </ion-col>\\n      <ion-col size=\\\"6\\\" *ngIf=\\\"walkinSelected\\\">\\n        <button type=\\\"submit\\\" class=\\\"postjobbuttonafterclick selector loginWithOtpButton\\\">WALK-IN</button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <div class=\\\"inputDiv\\\" *ngIf=\\\"showEmailSection\\\">\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\" lines=\\\"none\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label>\\n              Email1:\\n            </ion-label>\\n            <ion-label name=\\\"email1\\\">{{email1}}</ion-label>\\n            <!-- <ion-input class=\\\"headerNameCss\\\" type=\\\"email\\\" name=\\\"email1\\\" [(ngModel)]=\\\"email1\\\"\\n  (ionChange)=\\\"emailValidator()\\\" required pattern=\\\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\\\">\\n  </ion-input> -->\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\" lines=\\\"none\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label>\\n              Email2:\\n            </ion-label>\\n            <ion-label name=\\\"email2\\\">{{email2}}</ion-label>\\n            <!-- <ion-input class=\\\"headerNameCss\\\" type=\\\"email\\\" name=\\\"email1\\\" [(ngModel)]=\\\"email1\\\"\\n  (ionChange)=\\\"emailValidator()\\\" required pattern=\\\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\\\">\\n  </ion-input> -->\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n    <ion-row>\\n      <ion-col size=\\\"1\\\">\\n        <ion-checkbox [(ngModel)]=\\\"emailIdDisplay\\\" clalabelss=\\\"checkBoxBorder\\\"></ion-checkbox>\\n      </ion-col>\\n      <ion-col size=\\\"11\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Do not display this email Id to applicants </ion-label>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n\\n  <div class=\\\"inputDiv\\\" *ngIf=\\\"showWalkinSection\\\">\\n\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showFromDateErrorMsg == true, 'blacklabel' : showFromDateErrorMsg == false}\\\">\\n              From Date\\n            </ion-label>\\n            <ion-datetime #myPicker style=\\\"height: 30px\\\" align=\\\"start\\\" (ionChange)=\\\"fromDateValidator($event)\\\"\\n              displayFormat=\\\"DD-MM-YYYY\\\" name=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" min=\\\"{{startFromDate}}\\\"\\n              max=\\\"2050-12-30\\\">\\n            </ion-datetime>\\n            <!-- <ion-input class=\\\"headerNameCss\\\" type=\\\"email\\\" name=\\\"email1\\\" [(ngModel)]=\\\"email1\\\" (ionChange)=\\\"fromDateValidator()\\\" required pattern=\\\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$\\\">\\n  </ion-input> -->\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showFromDateErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showFromDateErrorMsg\\\">{{fromDateErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showToDateErrorMsg == true, 'blacklabel' : showToDateErrorMsg == false}\\\">\\n              To Date\\n            </ion-label>\\n\\n            <ion-datetime #myPicker style=\\\"height: 30px\\\" align=\\\"start\\\" min=\\\"{{startToDate}}\\\" max=\\\"2050-12-30\\\"\\n              displayFormat=\\\"DD-MM-YYYY\\\" name=\\\"toDate\\\" (ionChange)=\\\"toDateValidator()\\\" [(ngModel)]=\\\"toDate\\\">\\n            </ion-datetime>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showToDateErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showToDateErrorMsg\\\">{{toDateErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showStartTimeErrorMsg == true, 'blacklabel' : showStartTimeErrorMsg == false}\\\">\\n              Starting Time\\n            </ion-label>\\n            <ion-datetime [(ngModel)]=\\\"StartTime\\\" displayFormat=\\\"HH:mm\\\" (ionChange)=\\\"startTimeValidator($event)\\\">\\n            </ion-datetime>\\n\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showStartTimeErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showStartTimeErrorMsg\\\">{{startTimeErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n        <ion-row>\\n          <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\"\\n              [ngClass]=\\\"{'redlabel' : showEndTimeErrorMsg == true, 'blacklabel' : showEndTimeErrorMsg == false}\\\">\\n              End Time\\n            </ion-label>\\n            <ion-datetime [(ngModel)]=\\\"EndTime\\\" displayFormat=\\\"HH:mm\\\" min=\\\"{{StartTime}}\\\"\\n              (ionChange)=\\\"endTimeValidator()\\\"></ion-datetime>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\" *ngIf=\\\"showEndTimeErrorMsg\\\">\\n            <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n            </ion-img>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <p class=\\\"errorMsg\\\" *ngIf=\\\"showEndTimeErrorMsg\\\">{{endTimeErrorMsg}}</p>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n  <div class=\\\"inputDiv\\\">\\n    <ion-row>\\n      <ion-col size=\\\"1\\\">\\n        <ion-checkbox [(ngModel)]=\\\"show_contact\\\" clalabelss=\\\"checkBoxBorder\\\"></ion-checkbox>\\n      </ion-col>\\n      <ion-col size=\\\"11\\\">\\n        <ion-label class=\\\"headerNameCss\\\"> Do not display this contact details to applicants </ion-label>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n  <div class=\\\"saveButtonPadding\\\">\\n    <button class=\\\"buttonfont\\\" (click)=\\\"nextPage()\\\">POST JOB</button>\\n  </div>\\n</ion-content>\"","module.exports = \".postjobbuttonfont {\\n  border: 0.5px solid black;\\n  border-radius: 4px;\\n  padding: 5px !important;\\n  background: #2b0c43;\\n  color: white;\\n  height: 32px;\\n  width: 100%;\\n  font-size: 15px; }\\n\\n.postjobbuttonafterclick {\\n  border: 0.5px solid black;\\n  border-radius: 4px;\\n  padding: 5px !important;\\n  background: #614278;\\n  color: white;\\n  height: 32px;\\n  width: 100%;\\n  font-size: 15px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9lbXBsb3llcnBvc3Rqb2JtYW5hZ2VycmVzcG9uc2VzL2VtcGxveWVycG9zdGpvYm1hbmFnZXJyZXNwb25zZXMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQix1QkFBdUI7RUFDdkIsbUJBQWtCO0VBQ2xCLFlBQVk7RUFDWixZQUFXO0VBQ1gsV0FBVTtFQUNWLGVBQWUsRUFBQTs7QUFHakI7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLHVCQUF1QjtFQUN2QixtQkFBa0I7RUFDbEIsWUFBWTtFQUNaLFlBQVc7RUFDWCxXQUFVO0VBQ1YsZUFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZW1wbG95ZXJwb3N0am9ibWFuYWdlcnJlc3BvbnNlcy9lbXBsb3llcnBvc3Rqb2JtYW5hZ2VycmVzcG9uc2VzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wb3N0am9iYnV0dG9uZm9udHtcbiAgICBib3JkZXI6IDAuNXB4IHNvbGlkIGJsYWNrO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBwYWRkaW5nOiA1cHggIWltcG9ydGFudDtcbiAgICBiYWNrZ3JvdW5kOiMyYjBjNDM7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIGhlaWdodDozMnB4O1xuICAgIHdpZHRoOjEwMCU7XG4gICAgZm9udC1zaXplOiAxNXB4O1xuICB9XG4gIFxuICAucG9zdGpvYmJ1dHRvbmFmdGVyY2xpY2t7XG4gICAgYm9yZGVyOiAwLjVweCBzb2xpZCBibGFjaztcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgcGFkZGluZzogNXB4ICFpbXBvcnRhbnQ7XG4gICAgYmFja2dyb3VuZDojNjE0Mjc4O1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBoZWlnaHQ6MzJweDtcbiAgICB3aWR0aDoxMDAlO1xuICAgIGZvbnQtc2l6ZTogMTVweDtcbiAgfVxuICAiXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { LoadingController, AlertController, NavController } from '@ionic/angular';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\n\n\n\n\n@Component({\n    selector: 'app-employerpostjobmanagerresponses',\n    templateUrl: './employerpostjobmanagerresponses.page.html',\n    styleUrls: ['./employerpostjobmanagerresponses.page.scss'],\n})\nexport class EmployerpostjobmanagerresponsesPage implements OnInit {\n    // @ViewChild('myPicker1') startTime;\n    // @ViewChild('myPicker2') stopTime;\n    show_contact: boolean\n    toDate = \"\"\n    tab_show = \"1\"\n    hoursCon: any\n    StartTime = \"\"\n    EndTime = \"\"\n    fromDate = \"\"\n    email2: any\n    email1: any\n    emailIdDisplay: boolean\n    newDate: Date\n    // emailErrorMsg: any;\n    // showEmailErrorMsg = false;\n    // email2ErrorMsg: any;\n    // showEmail2ErrorMsg = false;\n    postJobFormAllData: any\n    showEmailSection = true\n    showWalkinSection = false\n    // postJobData: any\n    existingDataResponse: any\n    applicants_display: any\n    postJobManageResponsesArray = []\n    showFromDateErrorMsg = false\n    fromDateErrorMsg: any\n    showToDateErrorMsg = false\n    toDateErrorMsg: any\n    showStartTimeErrorMsg = false\n    startTimeErrorMsg: any\n    showEndTimeErrorMsg = false\n    endTimeErrorMsg: any\n    showcontact: any\n    emailNonSelected = false\n    emailSelected = true\n    walkinNonSelected = true\n    walkinSelected = false\n    FROMDATE = \"\"\n    TODATE = \"\"\n    LASTDATE = \"\"\n    postJobRequirementArray = []\n    postJobDetail = []\n    backPostJobLocation = []\n    backPostJobRequirement = []\n    compareToDate: any\n    compareLastDate: any\n    startFromDate: string\n    startToDate: string\n    checklastdate: string = ''\n\n    ALLPOSTDATA = {\n        job_name: \"\", job_description: \"\", disability_id: [], min_experience: \"\", max_experience: \"\", ctc_currency: \"\", annual_ctc_from: \"\", annual_ctc_to: \"\", hide_salary: \"\", number_of_vacancies: \"\",\n        last_date_apply: \"\", country_id: \"\", state_city_id: [], industry_id: \"\", functional_area_id: \"\", job_role: \"\", qualification_id: [],\n        key_skills: \"\", applicants_display: \"\", tab_show: \"\", from_date: \"\", to_date: \"\", start_time: \"\", end_time: \"\",\n        show_contact: \"\", reference_code: \"\", candidate_profile: \"\", uacc_id: \"\"\n    }\n    uacc_id: any\n    // applicantId: boolean\n    constructor\n        (\n            private router: Router,\n            private activatedRoute: ActivatedRoute,\n            public loadingController: LoadingController,\n            private dataServices: DataservicesService,\n            private alertCtrl: AlertController,\n            private navController: NavController\n        ) {\n        // this.fromDate = new Date();\n        // this.toDate = new Date();\n        // this.StartTime = new Date();\n        // this.EndTime = new Date();\n    }\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n\n        this.startFromDate = new Date().toISOString().slice(0, 10);\n\n        this.uacc_id = localStorage.getItem('users_id')\n        this.email1 = localStorage.getItem('email')\n        this.email2 = localStorage.getItem('business_email');\n\n        this.postJobDetail = JSON.parse(localStorage.getItem('postJobDetail'))\n        this.backPostJobLocation = JSON.parse(localStorage.getItem('backPostJobLocation'))\n        this.backPostJobRequirement = JSON.parse(localStorage.getItem('backPostJobRequirement'))\n        this.checklastdate = this.postJobDetail[0].lastdate;\n\n        // this.getAllPostJobData();\n        const contactInfo = (this.activatedRoute.snapshot.paramMap.get('item'));\n        this.postJobManageResponsesArray = JSON.parse(contactInfo);\n        console.log(\"postJobManageResponsesArray :: \" + JSON.stringify(this.postJobManageResponsesArray))\n    }\n\n    closePage() {\n        this.router.navigate(['/dashboardemployer'])\n    }\n    fromDateValidator(event) {\n        console.log('event date:', event.detail.value)\n        this.startToDate = event.detail.value\n        this.toDate = \"\"\n        this.fromDateValidate()\n    }\n\n    fromDateValidate() {\n        if (this.fromDate == \"\" || this.fromDate == null || this.fromDate == undefined) {\n            this.showFromDateErrorMsg = true\n            this.fromDateErrorMsg = \"Please enter from date\"\n        } else {\n            this.showFromDateErrorMsg = false\n        }\n    }\n\n    toDateValidator() {\n        if (this.toDate == \"\" || this.toDate == null || this.toDate == undefined) {\n            this.showToDateErrorMsg = true\n            this.toDateErrorMsg = \"Please enter to date\"\n        } else {\n            this.showToDateErrorMsg = false\n        }\n    }\n\n    startTimeValidator(event) {\n        console.log('event date:', event.detail.value)\n        this.StartTime = event.detail.value\n        this.EndTime = \"\"\n        this.startTimeValidate()\n    }\n\n    startTimeValidate() {\n        if (this.StartTime == \"\" || this.StartTime == null || this.StartTime == undefined) {\n            this.showStartTimeErrorMsg = true\n            this.startTimeErrorMsg = \"Please enter start time\"\n        } else {\n            this.showStartTimeErrorMsg = false\n        }\n    }\n\n    endTimeValidator() {\n        if (this.EndTime == \"\" || this.EndTime == null || this.EndTime == undefined) {\n            this.showEndTimeErrorMsg = true\n            this.endTimeErrorMsg = \"Please enter end time\"\n        } else {\n            this.showEndTimeErrorMsg = false\n        }\n    }\n\n    getAllPostJobData() {\n        this.ALLPOSTDATA.job_name = this.postJobDetail[0].jobtitle;\n        this.ALLPOSTDATA.job_description = this.postJobDetail[0].jobdescription;\n        this.ALLPOSTDATA.disability_id = this.postJobDetail[0].disabilityType;\n        this.ALLPOSTDATA.min_experience = this.postJobDetail[0].selectedMinExperienceValue;\n        this.ALLPOSTDATA.max_experience = this.postJobDetail[0].selectedMaxExperienceValue;\n        this.ALLPOSTDATA.ctc_currency = this.postJobDetail[0].Currency_id;\n        this.ALLPOSTDATA.annual_ctc_from = this.postJobDetail[0].ctcFrom;\n        this.ALLPOSTDATA.annual_ctc_to = this.postJobDetail[0].ctcTo;\n        this.ALLPOSTDATA.hide_salary = this.postJobDetail[0].salaryHideShow;\n        this.ALLPOSTDATA.number_of_vacancies = this.postJobDetail[0].vacancies;\n        this.ALLPOSTDATA.last_date_apply = this.postJobDetail[0].lastdate;\n        this.ALLPOSTDATA.country_id = this.backPostJobLocation[0].countryId;\n        this.ALLPOSTDATA.state_city_id = this.backPostJobLocation[0].stateCityId;\n        this.ALLPOSTDATA.industry_id = this.backPostJobRequirement[0].industryType;\n        this.ALLPOSTDATA.functional_area_id = this.backPostJobRequirement[0].functionalArea;\n        this.ALLPOSTDATA.job_role = this.backPostJobRequirement[0].jobRole;\n        this.ALLPOSTDATA.qualification_id = this.backPostJobRequirement[0].qualification;\n        this.ALLPOSTDATA.key_skills = this.backPostJobRequirement[0].skills;\n        this.ALLPOSTDATA.applicants_display = this.applicants_display;\n        this.ALLPOSTDATA.tab_show = this.tab_show;\n        this.ALLPOSTDATA.from_date = this.postJobManageResponsesArray[0].finalFromDate\n        this.ALLPOSTDATA.to_date = this.postJobManageResponsesArray[0].finalToDate\n        this.ALLPOSTDATA.start_time = this.postJobManageResponsesArray[0].finalStartTime\n        this.ALLPOSTDATA.end_time = this.postJobManageResponsesArray[0].finalEndTime\n        this.ALLPOSTDATA.show_contact = this.showcontact;\n        this.ALLPOSTDATA.candidate_profile = this.backPostJobRequirement[0].reference_code;\n        this.ALLPOSTDATA.reference_code = this.backPostJobRequirement[0].candidate_profile;\n        this.ALLPOSTDATA.uacc_id = this.uacc_id;\n\n\n        // }\n        // console.log(\"JobPostLocalStorageData length::\", this.postJobFormAllData.length)\n\n    }\n\n\n\n    postJobAPI() {\n        this.presentLoading();\n        this.dataServices.postJobDataAPI(\n            this.ALLPOSTDATA.job_name,\n            this.ALLPOSTDATA.job_description,\n            this.ALLPOSTDATA.disability_id,\n            this.ALLPOSTDATA.min_experience,\n            this.ALLPOSTDATA.max_experience,\n            this.ALLPOSTDATA.ctc_currency,\n            this.ALLPOSTDATA.annual_ctc_from,\n            this.ALLPOSTDATA.annual_ctc_to,\n            this.ALLPOSTDATA.hide_salary,\n            this.ALLPOSTDATA.number_of_vacancies,\n            this.ALLPOSTDATA.last_date_apply,\n            this.ALLPOSTDATA.country_id,\n            this.ALLPOSTDATA.state_city_id,\n            this.ALLPOSTDATA.industry_id,\n            this.ALLPOSTDATA.functional_area_id,\n            this.ALLPOSTDATA.job_role,\n            this.ALLPOSTDATA.qualification_id,\n            this.ALLPOSTDATA.key_skills,\n            this.ALLPOSTDATA.applicants_display,\n            this.ALLPOSTDATA.tab_show,\n            this.ALLPOSTDATA.from_date,\n            this.ALLPOSTDATA.to_date,\n            this.ALLPOSTDATA.start_time,\n            this.ALLPOSTDATA.end_time,\n            this.ALLPOSTDATA.show_contact,\n            this.ALLPOSTDATA.reference_code,\n            this.ALLPOSTDATA.candidate_profile,\n            this.ALLPOSTDATA.uacc_id).then((res) => {\n                this.existingDataResponse = res;\n                console.log('response::: ' + this.existingDataResponse)\n                if (this.existingDataResponse.status == 1) {\n                    console.log('post job response :: ' + this.existingDataResponse)\n                    this.presentAlert(this.existingDataResponse.message, '');\n                    localStorage.removeItem('postJobDetail')\n                    localStorage.removeItem('backPostJobLocation')\n                    localStorage.removeItem('backPostJobRequirement')\n                    localStorage.removeItem('JobPostLocalStorageData')\n\n                    localStorage.removeItem('backwardJobDetailFlag')\n                    localStorage.removeItem('backwardJobLocationFlag')\n                    localStorage.removeItem('backwardJobRequirementFlag')\n                    // this.closePage()\n                }\n                else {\n                    this.presentAlert(this.existingDataResponse.message, '');\n                }\n\n            }, (error) => {\n                // alert(error);\n                console.log('Error: ' + error)\n                // });\n            })\n    }\n\n    nextPage() {\n        var date = new Date(this.fromDate);\n        let month = String(date.getMonth() + 1);\n        let day = String(date.getDate());\n        const year = String(date.getFullYear());\n        if (day.length < 2) {\n            day = '0' + day\n        }\n        if (month.length < 2) {\n            month = '0' + month\n        }\n        this.FROMDATE = day + '-' + month + '-' + year\n\n        var date = new Date(this.toDate);\n        let toMonth = String(date.getMonth() + 1);\n        let toDay = String(date.getDate());\n        const toYear = String(date.getFullYear());\n        if (toDay.length < 2) {\n            toDay = '0' + toDay\n        }\n        if (toMonth.length < 2) {\n            toMonth = '0' + toMonth\n        }\n        this.TODATE = toDay + '-' + toMonth + '-' + toYear\n\n        var splitToDate = this.TODATE.split(\"-\");\n        if (this.checklastdate != \"\") {\n            var splitLastDate = this.checklastdate.split(\"-\");\n            var checkDateStatus = new Date(parseInt(splitToDate[2]), parseInt(splitToDate[1]), parseInt(splitToDate[0])) > new Date(parseInt(splitLastDate[2]), parseInt(splitLastDate[1]), parseInt(splitLastDate[0]));\n            if (checkDateStatus == true) {\n                alert('To date should not be greater than last date.')\n                return;\n            }\n        }\n\n        if (this.show_contact == true) {\n            this.showcontact = 1;\n        }\n        else {\n            this.showcontact = 0;\n        }\n\n        this.postJobManageResponsesArray = []\n        if (this.tab_show == \"1\") {\n\n            if (this.emailIdDisplay == true) {\n                this.applicants_display = 1;\n            }\n            else {\n                this.applicants_display = 0;\n            }\n\n            this.postJobManageResponsesArray.push(\n                {\n                    email1: this.email1,\n                    email2: this.email2,\n                    tab_show: this.tab_show,\n                    emailIdDisplay: this.applicants_display,\n                    finalFromDate: \"\",\n                    finalToDate: \"\",\n                    finalStartTime: \"\",\n                    finalEndTime: \"\"\n\n                });\n\n            // if (this.showEmailErrorMsg == false) {\n            if (this.postJobManageResponsesArray.length != 0 || this.postJobManageResponsesArray.length != null) {\n                this.getAllPostJobData();\n                this.postJobAPI();\n            }\n\n            // }\n        }\n        else {\n            this.postJobManageResponsesArray = []\n\n\n            let startHours = ''\n            if (String(new Date(this.StartTime).getHours()).length == 1) {\n                startHours = '0' + String(new Date(this.StartTime).getHours())\n            } else {\n                startHours = String(new Date(this.StartTime).getHours())\n            }\n\n            let startMinutes = ''\n            if (String(new Date(this.StartTime).getMinutes()).length == 1) {\n                startMinutes = '0' + String(new Date(this.StartTime).getMinutes())\n            } else {\n                startMinutes = String(new Date(this.StartTime).getMinutes())\n            }\n\n            let endtHours = ''\n            if (String(new Date(this.EndTime).getHours()).length == 1) {\n                endtHours = '0' + String(new Date(this.EndTime).getHours())\n            } else {\n                endtHours = String(new Date(this.EndTime).getHours())\n            }\n\n            let endMinutes = ''\n            if (String(new Date(this.EndTime).getMinutes()).length == 1) {\n                endMinutes = '0' + String(new Date(this.EndTime).getMinutes())\n            } else {\n                endMinutes = String(new Date(this.EndTime).getMinutes())\n            }\n            let checkStatusOfTime = (startHours + \":\" + startMinutes) <= (endtHours + \":\" + endMinutes);\n\n            if (checkStatusOfTime == false) {\n                this.presentAlertForCheckDate('', 'start time should be smaller than end time!');\n                return;\n            }\n\n            if ((this.fromDate == \"\" || this.fromDate == null || this.fromDate == undefined) &&\n                (this.toDate == \"\" || this.toDate == null || this.toDate == undefined) &&\n                (this.StartTime == undefined || this.StartTime == null || this.StartTime == undefined) &&\n                (this.EndTime == \"\" || this.EndTime == null || this.EndTime == undefined)) {\n                this.showFromDateErrorMsg = true\n                this.fromDateErrorMsg = \"Please enter from date\"\n                this.showToDateErrorMsg = true\n                this.toDateErrorMsg = \"Please enter to date\"\n                this.showStartTimeErrorMsg = true\n                this.startTimeErrorMsg = \"Please enter start time\"\n                this.showEndTimeErrorMsg = true\n                this.endTimeErrorMsg = \"Please enter end time\"\n            }\n            else {\n                this.showFromDateErrorMsg = false\n                this.showToDateErrorMsg = false\n                this.showStartTimeErrorMsg = false\n                this.showEndTimeErrorMsg = false\n\n            }\n\n            this.fromDateValidate();\n            this.toDateValidator();\n            this.startTimeValidate();\n            this.endTimeValidator();\n\n            this.postJobManageResponsesArray.push(\n                {\n                    finalFromDate: this.FROMDATE,\n                    finalToDate: this.TODATE,\n                    finalStartTime: startHours + \":\" + startMinutes,\n                    finalEndTime: endtHours + \":\" + endMinutes,\n                    tab_show: this.tab_show,\n                });\n\n            this.getAllPostJobData();\n\n            if (this.showFromDateErrorMsg == false &&\n                this.showToDateErrorMsg == false &&\n                this.showStartTimeErrorMsg == false &&\n                this.showEndTimeErrorMsg == false) {\n                this.postJobAPI();\n            }\n\n        }\n\n\n        // this.router.navigate(['/employerpostjoblocation'])\n    }\n\n\n    jobPostResponsesWithWalkin() {\n        this.tab_show = \"2\";\n        this.showEmailSection = false;\n        this.showWalkinSection = true\n\n        this.emailNonSelected = true\n        this.emailSelected = false\n\n        this.walkinNonSelected = false\n        this.walkinSelected = true\n\n        this.showFromDateErrorMsg = false\n        this.showToDateErrorMsg = false\n        this.showStartTimeErrorMsg = false\n        this.showEndTimeErrorMsg = false\n    }\n\n    jobPostResponsesWithEmail() {\n        this.showEmailSection = true;\n        this.tab_show = \"1\";\n        this.showWalkinSection = false;\n        // this.showEmailErrorMsg = false\n\n        this.emailNonSelected = false\n        this.emailSelected = true\n\n        this.walkinNonSelected = true\n        this.walkinSelected = false\n    }\n\n    goBack() {\n        localStorage.setItem('backwardJobRequirementFlag', '1')\n        // this.location.back();\n        this.router.navigate(['/employerpostjobrequirement']);\n    }\n\n    //Display loader \n    async presentLoading() {\n        const loading = await this.loadingController.create({\n            message: 'Please wait...',\n            // spinner: null\n        });\n        await loading.present();\n        setTimeout(() => {\n            loading.dismiss();\n        }, 5000);\n        const { role, data } = await loading.onDidDismiss();\n        console.log('Loading dismissed!' + role + ' Data: ' + data);\n\n    }//Display Function Ends Here \n\n\n    async presentAlertForCheckDate(title, message) {\n        const alert = await this.alertCtrl.create({\n            header: title,\n            subHeader: message,\n            buttons: ['OK']\n        });\n        await alert.present();\n    }\n\n    async presentAlert(title, message) {\n        const alert = await this.alertCtrl.create({\n            header: title,\n            subHeader: message,\n            buttons: [{\n                text: 'OK',\n                cssClass: 'secondary',\n                handler: (blah) => {\n                    this.navController.navigateRoot(['/dashboardemployer']).then(() => {\n\n                    });\n                    // this.router.navigate(['/dashboardemployer'])\n                }\n            }]\n        });\n        await alert.present();\n    }\n\n\n}"],"sourceRoot":""}