{"version":3,"sources":["webpack:///./src/app/postservice/postservice.module.ts","webpack:///./src/app/postservice/postservice.page.html","webpack:///./src/app/postservice/postservice.page.scss","webpack:///./src/app/postservice/postservice.page.ts"],"names":[],"mappings":"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","file":"postservice-postservice-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PostservicePage } from './postservice.page';\nimport { MatInputModule, MatIconModule, MatSelectModule, MatRadioModule } from '@angular/material';\nimport {MatListModule} from '@angular/material/list';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PostservicePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatListModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PostservicePage]\n})\nexport class PostservicePageModule { }\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Post Service</ion-title>\\n  </ion-item>\\n</ion-toolbar>\\n\\n<ion-content>\\n\\n  <div class=\\\"formPadding\\\">\\n    <form [formGroup]=\\\"postServiceDetailsForm\\\" (ngSubmit)=\\\"postServiceDetails(postServiceDetailsForm.value)\\\">\\n      <mat-label class=\\\"header\\\">Service Details</mat-label>\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <input matInput placeholder=\\\"Service Title\\\" formControlName=\\\"serviceTitle\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n          pattern=\\\"^[a-zA-Z]+[\\\\-'\\\\s]?[a-zA-Z ]+$\\\">\\n        <mat-icon matSuffix color=\\\"warn\\\"\\n          *ngIf=\\\"(postServiceDetailsForm.controls.serviceTitle.invalid && postServiceDetailsForm.controls.serviceTitle.touched) || (postServiceDetailsForm.controls.serviceTitle.invalid && showErrorIcon && !postServiceDetailsForm.controls.serviceTitle.touched)\\\">\\n          error\\n        </mat-icon>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.serviceTitle.errors?.required\\\">Service title is required.</span>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.serviceTitle.errors?.pattern\\\">Please enter valid service\\n            title.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <mat-label>Category Type</mat-label>\\n        <mat-select formControlName=\\\"serviceoffered\\\" [errorStateMatcher]=\\\"esMatcher\\\" multiple>\\n          <mat-option *ngFor=\\\"let item of Serviceofferedlist\\\" [value]=\\\"item.id\\\">\\n            {{item.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.serviceoffered.errors?.required\\\">Category type is\\n            required.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <mat-label>Disability Type</mat-label>\\n        <mat-select formControlName=\\\"disability\\\" [errorStateMatcher]=\\\"esMatcher\\\" multiple>\\n          <mat-option *ngFor=\\\"let item of disabilitylist\\\" [value]=\\\"item.id\\\">\\n            {{item.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.disability.errors?.required\\\">Please select at least one\\n            disability type.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <input matInput placeholder=\\\"Brief\\\" formControlName=\\\"brief\\\" pattern=\\\".*[^ ].*\\\">\\n        <mat-icon matSuffix color=\\\"warn\\\"\\n          *ngIf=\\\"(postServiceDetailsForm.controls.brief.invalid && postServiceDetailsForm.controls.brief.touched) || (postServiceDetailsForm.controls.brief.invalid && showErrorIcon && !postServiceDetailsForm.controls.brief.touched)\\\">\\n          error\\n        </mat-icon>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.brief.errors?.required\\\">Brief is required.</span>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.brief.errors?.pattern\\\">Please enter valid\\n            brief.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <input matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n          pattern=\\\".*[^ ].*\\\">\\n        <mat-icon matSuffix color=\\\"warn\\\"\\n          *ngIf=\\\"(postServiceDetailsForm.controls.description.invalid && postServiceDetailsForm.controls.description.touched) || (postServiceDetailsForm.controls.description.invalid && showErrorIcon && !postServiceDetailsForm.controls.description.touched)\\\">\\n          error\\n        </mat-icon>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.description.errors?.required\\\">Description is required.</span>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.description.errors?.pattern\\\">Please enter valid\\n            description.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-label class=\\\"header\\\">Service Location</mat-label>\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <mat-label>Country</mat-label>\\n        <mat-select formControlName=\\\"country\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n          (selectionChange)=\\\"selectedCountryValue($event.value)\\\">\\n          <mat-option *ngFor=\\\"let item of countryList\\\" [value]=\\\"item.id\\\">\\n            {{item.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.country.errors?.required\\\">Country is\\n            required.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n\\n      <mat-form-field class=\\\"inputFields\\\">\\n        <mat-label> Preferred State/City</mat-label>\\n        <mat-select #shoes formControlName=\\\"preferredStateCity\\\" [errorStateMatcher]=\\\"esMatcher\\\" multiple>\\n          <mat-option  #shoe *ngFor=\\\"let item of stateCityList\\\" [disabled]=\\\"selectedCount >= maxCount && !shoe.selected\\\" (click)=\\\"updateSelectedCount(shoes.value.length)\\\" [value]=\\\"item.id\\\">\\n            {{item.name}}\\n          </mat-option>\\n        </mat-select>\\n        <mat-error>\\n          <span *ngIf=\\\"postServiceDetailsForm.controls.preferredStateCity.errors?.required\\\">Preferred state / city is\\n            required.</span>\\n        </mat-error>\\n      </mat-form-field>\\n\\n      <mat-label class=\\\"header\\\">Contact Information</mat-label>\\n      <ion-row>\\n        <ion-col size=\\\"1\\\">\\n          <ion-checkbox formControlName=\\\"showDetailsToApplicants\\\"  class=\\\"checkBoxBorder\\\" [(ngModel)]=\\\"showDetailsToApplicants\\\">\\n          </ion-checkbox>\\n        </ion-col>\\n        <ion-col size=\\\"11\\\">\\n          <ion-label class=\\\"headerNameCss\\\">Do not display this contact detail to Applicants.</ion-label>\\n        </ion-col>\\n      </ion-row>\\n\\n      <label id=\\\"status\\\">Status</label>\\n      <mat-radio-group aria-label=\\\"status\\\" class=\\\"radioButtonGroup\\\" formControlName=\\\"status\\\"\\n        [(ngModel)]=\\\"SelectedStatus\\\">\\n        <mat-radio-button class=\\\"radioButton\\\" value=\\\"1\\\">Active</mat-radio-button>\\n        <mat-radio-button class=\\\"radioButton\\\" value=\\\"0\\\">Inactive</mat-radio-button>\\n      </mat-radio-group>\\n      <br>\\n      <button type=\\\"submit\\\" class=\\\"buttonfont selector\\\">SAVE</button>\\n    </form>\\n  </div>\\n</ion-content>\"","module.exports = \".button-outline {\\n  --border-color: gray !important; }\\n\\n.note {\\n  color: gray;\\n  text-align: justify; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9wb3N0c2VydmljZS9wb3N0c2VydmljZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSwrQkFBZSxFQUFBOztBQUVqQjtFQUNFLFdBQVc7RUFDWCxtQkFBbUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Bvc3RzZXJ2aWNlL3Bvc3RzZXJ2aWNlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idXR0b24tb3V0bGluZXtcbiAgICAtLWJvcmRlci1jb2xvcjogZ3JheSAhaW1wb3J0YW50O1xuICB9XG4gIC5ub3Rle1xuICAgIGNvbG9yOiBncmF5O1xuICAgIHRleHQtYWxpZ246IGp1c3RpZnk7XG4gICAgLy8gcGFkZGluZzogMCUgNSUgMCUgNCU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { MenuController, LoadingController, AlertController } from '@ionic/angular';\nimport { FileChooser } from '@ionic-native/file-chooser/ngx';\nimport { FileTransfer, FileTransferObject, FileUploadOptions } from '@ionic-native/file-transfer/ngx';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { Location } from '@angular/common';\nimport { FilePath } from '@ionic-native/file-path/ngx';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Component({\n  selector: 'app-postservice',\n  templateUrl: './postservice.page.html',\n  styleUrls: ['./postservice.page.scss'],\n})\nexport class PostservicePage implements OnInit {\n  postServiceDetailsForm: FormGroup;\n  showErrorIcon: boolean = false\n  Serviceofferedlist: any = []\n  disabilitylist: any = []\n  countryList: any = []\n  stateCityList: any = []\n\n\n  selectedCount = 0;\n  maxCount = 3;\n\n  constructor(\n    private router: Router,\n    public menuCtrl: MenuController,\n    private fileChooser: FileChooser,\n    private transfer: FileTransfer,\n    public dataServices: DataservicesService,\n    public loadingController: LoadingController,\n    public alertCtrl: AlertController,\n    private location: Location,\n    private filePath: FilePath,\n    public formBuilder: FormBuilder,\n\n  ) {\n\n  }\n\n  ngOnInit() {\n    this.buildForm()\n  }\n\n  ionViewWillEnter() {\n    this.menuCtrl.enable(false)\n    this.getServiceProviderDropDownList()\n    this.getCountryListInformation()\n  }\n\n  buildForm() {\n    this.postServiceDetailsForm = this.formBuilder.group({\n      serviceTitle: ['', Validators.required],\n      serviceoffered: ['', Validators.required],\n      disability: ['', Validators.required],\n      brief: ['', Validators.required],\n      description: ['', Validators.required],\n      country: ['', Validators.required],\n      preferredStateCity: ['', Validators.required],\n      status: [''],\n      showDetailsToApplicants: ['']\n    });\n  }\n  \n  updateSelectedCount(count: number) {\n    this.selectedCount = count;\n    // if (count === this.maxCount) {\n    //   this.showAlert('You should not select Preferred State/City more than 3','')\n\n    // }\n  }\n  \n  getServiceProviderDropDownList() {\n    this.dataServices.getDDLAPI(0).then((result: any) => {\n      if (result.status == 1) {\n        this.Serviceofferedlist = result.ddl_list.service_offered_list\n        this.disabilitylist = result.ddl_list.disability_list\n      }\n    }, error => {\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n  getCountryListInformation() {\n    this.presentLoading();\n    this.dataServices.getCountryArrayAPI().then((result: any) => {\n      if (result.status == 1) {\n        this.countryList = result.country_list\n        this.loadingController.dismiss()\n      } else {\n        this.loadingController.dismiss()\n      }\n    }, error => {\n      this.loadingController.dismiss()\n      console.log('Error in postservice: ' + JSON.stringify(error))\n    })\n  }\n\n  selectedCountryValue(countryId: any) {\n    this.getStateCityListInformation(countryId)\n  }\n\n  getStateCityListInformation(country_id) {\n    this.presentLoading();\n    this.dataServices.getStateCountryList(country_id).then((result: any) => {\n      if (result.status == 1) {\n        this.stateCityList = result.state_city_list\n        this.loadingController.dismiss()\n      } else {\n        this.loadingController.dismiss()\n      }\n    }, error => {\n      this.loadingController.dismiss()\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n\n\n\n  postServiceDetails(formDeatails) {\n    if (this.postServiceDetailsForm.invalid) {\n      this.showErrorIcon = true\n      return\n    } else {\n      this.presentLoading()\n      this.showErrorIcon = false\n      formDeatails.showDetailsToApplicants = formDeatails.showDetailsToApplicants == false ? '0' : '1'\n      let postData = {\n        \"service_name\": formDeatails.serviceTitle,\n        \"service_description\": formDeatails.description,\n        \"brife\": formDeatails.brief,\n        \"status\": formDeatails.status,\n        \"show_contact\": formDeatails.showDetailsToApplicants,\n        \"upload_file\": [],\n        \"country_id\": formDeatails.country,\n        \"state_city_id\": formDeatails.preferredStateCity.toString(),\n        \"servicetype_id\": formDeatails.serviceoffered.toString(),\n        \"disability_id\": formDeatails.disability.toString(),\n        \"verify_email\": \"1\",\n        \"uacc_id\": localStorage.getItem('users_id')\n      }\n\n      this.dataServices.postServices(postData).then((result: any) => {\n        if (result.status == 1) {\n          this.loadingController.dismiss()\n          this.presentAlert(result.message, '')\n        } else {\n          this.loadingController.dismiss()\n          this.presentAlert(result.message, '')\n        }\n      }, error => {\n        this.loadingController.dismiss()\n        console.log('Error in login: ' + JSON.stringify(error))\n      })\n    }\n  }\n\n  closePage() {\n    this.location.back()\n  }\n\n  postServicesAPI(postData: any) {\n    this.presentLoading();\n    this.dataServices.postServices(postData).then((result: any) => {\n      console.log(result)\n      if (result.status == 1) {\n        console.log('Country List', result)\n        this.loadingController.dismiss()\n        this.presentAlert(result.message, '')\n      } else {\n        this.loadingController.dismiss()\n        this.presentAlert(result.message, '')\n      }\n    }, error => {\n      this.loadingController.dismiss()\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n  }\n  async presentAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      message: message,\n      // buttons: ['OK']\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n            if (title != 'File Type')\n              this.closePage()\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n\n  async showAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      message: message,\n\n      buttons: [{\n        text: 'OK',\n        cssClass: 'secondary',\n    \n      }]\n      \n    });\n    await alert.present();\n  }\n\n\n\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n"],"sourceRoot":""}