{"version":3,"sources":["webpack:///./src/app/updateworkexperience/updateworkexperience.module.ts","webpack:///./src/app/updateworkexperience/updateworkexperience.page.html","webpack:///./src/app/updateworkexperience/updateworkexperience.page.scss","webpack:///./src/app/updateworkexperience/updateworkexperience.page.ts"],"names":[],"mappings":"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","file":"updateworkexperience-updateworkexperience-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateworkexperiencePage } from './updateworkexperience.page';\nimport { MatInputModule, MatIconModule,MatSelectModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateworkexperiencePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdateworkexperiencePage]\n})\nexport class UpdateworkexperiencePageModule {}\n","module.exports = \"<!-- <ion-header class=\\\"new-background-color\\\"> -->\\n<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\"color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Work Experience</ion-title>\\n  </ion-item>\\n</ion-toolbar>\\n<!-- </ion-header> -->\\n\\n<ion-content>\\n\\n  <ion-card class=\\\"cardMargins boxShadow\\\">\\n    <ion-card-content>\\n      <div class=\\\"formPadding\\\">\\n        <form [formGroup]=\\\"updateWorkExperienceForm\\\"\\n          (ngSubmit)=\\\"updateWorkExperienceDetail(updateWorkExperienceForm.value)\\\">\\n\\n          <div *ngIf=\\\"employerStaus\\\">\\n            <ion-row>\\n              <ion-col size=\\\"1\\\">\\n                <ion-checkbox formControlName=\\\"currentEmployer\\\" [(ngModel)]=\\\"currentEmployer\\\" class=\\\"checkBoxBorder\\\">\\n                </ion-checkbox>\\n              </ion-col>\\n              <ion-col size=\\\"11\\\">\\n                <ion-label class=\\\"headerNameCss\\\">Current Employer</ion-label>\\n              </ion-col>\\n            </ion-row>\\n          </div>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <input matInput placeholder=\\\"Company / Organisation\\\" [(ngModel)]=\\\"companyOrganisation\\\"\\n              formControlName=\\\"companyOrganisation\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              pattern=\\\"^[a-zA-Z]+[\\\\-'\\\\s]?[a-zA-Z ]+$\\\">\\n\\n            <mat-icon matSuffix color=\\\"warn\\\"\\n              *ngIf=\\\"(updateWorkExperienceForm.controls.companyOrganisation.invalid && updateWorkExperienceForm.controls.companyOrganisation.touched) || (updateWorkExperienceForm.controls.companyOrganisation.invalid && showErrorIcon && !updateWorkExperienceForm.controls.companyOrganisation.touched)\\\">\\n              error\\n            </mat-icon>\\n            <mat-error>\\n              <span *ngIf=\\\"updateWorkExperienceForm.controls.companyOrganisation.errors?.required\\\">Company /\\n                Organisation is required.</span>\\n              <span *ngIf=\\\"updateWorkExperienceForm.controls.companyOrganisation.errors?.pattern\\\">Please enter valid\\n                company / organisation.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <input matInput placeholder=\\\"Designation\\\" [(ngModel)]=\\\"designation\\\" formControlName=\\\"designation\\\"\\n              [errorStateMatcher]=\\\"esMatcher\\\" pattern=\\\"^[a-zA-Z]+[\\\\-'\\\\s]?[a-zA-Z. ]+$\\\">\\n            <mat-icon matSuffix color=\\\"warn\\\"\\n              *ngIf=\\\"(updateWorkExperienceForm.controls.designation.invalid && updateWorkExperienceForm.controls.designation.touched) || (updateWorkExperienceForm.controls.designation.invalid && showErrorIcon && !updateWorkExperienceForm.controls.designation.touched)\\\">\\n              error\\n            </mat-icon>\\n            <mat-error>\\n              <span *ngIf=\\\"updateWorkExperienceForm.controls.designation.errors?.required\\\">Designation is\\n                required.</span>\\n              <span *ngIf=\\\"updateWorkExperienceForm.controls.designation.errors?.pattern\\\">Please enter valid\\n                designation.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <ion-label>From</ion-label>\\n          <ion-row>\\n            <ion-col size=\\\"6\\\">\\n              <mat-form-field class=\\\"inputFields\\\">\\n                <mat-label>Select Year</mat-label>\\n                <mat-select formControlName=\\\"fromYear\\\" [errorStateMatcher]=\\\"esMatcher\\\" [(ngModel)]=\\\"selectedYearFrom\\\"\\n                  (selectionChange)=\\\"selectedFromYear($event.value)\\\" [aria-label]=\\\"readFromYear\\\">\\n                  <mat-option *ngFor=\\\"let item of yearExperianceFromArray\\\" [value]=\\\"item\\\">\\n                    {{item}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <span *ngIf=\\\"updateWorkExperienceForm.controls.fromYear.errors?.required\\\">Year is\\n                    required.</span>\\n                </mat-error>\\n              </mat-form-field>\\n            </ion-col>\\n\\n            <ion-col size=\\\"6\\\">\\n              <mat-form-field class=\\\"inputFields\\\">\\n                <mat-label>Select Month</mat-label>\\n                <mat-select formControlName=\\\"fromMonth\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n                  (selectionChange)=\\\"selectedFromMonth($event.value)\\\" [(ngModel)]=\\\"fromYearStartMonth\\\"\\n                  [disabled]=\\\"isFromMonthDisabled\\\" [aria-label]=\\\"readFromMonth\\\">\\n                  <mat-option *ngFor=\\\"let item of monthExperianceArray\\\" [value]=\\\"item.id\\\">\\n                    {{item.name}}\\n                  </mat-option>\\n                </mat-select>\\n                <mat-error>\\n                  <span *ngIf=\\\"updateWorkExperienceForm.controls.fromMonth.errors?.required\\\">Month is\\n                    required.</span>\\n                </mat-error>\\n              </mat-form-field>\\n            </ion-col>\\n          </ion-row>\\n\\n          <div *ngIf=\\\"!currentEmployer\\\">\\n            <ion-label>To</ion-label>\\n            <ion-row>\\n              <ion-col size=\\\"6\\\">\\n                <mat-form-field class=\\\"inputFields\\\">\\n                  <mat-label>Select Year</mat-label>\\n                  <mat-select formControlName=\\\"toYear\\\" [errorStateMatcher]=\\\"esMatcher\\\" [(ngModel)]=\\\"toYearEndYear\\\"\\n                    (selectionChange)=\\\"selectedToYear($event.value)\\\" [aria-label]=\\\"readToYear\\\">\\n                    <mat-option *ngFor=\\\"let item of yearExperianceToArray\\\" [value]=\\\"item\\\">\\n                      {{item}}\\n                    </mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                    <span *ngIf=\\\"updateWorkExperienceForm.controls.toYear.errors?.required\\\">Year is\\n                      required.</span>\\n                  </mat-error>\\n                </mat-form-field>\\n              </ion-col>\\n\\n              <ion-col size=\\\"6\\\">\\n                <mat-form-field class=\\\"inputFields\\\">\\n                  <mat-label>Select Month</mat-label>\\n                  <mat-select formControlName=\\\"toMonth\\\" [errorStateMatcher]=\\\"esMatcher\\\" [(ngModel)]=\\\"toYearEndMonth\\\"\\n                    [disabled]=\\\"isToMonthDisabled\\\" (selectionChange)=\\\"selectedToMonth($event.value)\\\"\\n                    [aria-label]=\\\"readToMonth\\\">\\n                    <mat-option *ngFor=\\\"let item of monthExperianceToArray\\\" [value]=\\\"item.id\\\">\\n                      {{item.name}}\\n                    </mat-option>\\n                  </mat-select>\\n                  <mat-error>\\n                    <span *ngIf=\\\"updateWorkExperienceForm.controls.toMonth.errors?.required\\\">Month is\\n                      required.</span>\\n                  </mat-error>\\n                </mat-form-field>\\n              </ion-col>\\n            </ion-row>\\n\\n\\n\\n            <mat-form-field class=\\\"inputFields\\\">\\n              <input matInput placeholder=\\\"Reason For Leaving\\\" [(ngModel)]=\\\"reasonForLeaving\\\"\\n                formControlName=\\\"reasonForLeaving\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n                pattern=\\\"^[a-zA-Z0-9]+[\\\\-'\\\\s]?[a-zA-Z0-9 ]+$\\\">\\n              <mat-icon matSuffix color=\\\"warn\\\"\\n                *ngIf=\\\"(updateWorkExperienceForm.controls.reasonForLeaving.invalid && updateWorkExperienceForm.controls.reasonForLeaving.touched) || (updateWorkExperienceForm.controls.reasonForLeaving.invalid && showErrorIcon && !updateWorkExperienceForm.controls.reasonForLeaving.touched)\\\">\\n                error\\n              </mat-icon>\\n              <mat-error>\\n                <span *ngIf=\\\"updateWorkExperienceForm.controls.reasonForLeaving.errors?.required\\\">\\n                  Reason for leaving is required.</span>\\n                <span *ngIf=\\\"updateWorkExperienceForm.controls.reasonForLeaving.errors?.pattern\\\">Please enter\\n                  valid reason for leaving.</span>\\n              </mat-error>\\n            </mat-form-field>\\n          </div>\\n\\n          <div *ngIf=\\\"currentEmployer\\\">\\n            <p style=\\\"text-align: center\\\" class=\\\"headerNameCss\\\">To Till Now</p>\\n          </div>\\n\\n          <button type=\\\"submit\\\" class=\\\"buttonfont selector loginButton\\\">SAVE</button>\\n\\n        </form>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <br>\\n\\n\\n</ion-content>\"","module.exports = \".bordertask {\\n  border: 0px black;\\n  /* border-radius: 4px; */\\n  /* padding: 5px !important; */\\n  /* height: 52px; */ }\\n\\n.boxShadow {\\n  box-shadow: none; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC91cGRhdGV3b3JrZXhwZXJpZW5jZS91cGRhdGV3b3JrZXhwZXJpZW5jZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxpQkFBaUI7RUFDakIsd0JBQUE7RUFDQSw2QkFBQTtFQUNBLGtCQUFBLEVBQW1COztBQVl2QjtFQUNJLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvdXBkYXRld29ya2V4cGVyaWVuY2UvdXBkYXRld29ya2V4cGVyaWVuY2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJvcmRlcnRhc2sge1xuICAgIGJvcmRlcjogMHB4IGJsYWNrO1xuICAgIC8qIGJvcmRlci1yYWRpdXM6IDRweDsgKi9cbiAgICAvKiBwYWRkaW5nOiA1cHggIWltcG9ydGFudDsgKi9cbiAgICAvKiBoZWlnaHQ6IDUycHg7ICovXG59XG5cbi8vIGVsZW1lbnQuc3R5bGUge1xuLy8gICAgIC8vIGZsZXg6IDAgMCBjYWxjKGNhbGMoMiAvIHZhcigtLWlvbi1ncmlkLWNvbHVtbnMsIDEyKSkgKiAxMDAlKTtcbi8vICAgICAvLyB3aWR0aDogY2FsYyhjYWxjKDIgLyB2YXIoLS1pb24tZ3JpZC1jb2x1bW5zLCAxMikpICogMTAwJSk7XG4vLyAgICAgLy8gbWF4LXdpZHRoOiBjYWxjKGNhbGMoMiAvIHZhcigtLWlvbi1ncmlkLWNvbHVtbnMsIDEyKSkgKiAxMDAlKTtcbi8vICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgZGlzcGxheTogZmxleDsgYWxpZ24taXRlbXM6IGNlbnRlcjtcbi8vIH1cblxuXG5cbi5ib3hTaGFkb3d7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { Events, LoadingController } from '@ionic/angular';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Component({\n  selector: 'app-updateworkexperience',\n  templateUrl: './updateworkexperience.page.html',\n  styleUrls: ['./updateworkexperience.page.scss'],\n})\nexport class UpdateworkexperiencePage implements OnInit {\n  updateWorkExperienceForm: FormGroup;\n  yearExperianceFromArray: any = [];\n  yearExperianceToArray: any = [];\n  monthIndex = 0\n  isFromMonthDisabled: boolean = true\n  isToMonthDisabled: boolean = true\n\n  monthExperianceArray: any = [{ name: 'Jan', id: '1' },\n  { name: 'Feb', id: '2' }, { name: 'Mar', id: '3' }, { name: 'Apr', id: '4' }, { name: 'May', id: '5' },\n  { name: 'Jun', id: '6' }, { name: 'Jul', id: '7' }, { name: 'Aug', id: '8' }, { name: 'Sep', id: '9' },\n  { name: 'Oct', id: '10' }, { name: 'Nov', id: '11' }, { name: 'Dec', id: '12' }]\n\n\n  monthExperianceToArray: any = [{ name: 'Jan', id: '1' },\n  { name: 'Feb', id: '2' }, { name: 'Mar', id: '3' }, { name: 'Apr', id: '4' }, { name: 'May', id: '5' },\n  { name: 'Jun', id: '6' }, { name: 'Jul', id: '7' }, { name: 'Aug', id: '8' }, { name: 'Sep', id: '9' },\n  { name: 'Oct', id: '10' }, { name: 'Nov', id: '11' }, { name: 'Dec', id: '12' }]\n\n  showErrorIcon: boolean = false\n\n  addExperience: any;\n  cardLength: any;\n  currentEmployer: any;\n  employerStaus: boolean;\n\n\n  dataArray: any;\n  id: any;\n\n  companyOrganisation: any;\n  designation: any;\n  selectedYearFrom: any;\n  fromYearStartMonth: any;\n  toYearEndYear: any;\n  toYearEndMonth: any;\n  reasonForLeaving: any;\n  firstCardEmployerStatus: any;\n\n\n  readFromYear: string = 'Please select from year'\n  readToYear: string = 'Please select to year'\n  readFromMonth: string = 'Please select from month'\n  readToMonth: string = 'Please select to month'\n\n\n  // isFromBothSelected = false\n  // isToBothSelected = false\n  // toBothErrorMsg: any\n\n\n  constructor(\n    private router: Router,\n    private alertCtrl: AlertController,\n    private dataServices: DataservicesService,\n    private activatedRoute: ActivatedRoute,\n    public loadingController: LoadingController,\n    public formBuilder: FormBuilder,\n    public navCtrl: NavController\n\n\n\n  ) {\n    this.onPageLoad();\n  }\n\n\n\n  ngOnInit() {\n    this.buildForm()\n    this.setCurrentEmployerValidators()\n  }\n\n\n\n  // Forms declaration\n  buildForm() {\n    this.updateWorkExperienceForm = this.formBuilder.group({\n      currentEmployer: [''],\n      companyOrganisation: ['', Validators.required],\n      designation: ['', Validators.required],\n      fromYear: ['', Validators.required],\n      fromMonth: ['', Validators.required],\n      toYear: ['', Validators.required],\n      toMonth: ['', Validators.required],\n      reasonForLeaving: ['', Validators.required],\n    });\n  }\n\n  setCurrentEmployerValidators() {\n    const toYear = this.updateWorkExperienceForm.get('toYear');\n    const toMonth = this.updateWorkExperienceForm.get('toMonth');\n    const reasonForLeaving = this.updateWorkExperienceForm.get('reasonForLeaving');\n\n    this.updateWorkExperienceForm.get('currentEmployer').valueChanges\n      .subscribe(currentEmployer => {\n\n        if (currentEmployer === true) {\n          toYear.setValidators(null)\n          toMonth.setValidators(null)\n          reasonForLeaving.setValidators(null)\n        }\n\n        if (currentEmployer === false) {\n          toYear.setValidators([Validators.required])\n          toMonth.setValidators([Validators.required])\n          reasonForLeaving.setValidators([Validators.required])\n        }\n\n        toYear.updateValueAndValidity();\n        toMonth.updateValueAndValidity();\n        reasonForLeaving.updateValueAndValidity();\n      });\n  }\n\n  onPageLoad() {\n    this.addExperience = (this.activatedRoute.snapshot.paramMap.get('addExperience'));\n    this.cardLength = (this.activatedRoute.snapshot.paramMap.get('cardLength'));\n\n    if (this.addExperience != null || this.addExperience != undefined && this.addExperience != '') {\n      this.currentEmployer = (this.activatedRoute.snapshot.paramMap.get('currentEmployer'));\n      if (this.currentEmployer == \"undefined\" || this.currentEmployer == \"null\" || this.currentEmployer == '' || this.cardLength == 0) {\n        this.employerStaus = true\n        this.currentEmployer = false;\n      } else if (this.cardLength >= 1 && this.currentEmployer != 'true') {\n        this.employerStaus = true\n        this.currentEmployer = false;\n      } else if (this.cardLength >= 1 && this.currentEmployer == 'true') {\n        this.employerStaus = false;\n        this.currentEmployer = false;\n      }\n\n    } else {\n      const contactInfo = (this.activatedRoute.snapshot.paramMap.get('seekerExperienceInfo'));\n      this.dataArray = JSON.parse(contactInfo);\n      this.id = this.dataArray.id == null ? '' : this.dataArray.id;\n      this.currentEmployer = this.dataArray.currentEmployer == 0 ? false : true;\n      this.companyOrganisation = this.dataArray.company == null ? '' : this.dataArray.company;\n      this.designation = this.dataArray.designation == null ? '' : this.dataArray.designation;\n      this.selectedYearFrom = this.dataArray.fromYearStartDate == null ? '' : this.dataArray.fromYearStartDate;\n      this.readFromYear = this.selectedYearFrom\n\n      this.fromYearStartMonth = this.dataArray.fromMonthStartDate == null ? '' : this.dataArray.fromMonthStartDate;\n      if (this.fromYearStartMonth != '') {\n        this.readFromMonth = this.monthExperianceArray[this.fromYearStartMonth - 1].name\n      }\n      this.toYearEndYear = this.dataArray.toYearEndDate == 0 ? '' : this.dataArray.toYearEndDate;\n      this.readToYear = this.toYearEndYear\n\n      this.toYearEndMonth = this.dataArray.toMonthEndDate == 0 ? '' : this.dataArray.toMonthEndDate;\n      if (this.toYearEndMonth != '') {\n        this.readToMonth = this.monthExperianceToArray[this.toYearEndMonth - 1].name\n      }\n\n      this.reasonForLeaving = this.dataArray.reasonForLeaving == null ? '' : this.dataArray.reasonForLeaving;\n      this.employerStaus = this.dataArray.currentEmployer == 0 ? false : true //this.dataArray.employerStaus;\n      this.firstCardEmployerStatus = this.dataArray.employerStaus;\n\n      if (this.selectedYearFrom != '') {\n        this.isFromMonthDisabled = false\n      }\n\n      if (this.toYearEndYear != '') {\n        this.isToMonthDisabled = false\n      }\n\n      if (this.firstCardEmployerStatus == 0) {\n        this.employerStaus = true;\n      }\n    }\n\n\n    let currentYear = new Date().getFullYear()\n    for (let i = currentYear; i >= 1965; i--) {\n      this.yearExperianceFromArray.push(i.toString());\n      this.yearExperianceToArray.push(i.toString());\n\n    }\n\n  }\n\n  selectedFromYear(year) {\n    this.readFromYear = year\n    this.isFromMonthDisabled = false\n    this.monthExperianceToArray = [{ name: 'Jan', id: '1' },\n    { name: 'Feb', id: '2' }, { name: 'Mar', id: '3' }, { name: 'Apr', id: '4' }, { name: 'May', id: '5' },\n    { name: 'Jun', id: '6' }, { name: 'Jul', id: '7' }, { name: 'Aug', id: '8' }, { name: 'Sep', id: '9' },\n    { name: 'Oct', id: '10' }, { name: 'Nov', id: '11' }, { name: 'Dec', id: '12' }]\n    if (year > this.toYearEndYear) {\n      this.toYearEndYear = undefined\n    } else if (year == this.toYearEndYear) {\n      this.toYearEndMonth = undefined\n      for (let i = 0; i < this.fromYearStartMonth - 1; i++) {\n        this.monthExperianceToArray.splice(0, 1);\n      }\n    }\n\n    // this.fromYearStartMonth = undefined\n    // this.toYearEndMonth = undefined\n    this.monthExperianceArray\n    let currentYear = new Date().getFullYear()\n    this.yearExperianceToArray = []\n    for (let i = currentYear; i >= year; i--) {\n      this.yearExperianceToArray.push(i.toString());\n    }\n  }\n\n  selectedFromMonth(month) {\n    this.readFromMonth = this.monthExperianceArray[month - 1].name\n\n    this.monthExperianceToArray = [{ name: 'Jan', id: '1' },\n    { name: 'Feb', id: '2' }, { name: 'Mar', id: '3' }, { name: 'Apr', id: '4' }, { name: 'May', id: '5' },\n    { name: 'Jun', id: '6' }, { name: 'Jul', id: '7' }, { name: 'Aug', id: '8' }, { name: 'Sep', id: '9' },\n    { name: 'Oct', id: '10' }, { name: 'Nov', id: '11' }, { name: 'Dec', id: '12' }]\n    if (this.toYearEndYear == this.selectedYearFrom) {\n      this.toYearEndMonth = undefined\n      for (let i = 0; i < month - 1; i++) {\n        this.monthExperianceToArray.splice(0, 1);\n      }\n    }\n  }\n  // fromYearStartMonth\n\n  // selectedToMonth(month) {\n  //   this.isToMonthDisabled = false\n  // }\n\n  selectedToYear(year) {\n    this.readToYear = year\n    this.monthExperianceToArray = [{ name: 'Jan', id: '1' },\n    { name: 'Feb', id: '2' }, { name: 'Mar', id: '3' }, { name: 'Apr', id: '4' }, { name: 'May', id: '5' },\n    { name: 'Jun', id: '6' }, { name: 'Jul', id: '7' }, { name: 'Aug', id: '8' }, { name: 'Sep', id: '9' },\n    { name: 'Oct', id: '10' }, { name: 'Nov', id: '11' }, { name: 'Dec', id: '12' }]\n    this.isToMonthDisabled = false\n    if (this.toYearEndYear == this.selectedYearFrom) {\n\n      // this.fromYearStartMonth = undefined\n      if (this.fromYearStartMonth != undefined) {\n        for (let i = 0; i < this.fromYearStartMonth - 1; i++) {\n          this.monthExperianceToArray.splice(0, 1);\n        }\n      }\n      this.toYearEndMonth = undefined\n    }\n  }\n\n  selectedToMonth(month) {\n    this.readToMonth = this.monthExperianceToArray[month - 1].name\n  }\n\n  updateWorkExperienceDetail(form) {\n\n    let current_employer: any\n    if (form.fromYear > form.toYear) {\n      this.toYearEndYear = undefined\n    }\n    if (this.updateWorkExperienceForm.invalid) {\n      this.showErrorIcon = true\n      return\n    } else {\n      this.showErrorIcon = false\n\n      if (!this.currentEmployer) {\n        current_employer = '0'\n\n        if (this.addExperience != null || this.addExperience != undefined && this.addExperience != '') {\n          this.presentLoading();\n\n          this.dataServices.addWorkExperienceInfoAPI(current_employer, form.companyOrganisation, form.designation, form.fromMonth, form.fromYear, form.toMonth, form.toYear, form.reasonForLeaving).then((result: any) => {\n\n            this.loadingController.dismiss();\n            if (result.status == 1) {\n              console.log('Update Information :: ' + result)\n              this.presentAlert(result.message, '');\n            }\n            else {\n              this.presentAlert(result.message, '');\n            }\n\n          }, (error) => {\n            this.loadingController.dismiss();\n            console.log(error);\n          });\n        } else {\n          this.presentLoading();\n          this.dataServices.updateWorkExperienceInfoAPI(current_employer, form.companyOrganisation, form.designation, form.fromMonth, form.fromYear, form.toMonth, form.toYear, form.reasonForLeaving, this.id).then((result: any) => {\n\n            this.loadingController.dismiss();\n            if (result.status == 1) {\n              console.log('Update Information :: ' + result)\n              this.presentAlert(result.message, '');\n            }\n            else {\n              this.presentAlert(result.message, '');\n            }\n\n          }, (error) => {\n            this.loadingController.dismiss();\n            console.log(error);\n          });\n        }\n      } else {\n        current_employer = '1'\n        form.toYear = ''\n        form.toMonth = ''\n        form.reasonForLeaving = ''\n\n        if (this.addExperience != null || this.addExperience != undefined && this.addExperience != '') {\n          this.presentLoading();\n          this.dataServices.addWorkExperienceInfoAPI(current_employer, form.companyOrganisation, form.designation, form.fromMonth, form.fromYear, form.toMonth, form.toYear, form.reasonForLeaving).then((result: any) => {\n            this.loadingController.dismiss();\n            if (result.status == 1) {\n              this.presentAlert(result.message, '');\n            }\n            else {\n              this.presentAlert(result.message, '');\n            }\n          }, (error) => {\n            console.log(error);\n          });\n        } else {\n          this.presentLoading();\n\n          this.dataServices.updateWorkExperienceInfoAPI(current_employer, form.companyOrganisation, form.designation, form.fromMonth, form.fromYear, form.toMonth, form.toYear, form.reasonForLeaving, this.id).then((result: any) => {\n\n            this.loadingController.dismiss();\n\n            if (result.status == 1) {\n\n              this.presentAlert(result.message, '');\n            }\n            else {\n              this.presentAlert(result.message, '');\n            }\n\n          }, (error) => {\n            console.log(error);\n          });\n        }\n      }\n    }\n  }\n\n  closePage() {\n    // this.router.navigate(['/profile'])\n    this.navCtrl.navigateRoot('/profile');\n\n  }\n\n\n  // onChange Functions \n\n\n  //onChange Functions Ends Here\n\n  async presentAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      subHeader: message,\n      buttons: [{\n        text: 'OK',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          this.closePage();\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n  //Display loader \n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!' + role + ' Data: ' + data);\n\n  }//Display Function Ends Here \n\n  ionViewWillLeave() {\n    this.loadingController.dismiss();\n  }\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}"],"sourceRoot":""}