{"version":3,"sources":["webpack:///./src/app/notification/notification.module.ts","webpack:///./src/app/notification/notification.page.html","webpack:///./src/app/notification/notification.page.scss","webpack:///./src/app/notification/notification.page.ts"],"names":[],"mappings":"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","file":"notification-notification-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NotificationPage } from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NotificationPage]\n})\nexport class NotificationPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n    <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n        <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n        <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Notifications</ion-title>\\n    </ion-item>\\n</ion-toolbar>\\n\\n<ion-content>\\n    <div *ngIf=\\\"notificationCount != 0\\\">\\n        <ion-card *ngFor=\\\"let item of notificationDataArray; let j = index\\\" class=\\\"cardMargins\\\">\\n            <ion-card-content>\\n                <ion-list>\\n                    <ion-grid (click)=\\\"servicesDetail(j)\\\">\\n                        <ion-row>\\n                            <ion-col size=\\\"12\\\">\\n                                <ion-label style=\\\"font-size: 18px;color:#2b0c43;font-weight: 600;\\\">{{item.title}}\\n                                </ion-label>\\n                            </ion-col>\\n                        </ion-row>\\n\\n                        <ion-row style=\\\"padding:5px\\\">\\n                            <ion-col size=\\\"12\\\">\\n                                <ion-label style=\\\"font-size: 15px;color:#2b0c43 ; margin-top:-3px\\\">{{item.message}}\\n                                </ion-label>\\n                            </ion-col>\\n                            <br>\\n                        </ion-row>\\n                        <i>\\n                            <ion-label style=\\\"font-size: 15px;color:#2b0c43; padding :5px; font-weight:italic\\\">Time:\\n                                {{item.create_date}}</ion-label><br>\\n                        </i>\\n                    </ion-grid>\\n                </ion-list>\\n            </ion-card-content>\\n        </ion-card>\\n        <br>\\n        <ion-infinite-scroll [disabled]=\\\"!moreDataAvailable\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n            <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data...\\\">\\n            </ion-infinite-scroll-content>\\n        </ion-infinite-scroll>\\n    </div>\\n\\n    <div *ngIf=\\\"notificationCount == 0\\\" class=\\\"noNotification\\\">\\n        <br>\\n        <p [attr.role]=\\\"role\\\">Currently there is no notification received</p>\\n    </div>\\n</ion-content>\"","module.exports = \".noNotification {\\n  text-align: center;\\n  font-size: larger; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGtCQUFrQjtFQUNsQixpQkFBaUIsRUFBQSIsImZpbGUiOiJzcmMvYXBwL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5vTm90aWZpY2F0aW9ue1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IGxhcmdlcjtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { AlertController, LoadingController, Events } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { TextToSpeech } from '@ionic-native/text-to-speech/ngx';\nimport { MobileAccessibility } from '@ionic-native/mobile-accessibility/ngx';\n\n@Component({\n    selector: 'app-notification',\n    templateUrl: './notification.page.html',\n    styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n    offset = 0\n    uacc_id: any\n    notificationDataArray: any = []\n    notificationCount = 0;\n    moreDataAvailable: boolean\n    role : string = \"role\";\n    constructor\n        (\n            private location: Location,\n            public dataServices: DataservicesService,\n            private router: Router,\n            private alertCtrl: AlertController,\n            public loadingController: LoadingController,\n            public events: Events,\n            private tts: TextToSpeech,\n            private mobileAccessibility: MobileAccessibility\n        ) { }\n\n\n    ngOnInit() {\n    }\n\n    ionViewWillEnter() {\n        this.notificationDataArray = []\n        this.onPageLoad();\n    }\n\n    onPageLoad() {\n        localStorage.setItem('badge', '0')\n        this.offset = 0\n        this.notificationDataArray = []\n        this.getNotificationsListData(this.offset);\n    }\n\n\n    ionViewDidEnter() {\n        this.mobileAccessibility.isScreenReaderRunning().then(bool => {\n            if (bool) {\n                setTimeout(() => {\n                    this.tts.speak('Notification Screen')\n                        .then(() => console.log('Success'))\n                        .catch((reason: any) => console.log(reason));\n                }, 500);\n            }\n        })\n    }\n\n    closePage() {\n        this.location.back()\n    }\n\n\n    getNotificationsListData(offset) {\n        if (this.offset == 0) {\n            this.presentLoading();\n        }\n\n        this.uacc_id = localStorage.getItem('users_id')\n        this.dataServices.getNotificationListData(offset, this.uacc_id).then((result: any) => {\n\n            if (result.status == 1 && result.total_notification_count > 0) {\n                this.notificationCount = result.total_notification_count;\n                this.notificationDataArray = this.notificationDataArray.concat(result.notification_list)\n\n                if (this.notificationCount < this.dataServices.globalOffset()) {\n                    this.moreDataAvailable = false\n                } else {\n                    this.moreDataAvailable = true\n                }\n\n                this.loadingController.dismiss();\n            } else {\n                setTimeout(() => {\n                    this.role = \"alertdialog\";\n                }, 3000);\n                this.loadingController.dismiss();\n            }\n        }, error => {\n            this.loadingController.dismiss();\n        })\n    }\n\n    loadData(event) {\n        setTimeout(() => {\n            this.offset += this.dataServices.globalOffset()\n            if (this.offset > this.notificationCount) {\n                this.moreDataAvailable = false\n            } else {\n                this.moreDataAvailable = true\n                this.getNotificationsListData(this.offset)\n                event.target.complete();\n            }\n        }, 500)\n    } //loadData Function Eds Here.\n\n    //Display loader \n    async presentLoading() {\n        const loading = await this.loadingController.create({\n            message: 'Please wait...',\n            // spinner: null\n        });\n        await loading.present();\n        setTimeout(() => {\n            loading.dismiss();\n        }, 500);\n        const { role, data } = await loading.onDidDismiss();\n\n    }//Display Function Ends Here \n}"],"sourceRoot":""}