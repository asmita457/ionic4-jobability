{"version":3,"sources":["webpack:///./src/app/updateeducational/updateeducational.module.ts","webpack:///./src/app/updateeducational/updateeducational.page.html","webpack:///./src/app/updateeducational/updateeducational.page.scss","webpack:///./src/app/updateeducational/updateeducational.page.ts"],"names":[],"mappings":"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","file":"updateeducational-updateeducational-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateeducationalPage } from './updateeducational.page';\nimport { MatInputModule, MatIconModule, MatSelectModule, MatRadioModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateeducationalPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatRadioModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdateeducationalPage]\n})\nexport class UpdateeducationalPageModule { }\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Educational Information</ion-title>\\n  </ion-item>\\n</ion-toolbar>\\n<ion-content padding>\\n\\n\\n  <div class=\\\"formPadding\\\">\\n    <form [formGroup]=\\\"updateEducationalDetailsForm\\\"\\n      (ngSubmit)=\\\"updateEducationalDetail(updateEducationalDetailsForm.value)\\\">\\n\\n      <label id=\\\"selectEducationalType\\\">Select Educational Type</label>\\n      <mat-radio-group aria-label=\\\"selectEducationalType\\\" (change)=\\\"onSelect($event.value)\\\" class=\\\"radioButtonGroup\\\"\\n        formControlName=\\\"educationtype\\\" [(ngModel)]=\\\"educationType\\\">\\n        <div *ngIf=\\\"showEducationTypes\\\">\\n          <mat-radio-button class=\\\"radioButton\\\" value=\\\"1\\\">No Schooling</mat-radio-button><br>\\n          <mat-radio-button class=\\\"radioButton\\\" value=\\\"2\\\">Pre-Primary</mat-radio-button><br>\\n          <mat-radio-button class=\\\"radioButton\\\" value=\\\"3\\\">Primary</mat-radio-button><br>\\n        </div>\\n        <mat-radio-button class=\\\"radioButton\\\" value=\\\"4\\\">Secondary and above</mat-radio-button>\\n        <mat-error>\\n          <span\\n            *ngIf=\\\"updateEducationalDetailsForm.controls.educationtype.errors?.required && showErrorIcon\\\">Educational\\n            type is required.</span>\\n        </mat-error>\\n      </mat-radio-group>\\n\\n      <div class=\\\"inputDiv\\\" *ngIf=\\\"showDiv\\\">\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <mat-label>Qualification</mat-label>\\n          <mat-select formControlName=\\\"qualification\\\" [(ngModel)]=\\\"qualificationId\\\"\\n            (selectionChange)=\\\"selectedQualification($event.value)\\\" [aria-label]=\\\"readQualification\\\">\\n            <mat-option *ngFor=\\\"let item of qualificationList\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <span *ngIf=\\\"updateEducationalDetailsForm.controls.qualification.errors?.required\\\">Qualification is\\n              required.</span>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <input matInput placeholder=\\\"Specialization\\\" [(ngModel)]=\\\"specialization\\\" formControlName=\\\"specialization\\\"\\n            [errorStateMatcher]=\\\"esMatcher\\\" pattern=\\\"^[a-zA-Z]+[\\\\-'\\\\s]?[a-zA-Z. ]+$\\\">\\n          <mat-icon matSuffix color=\\\"warn\\\"\\n            *ngIf=\\\"(updateEducationalDetailsForm.controls.specialization.invalid && updateEducationalDetailsForm.controls.specialization.touched) || (updateEducationalDetailsForm.controls.specialization.invalid && showErrorIcon && !updateEducationalDetailsForm.controls.specialization.touched)\\\">\\n            error\\n          </mat-icon>\\n          <mat-error>\\n            <span *ngIf=\\\"updateEducationalDetailsForm.controls.specialization.errors?.required\\\">Specialization is\\n              required.</span>\\n            <span *ngIf=\\\"updateEducationalDetailsForm.controls.specialization.errors?.pattern\\\">Please enter valid\\n              specialization.</span>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <mat-label>University / Board</mat-label>\\n          <mat-select formControlName=\\\"university\\\" [(ngModel)]=\\\"instituteUniversityId\\\"\\n            (selectionChange)=\\\"selectedUniversity($event.value)\\\" [aria-label]=\\\"readUniversity\\\">\\n            <mat-option *ngFor=\\\"let item of universityList\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <span *ngIf=\\\"updateEducationalDetailsForm.controls.university.errors?.required\\\">University / board is\\n              required.</span>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <mat-label>Passing Year</mat-label>\\n          <mat-select formControlName=\\\"passingYear\\\" [(ngModel)]=\\\"yearOfPassing\\\" (selectionChange)=\\\"selectedPassingYear($event.value)\\\" [aria-label]=\\\"readPassingYear\\\">\\n            <mat-option *ngFor=\\\"let item of passingYear\\\" [value]=\\\"item\\\">\\n              {{item}}\\n            </mat-option>\\n          </mat-select>\\n          <mat-error>\\n            <span *ngIf=\\\"updateEducationalDetailsForm.controls.university.errors?.required\\\">Passing year is\\n              required.</span>\\n          </mat-error>\\n        </mat-form-field>\\n\\n        <label id=\\\"typeOfCourse\\\">Type of\\n          Course</label>\\n        <mat-radio-group aria-label=\\\"typeOfCourse\\\" class=\\\"radioButtonGroup\\\" [(ngModel)]=\\\"typeOfCourse\\\"\\n          formControlName=\\\"typeOfCourse\\\">\\n          <mat-radio-button class=\\\"radioButton\\\" value=\\\"part_time\\\">Part Time</mat-radio-button>\\n          <mat-radio-button class=\\\"radioButton\\\" value=\\\"full_time\\\">Full Time</mat-radio-button>\\n          <mat-radio-button class=\\\"radioButton\\\" value=\\\"correspondence\\\">Correspondence</mat-radio-button>\\n          <mat-error>\\n            <span *ngIf=\\\"updateEducationalDetailsForm.controls.typeOfCourse.errors?.required && showErrorIcon\\\">Type of\\n              course is required.</span>\\n          </mat-error>\\n        </mat-radio-group>\\n        <br>\\n      </div>\\n      <button type=\\\"submit\\\" class=\\\"buttonfont selector loginButton\\\">SAVE</button>\\n    </form>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZWVkdWNhdGlvbmFsL3VwZGF0ZWVkdWNhdGlvbmFsLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { AlertController, NavController } from '@ionic/angular';\nimport { Events, LoadingController } from '@ionic/angular';\n\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n@Component({\n  selector: 'app-updateeducational',\n  templateUrl: './updateeducational.page.html',\n  styleUrls: ['./updateeducational.page.scss'],\n})\nexport class UpdateeducationalPage implements OnInit {\n  updateEducationalDetailsForm: FormGroup;\n  showErrorIcon: boolean = false\n  passingYear = []\n\n  educationalDetails: any;\n  qualificationList: any;\n  universityList: any;\n\n  addEducation: any;\n  cardLength: any;\n  educationType: any;\n  showDiv = false;\n  showEducationTypes: boolean;\n\n\n  seekerInfoArray: any;\n  id: any;\n  qualificationId: any;\n  qualificationName: any;\n  instituteUniversityId: any;\n  instituteUniversityName: any\n  yearOfPassing: any\n  typeOfCourse: any;\n  specialization: any;\n\n  readQualification: string = 'Please select qualification'\n  readUniversity: string = 'Please select university / board'\n  readPassingYear: string = 'Please select passing year'\n\n  constructor(\n    private router: Router,\n    private dataServices: DataservicesService,\n    private alertCtrl: AlertController,\n    private activatedRoute: ActivatedRoute,\n    public loadingController: LoadingController,\n    public formBuilder: FormBuilder,\n    public navCtrl: NavController\n\n\n  ) {\n    this.onPageLoad();\n  }\n\n  ngOnInit() {\n    this.buildForm()\n    this.setCurrentEmployerValidators()\n  }\n  // Forms declaration\n  buildForm() {\n    this.updateEducationalDetailsForm = this.formBuilder.group({\n      educationtype: ['', Validators.required],\n      qualification: ['', Validators.required],\n      specialization: ['', Validators.required],\n      university: ['', Validators.required],\n      passingYear: ['', Validators.required],\n      typeOfCourse: ['', Validators.required]\n    });\n  }\n\n  setCurrentEmployerValidators() {\n    const qualification = this.updateEducationalDetailsForm.get('qualification');\n    const specialization = this.updateEducationalDetailsForm.get('specialization');\n    const university = this.updateEducationalDetailsForm.get('university');\n    const passingYear = this.updateEducationalDetailsForm.get('passingYear');\n    const typeOfCourse = this.updateEducationalDetailsForm.get('typeOfCourse');\n\n\n\n    this.updateEducationalDetailsForm.get('educationtype').valueChanges\n      .subscribe(educationType => {\n\n        if (educationType == '4') {\n          specialization.setValidators([Validators.required])\n          university.setValidators([Validators.required])\n          passingYear.setValidators([Validators.required])\n          typeOfCourse.setValidators([Validators.required])\n          qualification.setValidators([Validators.required])\n        }\n\n        if (educationType != '4') {\n          specialization.setValidators(null)\n          university.setValidators(null)\n          passingYear.setValidators(null)\n          typeOfCourse.setValidators(null)\n          qualification.setValidators(null)\n\n        }\n\n        specialization.updateValueAndValidity();\n        university.updateValueAndValidity();\n        passingYear.updateValueAndValidity();\n        typeOfCourse.updateValueAndValidity();\n        qualification.updateValueAndValidity();\n      });\n  }\n\n  // This Function Call when Page is load\n  onPageLoad() {\n    let currentYear = new Date().getFullYear()\n    for (let i = currentYear; i >= 1965; i--) {\n      this.passingYear.push(i.toString());\n    }\n\n\n    this.educationalDetails = localStorage.getItem(\"stateAndCityArray\");\n    this.qualificationList = JSON.parse(this.educationalDetails).ddl_list.qualification_list;\n    this.universityList = JSON.parse(this.educationalDetails).ddl_list.university_list;\n\n    this.addEducation = (this.activatedRoute.snapshot.paramMap.get('addEducation'));\n    this.educationType = (this.activatedRoute.snapshot.paramMap.get('education_type'));\n    this.cardLength = (this.activatedRoute.snapshot.paramMap.get('cardLength'));\n\n\n    if (this.addEducation != null || this.addEducation != undefined && this.addEducation != '') {\n      // this.educationType = '';\n\n      if (this.cardLength == 0) {\n        this.educationType = '';\n        this.showEducationTypes = true;\n      } else if (this.cardLength >= 1 && this.educationType == 4) {\n        this.showDiv = true;\n        this.educationType = '4';\n      }\n\n\n\n    } else {\n\n      const contactInfo = (this.activatedRoute.snapshot.paramMap.get('item'));\n      this.seekerInfoArray = JSON.parse(contactInfo);\n\n      this.qualificationId = this.seekerInfoArray.qualificationId == '0' ? '' : this.seekerInfoArray.qualificationId;\n      this.qualificationName = this.seekerInfoArray.qualificationName;\n      this.readQualification = this.qualificationName\n      this.instituteUniversityId = this.seekerInfoArray.instituteUniversityId == '0' ? '' : this.seekerInfoArray.instituteUniversityId;\n      this.instituteUniversityName = this.seekerInfoArray.instituteUniversityName;\n      this.readUniversity = this.instituteUniversityName\n      this.yearOfPassing = this.seekerInfoArray.yearOfPassing;\n      this.readPassingYear = this.yearOfPassing\n      this.typeOfCourse = this.seekerInfoArray.typeOfCourse;\n      this.specialization = this.seekerInfoArray.specialisation;\n\n\n      this.educationType = this.seekerInfoArray.educationType;\n      this.cardLength = this.seekerInfoArray.cardLength;\n\n      if (this.cardLength == 1 && this.educationType == '4') {\n        this.showEducationTypes = true;\n        this.showDiv = true;\n      } else if (this.cardLength > 1 && this.educationType == '4') {\n        this.showEducationTypes = false;\n        this.showDiv = true;\n      } else if (this.cardLength == 1 && this.educationType != '4') {\n        this.showEducationTypes = true;\n      }\n    }//Seeker Info Ends Here.\n\n    // To Creat Year Array Function Ends Here.\n\n    // this.educationTypeValidation()\n  }// onPageLoad Function Ends Here.\n  closePage() {\n    // this.router.navigate(['/profile'])\n    this.navCtrl.navigateRoot('/profile');\n\n  }\n\n\n\n  ionViewWillEnter() {\n    // this.onPageLoad();\n  }\n\n  onSelect(educationType: any) {\n    if (\"4\" == educationType) {\n      this.showDiv = true;\n    } else {\n      this.showDiv = false;\n    }\n  }\n\n  selectedQualification(qualificationId: any) {\n    for (let i = 0; i <= this.qualificationList.length; i++) {\n      if (this.qualificationList[i].id == qualificationId) {\n        this.qualificationName = this.qualificationList[i].name\n        this.readQualification = this.qualificationName\n        return\n      }\n    }\n  }\n\n  selectedUniversity(UniversityId: any) {\n    for (let i = 0; i <= this.universityList.length; i++) {\n      if (this.universityList[i].id == UniversityId) {\n        this.instituteUniversityName = this.universityList[i].name\n        this.readUniversity = this.instituteUniversityName\n        return\n      }\n    }\n  }\n\n  selectedPassingYear(passingYear){\n    this.readPassingYear = passingYear\n\n  }\n\n\n  updateEducationalDetail(educationForm) {\n    if (this.updateEducationalDetailsForm.invalid) {\n      this.showErrorIcon = true\n      return\n    } else {\n      if (educationForm.educationtype != '4') {\n        educationForm.qualification = ''\n        this.qualificationName = ''\n        educationForm.specialization = ''\n        educationForm.university = ''\n        this.instituteUniversityName = ''\n        educationForm.passingYear = ''\n        educationForm.typeOfCourse = ''\n      }\n      // if (this.showDiv) {\n      if (this.addEducation != null || this.addEducation != undefined && this.addEducation != '') {\n        this.presentLoading();\n        this.dataServices.addEducationInfoAPI(educationForm, this.qualificationName, this.instituteUniversityName).then((result: any) => {\n          this.loadingController.dismiss();\n          if (result.status == 1) {\n            this.presentAlert(result.message, '');\n            // this.closePage()\n          }\n          else {\n            this.presentAlert(result.message, '');\n          }\n\n        }, (error) => {\n          this.loadingController.dismiss();\n          console.log(error);\n        });\n      } else {\n        this.presentLoading();\n        this.dataServices.updateEducationInfoAPI(educationForm, this.qualificationName, this.instituteUniversityName, this.seekerInfoArray.id).then((result: any) => {\n          this.loadingController.dismiss();\n          if (result.status == 1) {\n            this.presentAlert(result.message, '');\n            // this.closePage()\n          }\n          else {\n            this.presentAlert(result.message, '');\n          }\n\n        }, (error) => {\n          this.loadingController.dismiss();\n          console.log(error);\n        });\n      }\n      // }\n\n\n      // else {\n\n      //   if (this.addEducation != null || this.addEducation != undefined && this.addEducation != '') {\n      //     this.presentLoading();\n      //     this.dataServices.addEducationInfoAPI(educationForm, this.qualificationName, this.instituteUniversityName).then((result: any) => {\n      //       this.loadingController.dismiss();\n      //       if (result.status == 1) {\n      //         this.presentAlert(result.message, '');\n      //         // this.closePage()\n      //       }\n      //       else {\n      //         this.presentAlert(result.message, '');\n      //       }\n\n      //     }, (error) => {\n      //       alert(error);\n      //     });\n      //   } else {\n      //     this.presentLoading();\n      //     this.dataServices.updateEducationInfoAPI(educationForm, this.qualificationName, this.instituteUniversityName, this.id).then((result: any) => {\n      //       this.loadingController.dismiss();\n      //       if (result.status == 1) {\n      //         this.presentAlert(result.message, '');\n      //         // this.closePage()\n      //       }\n      //       else {\n      //         this.presentAlert(result.message, '');\n      //       }\n\n      //     }, (error) => {\n      //       alert(error);\n      //     });\n      //   }\n      // }\n      // console.log('validation success.')\n    }\n\n\n  }\n\n  async presentAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      subHeader: message,\n      buttons: [{\n        text: 'OK',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          this.closePage();\n        }\n      }]\n    });\n    await alert.present();\n  }\n\n  //Display loader \n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!' + role + ' Data: ' + data);\n\n  }//Display Function Ends Here \n\n  ionViewWillLeave() {\n    this.loadingController.dismiss();\n  }\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n"],"sourceRoot":""}