{"version":3,"sources":["webpack:///./src/app/filtersearchresult/filtersearchresult.module.ts","webpack:///./src/app/filtersearchresult/filtersearchresult.page.html","webpack:///./src/app/filtersearchresult/filtersearchresult.page.scss","webpack:///./src/app/filtersearchresult/filtersearchresult.page.ts"],"names":[],"mappings":"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","file":"filtersearchresult-filtersearchresult-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FiltersearchresultPage } from './filtersearchresult.page';\nimport { MatInputModule, MatIconModule,MatSelectModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FiltersearchresultPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule.withConfig({warnOnNgModelWithFormControl: 'never'}),\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [FiltersearchresultPage]\n})\nexport class FiltersearchresultPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <!-- <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Filter</ion-title>\\n    <ion-label (click)=\\\"clearFilterData()\\\">CLEAR FILTERS</ion-label>\\n  </ion-item> -->\\n\\n\\n  <ion-row>\\n    <!-- <ion-col (click)=\\\"closePage()\\\" size=\\\"2\\\" style=\\\"padding: 1% 0% 0% 5%;\\\">\\n      <ion-icon name=\\\"close\\\" style=\\\" color: #2b0c43;font-size: x-large;\\\"></ion-icon>\\n\\n    </ion-col> -->\\n    <ion-col size=\\\"6\\\">\\n      <ion-title style=\\\"color: #2b0c43\\\">Filter</ion-title>\\n\\n    </ion-col>\\n    <ion-col size=\\\"6\\\" (click)=\\\"clearFilterData()\\\">\\n      <ion-label style=\\\"color: #2b0c43;float: right;padding: 2% 10% 0% 0%;\\\">CLEAR FILTERS</ion-label>\\n\\n    </ion-col>\\n  </ion-row>\\n</ion-toolbar>\\n\\n\\n<ion-content>\\n  <ion-card class=\\\"cardMargins\\\">\\n    <ion-card-content>\\n      <div class=\\\"formPadding\\\">\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <input matInput placeholder=\\\"Keywords (Jobs title, Skill or Company)\\\" clear-on-edit=\\\"true\\\" type=\\\"text\\\"\\n            name=\\\"jobTitle\\\" [(ngModel)]=\\\"jobTitle\\\">\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <input matInput placeholder=\\\"Location\\\" clear-on-edit=\\\"true\\\" type=\\\"text\\\" name=\\\"location\\\"\\n            [(ngModel)]=\\\"location\\\">\\n        </mat-form-field>\\n\\n        <ion-row>\\n          <ion-col size=\\\"6\\\">\\n            <mat-form-field class=\\\"inputFields\\\">\\n              <mat-label>Min Experience</mat-label>\\n              <mat-select [(ngModel)]=\\\"minExperience\\\" (selectionChange)=\\\"onChangeMinExperience($event.value)\\\">\\n                <mat-option *ngFor=\\\"let item of min_experience\\\" [value]=\\\"item\\\">\\n                  {{item}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </ion-col>\\n\\n          <ion-col size=\\\"6\\\">\\n            <mat-form-field class=\\\"inputFields\\\">\\n              <mat-label>Max Experience</mat-label>\\n              <mat-select [(ngModel)]=\\\"maxExperience\\\">\\n                <mat-option *ngFor=\\\"let item of max_experience\\\" [value]=\\\"item\\\">\\n                  {{item}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </ion-col>\\n        </ion-row>\\n\\n\\n        <ion-row>\\n          <ion-col size=\\\"4\\\">\\n            <mat-form-field class=\\\"inputFields\\\">\\n              <mat-label>Currency</mat-label>\\n              <mat-select [(ngModel)]=\\\"Currency_id\\\">\\n                <mat-option *ngFor=\\\"let item of currency_list\\\" [value]=\\\"item.currency\\\">\\n                  {{item.currency}} </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </ion-col>\\n\\n          <ion-col size=\\\"4\\\">\\n            <mat-form-field class=\\\"inputFields\\\">\\n              <mat-label>Min Salary</mat-label>\\n              <mat-select [(ngModel)]=\\\"CtcFrom\\\" (selectionChange)=\\\"onChangeMinSalary($event.value)\\\">\\n                <mat-option *ngFor=\\\"let item of annual_ctc_from\\\" [value]=\\\"item\\\">\\n                  {{item}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </ion-col>\\n\\n          <ion-col size=\\\"4\\\">\\n            <mat-form-field class=\\\"inputFields\\\">\\n              <mat-label>Max Salary</mat-label>\\n              <mat-select [(ngModel)]=\\\"CtcTo\\\">\\n                <mat-option *ngFor=\\\"let item of annual_ctc_to\\\" [value]=\\\"item\\\">\\n                  {{item}}\\n                </mat-option>\\n              </mat-select>\\n            </mat-form-field>\\n          </ion-col>\\n        </ion-row>\\n\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <mat-label>Disability Type</mat-label>\\n          <mat-select [(ngModel)]=\\\"disability_id\\\" multiple>\\n            <mat-option *ngFor=\\\"let item of disability_list\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <mat-label>Industry</mat-label>\\n          <mat-select [(ngModel)]=\\\"industry_id\\\">\\n            <mat-option *ngFor=\\\"let item of industry_list\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <mat-form-field class=\\\"inputFields\\\">\\n          <mat-label>Functional Area</mat-label>\\n          <mat-select [(ngModel)]=\\\"functional_area_id\\\">\\n            <mat-option *ngFor=\\\"let item of functional_area_list\\\" [value]=\\\"item.id\\\">\\n              {{item.name}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n\\n        <div class=\\\"saveButtonPadding\\\">\\n          <button class=\\\"buttonfont\\\" (click)=\\\"updateFilterDetail()\\\">APPLY</button>\\n        </div>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <br>\\n  <!-- <div class=\\\"inputDiv\\\">\\n    <!-- <ion-item class=\\\"inoItem\\\">\\n      <ion-label position=\\\"floating\\\" class=\\\"blacklabel\\\">Keywords (Jobs title, Skill or Company)</ion-label>\\n      <ion-input class=\\\"headerNameCss\\\" clear-on-edit=\\\"true\\\" type=\\\"text\\\" name=\\\"jobTitle\\\" [(ngModel)]=\\\"jobTitle\\\">\\n      </ion-input>\\n    </ion-item>\\n    <ion-item class=\\\"inoItem\\\">\\n      <ion-label position=\\\"floating\\\" class=\\\"blacklabel\\\">Location</ion-label>\\n      <ion-input class=\\\"headerNameCss\\\" clear-on-edit=\\\"true\\\" type=\\\"text\\\" name=\\\"location\\\" [(ngModel)]=\\\"location\\\">\\n      </ion-input>\\n    </ion-item>\\n    <br>\\n\\n    <ion-row>\\n      <ion-col size=\\\"6\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Min Experience:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headerNameCss\\\" [(ngModel)]=\\\"minExperience\\\"\\n          (ionChange)=\\\"onChangeMinExperience($event)\\\" placeholder=\\\"Select Min Experience\\\">\\n          <ion-select-option *ngFor=\\\"let item of min_experience; let i = index\\\" [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n\\n      <ion-col size=\\\"6\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Max Experience:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headingLabel\\\" [(ngModel)]=\\\"maxExperience\\\"\\n          (ionChange)=\\\"onChangeMaxExperience($event)\\\" placeholder=\\\"Select Max Experience\\\">\\n          <ion-select-option *ngFor=\\\"let item of max_experience; let i = index\\\"\\n            [selected]=\\\"i == selectedMaxExperienceValue\\\" [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n    <br> -->\\n\\n  <!-- \\n    <ion-row>\\n      <ion-col size=\\\"4\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Currency:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headerNameCss\\\" [(ngModel)]=\\\"currency\\\" (ionChange)=\\\"onChangeCurrency($event)\\\"\\n          placeholder=\\\"Currency\\\">\\n          <ion-select-option *ngFor=\\\"let item of currency_list; let i = index\\\" [selected]=\\\"item.currency == 'INR'\\\"\\n            [value]=\\\"item\\\">\\n            {{item.currency}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n\\n      <ion-col size=\\\"4\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Min Salary:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headingLabel\\\" [(ngModel)]=\\\"CtcFrom\\\" (ionChange)=\\\"onChangeMinSalary($event)\\\"\\n          placeholder=\\\"Min Salary\\\" placeholder=\\\"Min Salary\\\">\\n          <ion-select-option *ngFor=\\\"let item of annual_ctc_from; let i = index\\\" [selected]=\\\"i == selectedCtcToIndex\\\"\\n            [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n      <ion-col size=\\\"4\\\">\\n        <ion-label class=\\\"headerNameCss\\\">Max Salary:</ion-label>\\n        <ion-select class=\\\"ionSelectBorder headingLabel\\\" [(ngModel)]=\\\"CtcTo\\\" (ionChange)=\\\"onChangeMaxSalary($event)\\\"\\n          placeholder=\\\"Max Salary\\\">\\n          <ion-select-option *ngFor=\\\"let item of annual_ctc_to; let i = index\\\" [selected]=\\\"i == selectedCtcToIndex\\\"\\n            [value]=\\\"item\\\">\\n            {{item}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n    <br> -->\\n\\n  <!-- \\n    <ion-label class=\\\"headerNameCss\\\">Disability Type:</ion-label>\\n\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"Disability\\\" multiple=\\\"true\\\"\\n          (ionChange)=\\\"onChangeDisability($event)\\\" placeholder=\\\"Disability\\\">\\n          <ion-select-option *ngFor=\\\"let item of disability_list; let i = index\\\"\\n            [selected]=\\\"disability_id.indexOf(item.id) > -1\\\" [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n    <br>\\n    <ion-label class=\\\"headerNameCss\\\">Industry:</ion-label>\\n\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"Industry\\\" (ionChange)=\\\"onChangeIndustry($event)\\\"\\n          placeholder=\\\"Industry\\\">\\n          <ion-select-option *ngFor=\\\"let item of industry_list; let i = index\\\" [selected]=\\\"item.id == industry_id\\\"\\n            [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n    <br>\\n    <ion-label class=\\\"headerNameCss\\\">Functional Area:</ion-label>\\n\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"FunctionalArea\\\" (ionChange)=\\\"onChangeFunctionalArea($event)\\\"\\n          placeholder=\\\"Functional Area\\\">\\n          <ion-select-option *ngFor=\\\"let item of functional_area_list; let i = index\\\"\\n            [selected]=\\\"item.id == 'functional_area_id'\\\" [value]=\\\"item\\\">{{item.name}}</ion-select-option>\\n        </ion-select>\\n      </ion-col>\\n    </ion-row>\\n    <br> -->\\n  <!-- </div>  -->\\n\\n</ion-content>\"","module.exports = \".ionselectcss {\\n  margin-left: 5%;\\n  margin-right: 5%; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9maWx0ZXJzZWFyY2hyZXN1bHQvZmlsdGVyc2VhcmNocmVzdWx0LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQWU7RUFDZixnQkFBZSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZmlsdGVyc2VhcmNocmVzdWx0L2ZpbHRlcnNlYXJjaHJlc3VsdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW9uc2VsZWN0Y3Nze1xuICAgIG1hcmdpbi1sZWZ0OiA1JTtcbiAgICBtYXJnaW4tcmlnaHQ6NSU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LoadingController, NavController } from '@ionic/angular';\nimport { Location } from '@angular/common';\nimport { AlertController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-filtersearchresult',\n  templateUrl: './filtersearchresult.page.html',\n  styleUrls: ['./filtersearchresult.page.scss'],\n})\nexport class FiltersearchresultPage implements OnInit {\n\n  dlllist: any\n  avdvanceSearchFields: any\n  jobTitle: any\n  location: any\n  currency_list = []\n  disability_list = []\n  functional_area_list = []\n  industry_list = []\n  minExperience: any\n  maxExperience: any\n  Currency_id: any\n  CtcFrom: any\n  CtcTo: any\n  disability_id = []\n  functional_area_id: any\n  industry_id: any\n  min_experience = []\n  max_experience = []\n  annual_ctc_from = []\n  annual_ctc_to = []\n  advancedFilterSearch = []\n\n  constructor(\n    private router: Router,\n    private Location: Location,\n    private loadingController: LoadingController,\n    private alertCtrl: AlertController,\n    private navController: NavController\n\n  ) {\n   \n    this.onPageLoad()\n  }\n\n  // Loaads Data When Page is called\n  onPageLoad() {\n\n    this.dlllist = JSON.parse(localStorage.getItem('dllLIsts'));\n    // this.avdvanceSearchFields = JSON.parse(localStorage.getItem('advanceFilter'))\n\n    this.jobTitle = localStorage.getItem('jobtitle') == '' ? '' : localStorage.getItem('jobtitle')\n    this.location = localStorage.getItem('location') == '' ? '' : localStorage.getItem('location')\n\n    this.currency_list = this.dlllist.currency_list;\n    this.disability_list = this.dlllist.disability_list;\n    this.functional_area_list = this.dlllist.functional_area_list;\n    this.industry_list = this.dlllist.industry_list;\n\n    // if (this.avdvanceSearchFields != null) {\n    //   if (this.avdvanceSearchFields[0] != undefined) {\n    //     this.jobTitle = this.avdvanceSearchFields[0].jobTitle == '' ? this.jobTitle : this.avdvanceSearchFields[0].jobTitle\n    //     this.location = this.avdvanceSearchFields[0].location\n    //     this.minExperience = this.avdvanceSearchFields[0].minExperience\n    //     this.maxExperience = this.avdvanceSearchFields[0].maxExperience\n    //     this.Currency_id = this.avdvanceSearchFields[0].Currency\n    //     this.CtcFrom = this.avdvanceSearchFields[0].CtcFrom\n    //     this.CtcTo = this.avdvanceSearchFields[0].CtcTo\n    //     this.disability_id = this.avdvanceSearchFields[0].disability_id\n    //     // if (this.avdvanceSearchFields[0].disability_id.length != 0) {\n    //     //   this.disability_id = this.avdvanceSearchFields[0].disability_id.split(\",\");\n    //     // }\n    //     this.functional_area_id = this.avdvanceSearchFields[0].functional_area_id\n    //     this.industry_id = this.avdvanceSearchFields[0].industryId\n    //   }\n    // }\n\n    for (let i = 0; i <= 35; i++) {\n      this.min_experience.push(i);\n      this.max_experience.push(i);\n    }\n\n    for (let i = 10000; i <= 2000000; i = i + 10000) {\n      this.annual_ctc_from.push(i);\n      this.annual_ctc_to.push(i);\n    }\n  }\n  // Funtoion For Clear Fill Fields\n  clearFilterData() {\n    this.jobTitle = \"\"\n    this.location = \"\"\n    this.minExperience = \"\"\n    this.maxExperience = \"\"\n    this.Currency_id = \"\"\n    this.CtcFrom = \"\"\n    this.CtcTo = \"\"\n    this.disability_id = []\n    this.industry_id = \"\"\n    this.functional_area_id = \"\"\n    localStorage.removeItem(\"advanceFilter\")\n  } // clearFilterData Ends Here\n\n\n  ngOnInit() {\n\n  }\n\n  closePage() {\n\n    localStorage.setItem('filterClosed', 'true')\n    this.clearFilterData()\n    this.Location.back();\n  }\n\n  updateFilterDetail() {\n\n    this.advancedFilterSearch = []\n    this.advancedFilterSearch.push({\n      jobTitle: this.jobTitle,\n      location: this.location,\n      minExperience: this.minExperience,\n      maxExperience: this.maxExperience,\n      Currency: this.Currency_id,\n      CtcFrom: this.CtcFrom,\n      CtcTo: this.CtcTo,\n      disability_id: this.disability_id,\n      industryId: this.industry_id,\n      functional_area_id: this.functional_area_id,\n    });\n    localStorage.setItem(\"advanceFilter\", JSON.stringify(this.advancedFilterSearch))\n    localStorage.setItem('filterClosed', 'false')\n\n    this.router.navigate(['/searchjobs', { advancedFilterSearch: JSON.stringify(this.advancedFilterSearch[0]) }])\n    // this.navController.navigateRoot(['/searchjobs',{advancedFilterSearch: JSON.stringify(this.advancedFilterSearch[0]) }]).then(() => {\n    // }); \n  }\n\n  //On Change Methods\n  onChangeMinExperience(minYear: any) {\n    if (minYear == 35) {\n      minYear = minYear - 1\n    }\n    this.minExperience = minYear;\n\n    this.max_experience = []\n\n    for (let i = this.minExperience + 1; i <= 35; i++) {\n      this.max_experience.push(i);\n      // this.changeRef.detectChanges();\n    }\n  }\n\n  onChangeMinSalary(minSalary: any) {\n    this.annual_ctc_to = []\n\n    if (minSalary == 2000000) {\n      minSalary = minSalary - 10000\n    }\n    this.CtcFrom = minSalary;\n\n    for (let i = this.CtcFrom + 10000; i <= 2000000; i = i + 10000) {\n      this.annual_ctc_to.push(i);\n      // this.changeRef.detectChanges();\n    }\n  }\n\n  // on change functions ends here.\n\n  ionViewWillLeave() {\n    this.loadingController.dismiss();\n  }\n}\n"],"sourceRoot":""}