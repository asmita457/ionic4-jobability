{"version":3,"sources":["webpack:///./src/app/updateserviceproviderservicelocation/updateserviceproviderservicelocation.module.ts","webpack:///./src/app/updateserviceproviderservicelocation/updateserviceproviderservicelocation.page.html","webpack:///./src/app/updateserviceproviderservicelocation/updateserviceproviderservicelocation.page.scss","webpack:///./src/app/updateserviceproviderservicelocation/updateserviceproviderservicelocation.page.ts"],"names":[],"mappings":"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","file":"updateserviceproviderservicelocation-updateserviceproviderservicelocation-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UpdateserviceproviderservicelocationPage } from './updateserviceproviderservicelocation.page';\nimport { MatSelectModule } from '@angular/material';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UpdateserviceproviderservicelocationPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MatSelectModule,\n    ReactiveFormsModule.withConfig({ warnOnNgModelWithFormControl: 'never' }),\n    RouterModule.forChild(routes)\n  ],\n  declarations: [UpdateserviceproviderservicelocationPage]\n})\nexport class UpdateserviceproviderservicelocationPageModule { }\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\"color: #2b0c43;\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Edit Service Location</ion-title>\\n  </ion-item>\\n</ion-toolbar>\\n\\n<ion-content>\\n  <ion-card class=\\\"cardMargins boxShadow\\\">\\n    <ion-card-content>\\n      <div class=\\\"formPadding\\\">\\n        <form [formGroup]=\\\"updateServiceLocationForm\\\"\\n          (ngSubmit)=\\\"updateServiceLocation(updateServiceLocationForm.value)\\\">\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label>Country</mat-label>\\n            <mat-select formControlName=\\\"country\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              (selectionChange)=\\\"selectedCountryValue($event.value)\\\" [(ngModel)]=\\\"editServiceLocationDetails.Country\\\">\\n              <mat-option *ngFor=\\\"let item of countryArray\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateServiceLocationForm.controls.country.errors?.required\\\">Country is\\n                required.</span>\\n            </mat-error>\\n          </mat-form-field>\\n\\n          <!-- <div *ngIf=\\\"showPreferredStateCity\\\"> -->\\n          <mat-form-field class=\\\"inputFields\\\">\\n            <mat-label> Preferred State/City</mat-label>\\n            <mat-select formControlName=\\\"stateCity\\\" [errorStateMatcher]=\\\"esMatcher\\\"\\n              (selectionChange)=\\\"selectedStateAndCityValue($event.value)\\\" [(ngModel)]=\\\"stateAndCityIds\\\" multiple>\\n              <mat-option *ngFor=\\\"let item of stateAndCityArray\\\" [value]=\\\"item.id\\\">\\n                {{item.name}}\\n              </mat-option>\\n            </mat-select>\\n            <mat-error>\\n              <span *ngIf=\\\"updateServiceLocationForm.controls.stateCity.errors?.required\\\">Please select at least one\\n                preferred state/city.</span>\\n            </mat-error>\\n          </mat-form-field>\\n          <!-- </div> -->\\n          <br>\\n          <button type=\\\"submit\\\" class=\\\"buttonfont selector\\\">SAVE</button>\\n        </form>\\n      </div>\\n    </ion-card-content>\\n  </ion-card>\\n  <!-- <div style=\\\"margin-top:10%;color:#2b0c43;\\\" class=\\\"inputDiv\\\">\\n    <ion-label class=\\\"labelclass\\\"\\n      [ngClass]=\\\"{'redlabel' : isCountrySelected == true, 'blacklabel' : isCountrySelected == false}\\\">Country\\n    </ion-label>\\n    <ion-select class=\\\"ionSelectBorder\\\" (ionChange)=\\\"selectedCountryValue($event)\\\" [(ngModel)]='preselectedCountry'\\n      placeholder=\\\"Select Country\\\">\\n      <ion-select-option *ngFor=\\\"let item of countryList;\\\" [value]=\\\"item\\\">\\n        {{item}}</ion-select-option>\\n    </ion-select>\\n\\n    <div *ngIf=\\\"showPreferredStateCity\\\">\\n      <ion-label class=\\\"labelclass\\\"\\n        [ngClass]=\\\"{'redlabel' : isPreferredStateCitySelected == true, 'blacklabel' : isPreferredStateCitySelected == false}\\\"\\n        style=\\\"color:#2b0c43;\\\">\\n        Preferred\\n        State/City\\n      </ion-label>\\n      <ion-select class=\\\"ionSelectBorder\\\" [(ngModel)]=\\\"option\\\" (ionChange)=\\\"selectedStateCityValue($event)\\\"\\n        placeholder=\\\"Select Preferred State/City\\\" multiple=\\\"true\\\">\\n        <ion-select-option *ngFor=\\\"let item of stateCityList;\\\" [value]=\\\"item\\\">\\n          {{item}}</ion-select-option>\\n      </ion-select>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"saveButtonPadding\\\">\\n    <button class=\\\"buttonfont\\\" (click)=\\\"updateServiceLocation()\\\">SAVE</button>\\n  </div> -->\\n\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwZGF0ZXNlcnZpY2Vwcm92aWRlcnNlcnZpY2Vsb2NhdGlvbi91cGRhdGVzZXJ2aWNlcHJvdmlkZXJzZXJ2aWNlbG9jYXRpb24ucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { LoadingController, AlertController } from '@ionic/angular';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Component({\n  selector: 'app-updateserviceproviderservicelocation',\n  templateUrl: './updateserviceproviderservicelocation.page.html',\n  styleUrls: ['./updateserviceproviderservicelocation.page.scss'],\n})\nexport class UpdateserviceproviderservicelocationPage implements OnInit {\n  updateServiceLocationForm: FormGroup\n  countryArray: any\n  stateAndCityArray: any\n  showErrorIcon: boolean = false\n  stateAndCityIds: any = []\n  editServiceLocationDetails: any = []\n\n  constructor\n    (\n      private location: Location,\n      public dataServices: DataservicesService,\n      public loadingController: LoadingController,\n      public alertCtrl: AlertController,\n      private activatedRoute: ActivatedRoute,\n      public formBuilder: FormBuilder,\n\n  ) { }\n\n  ngOnInit() {\n    this.buildForm()\n    this.onPageLoad()\n\n  }\n\n  buildForm() {\n    this.updateServiceLocationForm = this.formBuilder.group({\n      country: ['', Validators.required],\n      stateCity: ['', Validators.required],\n\n    });\n  }\n\n\n  onPageLoad() {\n    this.editServiceLocationDetails = JSON.parse((this.activatedRoute.snapshot.paramMap.get('item')))\n    this.getCountry()\n    this.getStateCityListInformation(this.editServiceLocationDetails.Country)\n\n    for (let i = 0; i < this.editServiceLocationDetails.Preferred_StateCity.length; i++) {\n      this.stateAndCityIds.push(this.editServiceLocationDetails.Preferred_StateCity[i].id)\n    }\n  }\n\n  // Forms declaration\n\n\n  selectedStateAndCityValue(item) {\n    if (item.length > 3) {\n      item = []\n      this.stateAndCityIds = []\n      this.presentAlert('You should not select Preferred State/City more than 3', '', 'success')\n    }\n  }\n\n  selectedCountryValue(countryId) {\n\n    this.editServiceLocationDetails.Country = ''\n    this.stateAndCityIds = []\n    this.stateAndCityArray = []\n    this.getCountry();\n    this.getStateCityListInformation(countryId)\n  }\n\n  getCountry() {\n    this.presentLoading();\n    this.dataServices.getCountryArrayAPI().then((result: any) => {\n      if (result.status == 1) {\n        this.countryArray = result.country_list\n        this.loadingController.dismiss()\n      } else {\n        this.loadingController.dismiss()\n      }\n    }, error => {\n      this.loadingController.dismiss()\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\n  getStateCityListInformation(countryId) {\n    this.presentLoading();\n    this.dataServices.getStateCountryList(countryId).then((result: any) => {\n      if (result.status == 1) {\n        this.stateAndCityArray = result.state_city_list\n        this.loadingController.dismiss()\n      } else {\n        this.loadingController.dismiss()\n      }\n    }, error => {\n      this.loadingController.dismiss()\n      console.log('Error in updateServiceProviderServiceLocation: ' + JSON.stringify(error))\n    })\n  }\n\n  closePage() {\n    this.location.back()\n  }\n\n  updateServiceLocation(formDetails) {\n    if (this.updateServiceLocationForm.invalid) {\n      this.showErrorIcon = true\n      return\n    } else {\n      this.showErrorIcon = false\n      let post = {\n        \"id\": this.editServiceLocationDetails.Service_id,\n        \"country_id\": formDetails.country,\n        \"state_city_id\": formDetails.stateCity\n      }\n      this.presentLoading();\n      this.dataServices.updateServicesLocation(post).then((result: any) => {\n        if (result.status == 1) {\n          this.loadingController.dismiss()\n          this.presentAlert(result.message, '', '')\n        } else {\n          this.loadingController.dismiss()\n          this.presentAlert(result.message, '', '')\n        }\n      }, error => {\n        this.loadingController.dismiss()\n      })\n    }\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n    setTimeout(() => {\n      loading.dismiss();\n    }, 800);\n  }\n\n  async presentAlert(title, message, status) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      message: message,\n      // buttons: ['OK']\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n            if (status != 'success') {\n              this.closePage()\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n}\n\n/** Error when invalid control is dirty, touched, or submitted. */\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\n  }\n}\n"],"sourceRoot":""}