{"version":3,"sources":["webpack:///./src/app/recommendedjobs/recommendedjobs.module.ts","webpack:///./src/app/recommendedjobs/recommendedjobs.page.html","webpack:///./src/app/recommendedjobs/recommendedjobs.page.scss","webpack:///./src/app/recommendedjobs/recommendedjobs.page.ts"],"names":[],"mappings":"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","file":"recommendedjobs-recommendedjobs-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RecommendedjobsPage } from './recommendedjobs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RecommendedjobsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RecommendedjobsPage]\n})\nexport class RecommendedjobsPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar class=\\\"new-background-color\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n      <ion-title class=\\\"headerNameCss\\\">\\n        Recommended Jobs\\n      </ion-title>\\n      <ion-icon class=\\\"headerNameCss\\\" name=\\\"notifications\\\" (click)=\\\"navigateToNotification()\\\" aria-label=\\\"notifications button\\\" alt=\\\"notifications button\\\"></ion-icon>\\n      <ion-badge *ngIf=\\\"badgecount != 0\\\" id=\\\"notifications-badge\\\" color=\\\"danger\\\">{{badgecount}}</ion-badge>\\n    </ion-item>\\n  </ion-toolbar>\\n\\n  <div class=\\\"divPadding\\\">\\n    <ion-row>\\n      <ion-col size=\\\"12\\\">\\n        <ion-label class=\\\"jobNameCss\\\">{{recommendedJobsLength}} Jobs</ion-label>\\n      </ion-col>\\n    </ion-row>\\n  </div>\\n</ion-header>\\n\\n<ion-content>\\n\\n  <!-- <h5 align=\\\"center\\\" style=\\\"margin-top:50%\\\">Coming Soon...!</h5> -->\\n  <div *ngIf=\\\"showSearchData\\\">\\n    <ion-card *ngFor=\\\"let item of recommendedJobsArray; let j = index\\\" class=\\\"cardMargins\\\">\\n      <ion-card-content>\\n        <ion-list>\\n          <ion-row>\\n            <ion-col size=\\\"10\\\" (click)=\\\"jobDescription(item)\\\">\\n\\n              <ion-row>\\n                <ion-label class=\\\"jobNameCss\\\">{{item.name}}</ion-label>\\n              </ion-row>\\n              <ion-row>\\n                <ion-label class=\\\"companyNameCss\\\">{{item.company_name}}\\n                </ion-label>\\n              </ion-row>\\n\\n              <ion-row>\\n                <ion-col size=\\\"1\\\">\\n                  <ion-img src=\\\"../../assets/img/experience.png\\\" class=\\\"experienceAndLocationPng\\\">\\n                  </ion-img>\\n                </ion-col>\\n                <ion-col size=\\\"11\\\">\\n                  <ion-label class=\\\"ionimgcss\\\">{{item.min_experience}} - {{item.max_experience}} years</ion-label>\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <ion-col size=\\\"1\\\">\\n                  <ion-img src=\\\"../../assets/img/location.png\\\" class=\\\"experienceAndLocationPng\\\">\\n                  </ion-img>\\n                </ion-col>\\n                <ion-col size=\\\"11\\\">\\n                  <ion-label class=\\\"ionimgcss\\\">{{item.location_name}}</ion-label>\\n                  <br>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-label class=\\\"ionimgcss\\\"><i>Posted: {{item.posted_age}}</i></ion-label>\\n              </ion-row>\\n\\n            </ion-col>\\n            <ion-col size=\\\"2\\\">\\n              <ion-col size=\\\"2\\\">\\n                <ion-icon *ngIf=\\\"item.job_saved_flag != 1\\\" (click)=\\\"saveJob(item.id)\\\"  aria-label=\\\"save job\\\"  name=\\\"heart-empty\\\"\\n                  class=\\\"iconcss emptyHeart\\\"></ion-icon>\\n                <ion-icon *ngIf=\\\"item.job_saved_flag == 1\\\" (click)=\\\"saveJob(item.id)\\\" aria-label=\\\"job saved\\\" ios=\\\"ios-heart\\\" md=\\\"md-heart\\\"\\n                  class=\\\"iconcss fillHeart\\\"></ion-icon>\\n              </ion-col>\\n            </ion-col>\\n          </ion-row>\\n        </ion-list>\\n      </ion-card-content>\\n    </ion-card>\\n\\n  </div>\\n  <div *ngIf=\\\"!showSearchData\\\">\\n    <h5 align=\\\"center\\\">No Recommended Jobs</h5>\\n  </div>\\n  <br>\\n  <ion-infinite-scroll [disabled]=\\\"!moreDataAvailable\\\" (ionInfinite)=\\\"loadData($event)\\\">\\n    <ion-infinite-scroll-content loadingSpinner=\\\"bubbles\\\" loadingText=\\\"Loading more data...\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\"","module.exports = \".jobNameCss {\\n  font-size: 18px;\\n  color: #2b0c43; }\\n\\n.divPadding {\\n  padding: 3% 5% 0% 5%;\\n  border-bottom: 1px solid #807b7b5e; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy92aWpheV9tYWNib29rYWlyL0RvY3VtZW50cy9naXRsYWIvYXRpbi1qb2JhYmlsaXR5LWFuZHJvaWQvc3JjL2FwcC9yZWNvbW1lbmRlZGpvYnMvcmVjb21tZW5kZWRqb2JzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNJLGVBQWU7RUFDZixjQUFhLEVBQUE7O0FBR2pCO0VBQ0ksb0JBQW9CO0VBQ3BCLGtDQUFrQyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvcmVjb21tZW5kZWRqb2JzL3JlY29tbWVuZGVkam9icy5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcblxuLmpvYk5hbWVDc3N7XG4gICAgZm9udC1zaXplOiAxOHB4O1xuICAgIGNvbG9yOiMyYjBjNDM7XG59XG5cbi5kaXZQYWRkaW5ne1xuICAgIHBhZGRpbmc6IDMlIDUlIDAlIDUlO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjODA3YjdiNWU7XG4gIH1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { LoadingController } from '@ionic/angular';\nimport { DataservicesService } from '../providers/dataservices/dataservices.service';\nimport { AlertController } from '@ionic/angular';\nimport { TextToSpeech } from '@ionic-native/text-to-speech/ngx';\nimport { MobileAccessibility } from '@ionic-native/mobile-accessibility/ngx';\n\n@Component({\n  selector: 'app-recommendedjobs',\n  templateUrl: './recommendedjobs.page.html',\n  styleUrls: ['./recommendedjobs.page.scss'],\n})\nexport class RecommendedjobsPage implements OnInit {\n\n  users_id: any\n  resultData: any\n  recommendedJobsLength: any\n  recommendedJobsArray = []\n  showSearchData = true;\n  // hideSearchData = false;\n  saveJObResponse: any\n  offset = 0\n  moreDataAvailable: boolean\n  recommendedjobCount: any\n  badgecount: any\n  badgeResultData: any\n  constructor\n    (\n      private router: Router,\n      private dataServices: DataservicesService,\n      private activatedRoute: ActivatedRoute,\n      public loadingController: LoadingController,\n      private alertCtrl: AlertController,\n      private tts: TextToSpeech,\n      private mobileAccessibility: MobileAccessibility,\n    ) {\n\n  }\n\n  ngOnInit() {\n  }\n\n\n  ionViewWillEnter() {\n    this.recommendedJobsArray = []\n    this.users_id = localStorage.getItem('users_id')\n    this.recommendedjobCount = (this.activatedRoute.snapshot.paramMap.get('count'));\n\n    this.offset = 0\n    if (this.recommendedjobCount != '0' || this.recommendedjobCount != 0) {\n      this.recommendedJob(this.users_id, this.offset);\n    } else {\n      this.showSearchData = false\n    }\n    this.getNotificationBadgeCount()\n  }\n\n  ionViewDidEnter() {\n    this.mobileAccessibility.isScreenReaderRunning().then(bool => {\n      if (bool) {\n        setTimeout(() => {\n          this.tts.speak('Recommended Jobs Screen')\n            .then(() => console.log('Success'))\n            .catch((reason: any) => console.log(reason));\n        }, 1000);\n      }\n    })\n  }\n\n  getNotificationBadgeCount() {\n    // this.presentLoading();\n    this.dataServices.getNotificationBadgeCount().then((result) => {\n      console.log(result)\n      this.badgeResultData = result\n      if (this.badgeResultData.status == 1) {\n        // this.loadingController.dismiss();\n        this.badgecount = this.badgeResultData.total_notification_count       \n      } else {\n        // this.loadingController.dismiss();\n      }\n    }, error => {\n      // this.loadingController.dismiss();\n      console.log('Error in login: ' + JSON.stringify(error))\n    })\n  }\n\nnavigateToNotification() {\nthis.router.navigate(['/notification'])\n}\n  jobDescription(item) {\n    this.router.navigate(['/searchjobdetail', { jobId: item.id }])\n  }\n\n  recommendedJob(users_id, offset) {\n    if (this.offset == 0) {\n      this.presentLoading();\n    }\n    this.dataServices.getRecommendedJobsData(users_id, offset).then((result) => {\n      this.resultData = result\n      if (this.resultData.status == 1) {\n        this.recommendedJobsArray = this.recommendedJobsArray.concat(this.resultData.recommended_job_list)\n        this.recommendedJobsLength = this.resultData.recommended_job_total_count;\n\n        if (this.offset == 0) {\n          this.loadingController.dismiss()\n        }\n        if (this.recommendedJobsLength < this.dataServices.globalOffset()) {\n          this.moreDataAvailable = false\n        } else {\n          this.moreDataAvailable = true\n        }\n        if (this.recommendedJobsLength == 0) {\n          this.showSearchData = false;\n        } else {\n          this.showSearchData = true;\n        }\n      } else {\n        this.loadingController.dismiss();\n        this.presentAlert('', this.resultData.message);\n      }\n    }, error => {\n      this.loadingController.dismiss();\n      console.log('Error in login: ' + JSON.stringify(error))\n\n    })\n  }\n\n\n  // Function for save or remove job\n  saveJob(jobId) {\n    this.presentLoading();\n    this.dataServices.saveOrRemoveJob(jobId, this.users_id).then((res) => {\n      this.saveJObResponse = res;\n      this.loadingController.dismiss();\n      if (this.saveJObResponse.status == 1) {\n        if (this.saveJObResponse.check_flag == 1) {\n          for (let i = 0; i < this.recommendedJobsArray.length; i++) {\n            if (this.recommendedJobsArray[i].id == jobId) {\n              this.recommendedJobsArray[i].job_saved_flag = 1\n            }\n          }\n        } else {\n          for (let i = 0; i < this.recommendedJobsArray.length; i++) {\n            if (this.recommendedJobsArray[i].id == jobId) {\n              this.recommendedJobsArray[i].job_saved_flag = 2\n            }\n          }\n        }\n        this.presentAlert(\"\", this.saveJObResponse.message);\n      } else {\n        this.presentAlert(\"\", this.saveJObResponse.message);\n      }\n    }, (error) => {\n      this.loadingController.dismiss();\n      console.log(error);\n    });\n  }\n\n\n  // Function For Load Data While Scrolling\n  loadData(event) {\n    setTimeout(() => {\n      this.offset += this.dataServices.globalOffset()\n      if (this.offset > this.recommendedJobsLength) {\n        this.moreDataAvailable = false\n      } else {\n        this.moreDataAvailable = true\n        this.recommendedJob(this.users_id, this.offset)\n        event.target.complete();\n      }\n    }, 500)\n  } //loadData Function Eds Here.\n\n  //Display loader \n  async presentLoading() {\n    const loading = await this.loadingController.create({\n      message: 'Please wait...',\n      // spinner: null\n    });\n    await loading.present();\n    setTimeout(() => {\n      loading.dismiss();\n    }, 500);\n    const { role, data } = await loading.onDidDismiss();\n    console.log('Loading dismissed!' + role + ' Data: ' + data);\n\n  }//Display Function Ends Here \n\n  async presentAlert(title, message) {\n    const alert = await this.alertCtrl.create({\n      header: title,\n      subHeader: message,\n      buttons: [{\n        text: 'OK',\n        cssClass: 'secondary',\n        handler: (blah) => {\n          // this.closePage();\n        }\n      }]\n    });\n    await alert.present();\n  }\n}\n"],"sourceRoot":""}