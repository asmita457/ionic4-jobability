{"version":3,"sources":["webpack:///./src/app/providers/OTP/sendotp.service.ts","webpack:///./src/app/providers/authservices.service.ts"],"names":[],"mappings":"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","file":"default~login-login-module~otpgeneration-otpgeneration-module~register-register-module.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendotpService {\n  result: any;\n  number: any;\n  APIBaseUrl = 'http://www.jobtest.jobability.org/'\n\n  constructor(\n    public http: Http,\n\n  ) { }\n\n\n  //Function For Sent OTP\n  loginUsingOTP(mobilenumber) {\n\n    var mobileNumber = (mobilenumber == undefined) ? \"\" : mobilenumber;\n    var OTP = Math.floor(100000 + Math.random() * 900000).toString().substring(0, 4);\n\n    return new Promise((resolve, reject) => {\n      var requestOptions = new RequestOptions()\n      var headers = new Headers()\n\n      headers.set('Content-Type', 'application/json')\n      requestOptions.headers = headers;\n\n      var postData = {\n        'mobile': mobileNumber,\n        'otp_number': OTP\n      }\n      // headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n      // headers.set(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, DELETE\");\n      this.http.post(this.APIBaseUrl + \"api/registration/sendotp\", postData, requestOptions)\n        .subscribe((response) => {\n          console.log(\"Data\", response.json());\n          resolve(response.json())\n        }, error => {\n          console.log(\"Error\", error)\n          reject(error)\n        })\n    });\n\n  }\n  //loginUsingOTP Function Ends Here\n\n  //Function For Sent OTP\n  // loginUsingOTP(mobilenumber) {\n\n  //   var mobileNumber = (mobilenumber == undefined) ? \"\" : mobilenumber;\n  //   var OTP = Math.floor(100000 + Math.random() * 900000).toString().substring(0, 4);\n\n  //   return new Promise((resolve, reject) => {\n  //     var headers = new Headers();\n\n  //     headers.append('Access-Control-Allow-Origin', '*');\n  //     const requestOptions = new RequestOptions({ headers: headers });\n\n  //     this.http.post(\"http://control.msg91.com/api/sendotp.php?otp_length=4&authkey=274501ASOJ0GRCFrn5cc7d0e8&message=\" + OTP + \" is your One Time Password (OTP) for Jobability.&sender=ABC123X&mobile=\" + mobileNumber + \"&otp=\" + OTP + \"&otp_expiry=10\", requestOptions)\n  //       .subscribe(data => {\n  //         resolve(data.json());\n\n  //       }, error => {\n\n  //         console.log(error);\n\n  //       });\n  //   });\n  // }\n  //loginUsingOTP Function Ends Here\n\n  // Function For Verify OTP \n  verifyOTP(OTP, mobileNumber) {\n    // var mobileNumber = (mobilenumber == undefined) ? \"\" : mobilenumber; \n    return new Promise((resolve, reject) => {\n\n      var requestOptions = new RequestOptions()\n      var headers = new Headers()\n      headers.set('Content-Type', 'application/json')\n      requestOptions.headers = headers;\n\n      var postData = {\n        'mobile': mobileNumber,\n        'otp_number': OTP\n      }\n\n      this.http.post(this.APIBaseUrl + \"http://www.jobtest.jobability.org/api/registration/verifyotp\", postData, requestOptions)\n        .subscribe((response) => {\n          console.log(\"Data\", response.json());\n          resolve(response.json())\n        }, error => {\n          console.log(\"Error\", error)\n          reject(error)\n        })\n    });\n  }\n\n  //Verify OTP Function Ends Here\n\n  // Function For Verify OTP \n  // verifyOTP(OTP, mobileNumber) {\n\n  //   // var mobileNumber = (mobilenumber == undefined) ? \"\" : mobilenumber; \n\n  //   return new Promise((resolve, reject) => {\n  //     var headers = new Headers();\n\n  //     headers.append('Access-Control-Allow-Origin', '*');\n  //     const requestOptions = new RequestOptions({ headers: headers });\n\n  //     this.http.post(\"https://control.msg91.com/api/verifyRequestOTP.php?authkey=274501ASOJ0GRCFrn5cc7d0e8&mobile=\" + mobileNumber + \"&otp=\" + OTP, requestOptions)\n  //       .subscribe(data => {\n\n  //         resolve(data.json());\n\n  //       }, error => {\n\n  //         console.log(error);\n\n  //       });\n  //   });\n  // }\n  //Verify OTP Function Ends Here\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { AndroidPermissions } from '@ionic-native/android-permissions/ngx';\nimport { NavController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthservicesService {\n\n\n  APIBaseUrl = 'http://www.jobtest.jobability.org/'\n  constructor(\n    public http: Http,\n    private androidPermissions: AndroidPermissions,\n    public navCtrl: NavController\n\n\n  ) { }\n\n  loginOTPAPI(mobile) {\n    return new Promise((resolve, reject) => {\n\n      var requestOpt = new RequestOptions()\n      var headers = new Headers()\n      headers.set('Content-Type', 'application/json')\n      requestOpt.headers = headers\n      var postData = {\n        \"mobile\": mobile\n      }\n      this.http.post(this.APIBaseUrl + 'api/auth/login_mobile', postData, requestOpt).subscribe((response) => {\n        console.log(\"Data\", response.json());\n        resolve(response.json())\n      }, error => {\n        console.log(\"Error\", error)\n        reject(error)\n      })\n    })\n  }\n\n  loginEmailAPI(credentials) {\n    return new Promise((resolve, reject) => {\n\n      var requestOpt = new RequestOptions()\n      var headers = new Headers()\n      headers.set('Content-Type', 'application/json')\n      // headers.set(\"Access-Control-Allow-Origin\",'*');\n      // headers.set(\"Access-Control-Allow-Credentials\", \"true\");\n      // headers.set(\"Access-Control-Allow-Methods\", \"POST, GET, OPTIONS, DELETE\");\n\n      requestOpt.headers = headers\n      var postData = {\n        \"login_identity\": credentials.username,\n        \"login_password\": credentials.password\n      }\n      this.http.post(this.APIBaseUrl + 'api/auth/login', postData, requestOpt).subscribe((response) => {\n        console.log(\"Data\", response.json());\n        resolve(response.json())\n      }, error => {\n        console.log(\"Error\", error)\n        reject(error)\n      })\n    })\n  }\n\n  registerUser(otpverify, profileType, mobile, email, password) {\n    return new Promise((resolve, reject) => {\n\n      var requestOpt = new RequestOptions()\n      var headers = new Headers()\n      // headers.append('Access-Control-Allow-Origin' , '*');\n      headers.set('Content-Type', 'application/json')\n\n      requestOpt.headers = headers\n      // let pType = localStorage.getItem('UserID')\n      var postData = {\n        'otp_verify': otpverify,\n        'profile_type': profileType,\n        'mobile_no': mobile,\n        'email': email,\n        'password': password\n      }\n      this.http.post(this.APIBaseUrl + 'api/registration/signup', postData, requestOpt).subscribe((response) => {\n        console.log(\"Data\", response.json());\n        resolve(response.json())\n      }, error => {\n        console.log(\"Error\", error)\n        reject(error)\n      })\n    })\n  }\n\n  checkExistingData(registerForm) {\n    return new Promise((resolve, reject) => {\n      var requestOpt = new RequestOptions()\n      var headers = new Headers()\n      // headers.append('Access-Control-Allow-Origin' , '*');\n      headers.set('Content-Type', 'application/json')\n      requestOpt.headers = headers\n      var postData = {\n        'profile_type': registerForm.profileType,\n        'mobile_no': registerForm.mobile,\n        'email': registerForm.username,\n        'password': registerForm.password\n      }\n      this.http.post(this.APIBaseUrl + 'api/registration/check_exist_data', postData, requestOpt).subscribe((response) => {\n        console.log(\"Data\", response.json());\n        resolve(response.json())\n      }, error => {\n        console.log(\"Error\", error)\n        reject(error)\n      })\n    })\n  }\n\n  async androidPermission() {\n\n\n    this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(\n      result => console.log('Has permission?', result.hasPermission),\n      err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.CAMERA)\n    );\n\n    this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.CAMERA, this.androidPermissions.PERMISSION.GET_ACCOUNTS]);\n\n    this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE).then(\n      result => console.log('Has permission?', result.hasPermission),\n      err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE)\n    );\n    // this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE]);\n\n    this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE).then(\n      result => console.log('Has permission?', result.hasPermission),\n      err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE)\n    );\n\n    this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.WRITE_EXTERNAL_STORAGE, this.androidPermissions.PERMISSION.READ_EXTERNAL_STORAGE]);\n  }\n\n  // Function call if user clicked on forget his password\n  forgotPassword(email) {\n    return new Promise((resolve, reject) => {\n      var requestOpt = new RequestOptions()\n      var headers = new Headers()\n      headers.set('Content-Type', 'application/json')\n      requestOpt.headers = headers\n      var postData = {\n        \"email\": email\n      }\n      this.http.post(this.APIBaseUrl + 'api/auth/forgotten_password', postData, requestOpt).subscribe((response) => {\n        console.log(\"Data\", response.json());\n        resolve(response.json())\n      }, error => {\n        console.log(\"Error\", error)\n        reject(error)\n      })\n    })\n  }\n\n  navigateUnauthoriseUser(){\n    this.navCtrl.navigateRoot('/dashboardjobseeker');\n  }\n\n  open_R_and_A_Portal(postData) {\n    return new Promise((resolve, reject) => {\n      var requestOpt = new RequestOptions()\n      var headers = new Headers()\n      headers.set('Content-Type', 'application/json')\n      requestOpt.headers = headers\n     \n      this.http.post('http://139.162.41.11:80/public/auth/register', postData, requestOpt).subscribe((response) => {\n        console.log(\"Data\", response.json());\n        resolve(response.json())\n      }, error => {\n        console.log(\"Error\", error)\n        reject(error)\n      })\n    })\n  }\n\n\n}\n"],"sourceRoot":""}