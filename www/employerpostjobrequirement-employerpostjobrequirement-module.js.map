{"version":3,"sources":["webpack:///./src/app/employerpostjobrequirement/employerpostjobrequirement.module.ts","webpack:///./src/app/employerpostjobrequirement/employerpostjobrequirement.page.html","webpack:///./src/app/employerpostjobrequirement/employerpostjobrequirement.page.scss","webpack:///./src/app/employerpostjobrequirement/employerpostjobrequirement.page.ts"],"names":[],"mappings":"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","file":"employerpostjobrequirement-employerpostjobrequirement-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EmployerpostjobrequirementPage } from './employerpostjobrequirement.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EmployerpostjobrequirementPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [EmployerpostjobrequirementPage]\n})\nexport class EmployerpostjobrequirementPageModule {}\n","module.exports = \"<ion-toolbar class=\\\"new-background-color\\\">\\n  <!-- <ion-item lines=\\\"none\\\" class=\\\"new-background-color\\\">\\n    <ion-icon (click)=\\\"closePage()\\\" name=\\\"close\\\" style=\\\" color: #2b0c43\\\"></ion-icon>\\n    <ion-title style=\\\"margin-left: 5%; color: #2b0c43\\\">Post Job</ion-title>\\n  </ion-item> -->\\n\\n<ion-row>\\n    <ion-col size=\\\"2\\\" (click)=\\\"goBack()\\\">\\n        <ion-img src=\\\"../../assets/img/backnavigation.png\\\" style=\\\"padding: 20% 25% 25% 25%;\\\">\\n        </ion-img>\\n      </ion-col>\\n  <ion-col size=\\\"10\\\">\\n    <ion-title class=\\\"titlecss\\\" style=\\\"margin-top:4px\\\">Post Job</ion-title>\\n  </ion-col>\\n</ion-row>\\n</ion-toolbar>\\n\\n<ion-content>\\n    <div class=\\\"inputDiv\\\">\\n\\n  <h5 align=\\\"center\\\" style=\\\"color:#2b0c43\\\">Job Requirements</h5>\\n  <ion-item class=\\\"inoItem headerNameCss\\\" lines=\\\"none\\\"  style=\\\"margin-top:5%\\\">\\n      <ion-grid fixed>\\n              <ion-row>\\n                      <ion-col size=\\\"12\\\">\\n                        <ion-label class=\\\"headerNameCss\\\" [ngClass]=\\\"{'redlabel' : isIndustrySelected == true, 'blacklabel' : isIndustrySelected == false}\\\">\\n                        Industry Type:\\n                      </ion-label>\\n                      </ion-col>\\n              </ion-row>\\n      </ion-grid>\\n  </ion-item>\\n  \\n    <ion-select class=\\\"headerNameCss\\\" [(ngModel)]=\\\"industryId\\\"  style=\\\" border-bottom: 1px solid lightgray\\\" placeholder=\\\"Select Industry Type\\\" (ionChange)=\\\"selectedIndustryTypeValue($event)\\\">\\n      <ion-select-option *ngFor=\\\"let item of industryArray;\\\" [value]=\\\"item.id\\\">\\n        {{item.name}}</ion-select-option>\\n    </ion-select>\\n\\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\" lines=\\\"none\\\">\\n        <ion-grid fixed>\\n                <ion-row>\\n                        <ion-col size=\\\"12\\\">\\n                          <ion-label class=\\\"headerNameCss\\\" [ngClass]=\\\"{'redlabel' : isFunctionalAreaSelected == true, 'blacklabel' : isFunctionalAreaSelected == false}\\\">\\n                              Functional Area:\\n                        </ion-label>\\n                        </ion-col>\\n                </ion-row>\\n        </ion-grid>\\n    </ion-item>\\n    \\n      <ion-select class=\\\"headerNameCss\\\" [(ngModel)]=\\\"functionalAreaId\\\"  style=\\\" border-bottom: 1px solid lightgray\\\" placeholder=\\\"Functional Area\\\" (ionChange)=\\\"onFunctionalAreaSelect($event)\\\">\\n        <ion-select-option *ngFor=\\\"let item of functionalArea;\\\" [value]=\\\"item.id\\\">\\n          {{item.name}}</ion-select-option>\\n      </ion-select>\\n  \\n    <ion-item class=\\\"headerNameCss inoItem\\\">\\n        <ion-grid fixed>\\n          <ion-row>\\n            <ion-col size=\\\"10\\\">\\n              <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'redlabel' : showJobRoleErrorMsg == true, 'blacklabel' : showJobRoleErrorMsg == false}\\\">\\n                  Job Role\\n              </ion-label>\\n              <ion-input type=\\\"text\\\" name=\\\"jobrole\\\" [(ngModel)]=\\\"jobrole\\\" (ionChange)=\\\"employeeJobRoleValidator()\\\" required></ion-input>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" *ngIf=\\\"showJobRoleErrorMsg\\\">\\n              <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n              </ion-img>\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\">\\n          <p class=\\\"errorMsg \\\" *ngIf=\\\"showJobRoleErrorMsg\\\">{{jobRoleErrorMsg}}</p>\\n        </ion-col>\\n      </ion-row>\\n\\n\\n      <ion-item class=\\\"inoItem headerNameCss\\\" lines=\\\"none\\\">\\n          <ion-grid fixed>\\n                  <ion-row>\\n                          <ion-col size=\\\"12\\\">\\n                            <ion-label class=\\\"headerNameCss\\\" [ngClass]=\\\"{'redlabel' : isQualificationSelected == true, 'blacklabel' : isQualificationSelected == false}\\\">\\n                                Qualification:\\n                          </ion-label>\\n                          </ion-col>\\n                  </ion-row>\\n          </ion-grid>\\n      </ion-item>\\n      \\n        <ion-select class=\\\"headerNameCss\\\" [(ngModel)]=\\\"qualificationId\\\"  multiple=\\\"true\\\" style=\\\" border-bottom: 1px solid lightgray\\\" placeholder=\\\"Select Qualification\\\" (ionChange)=\\\"selectedQualificationTypeValue($event)\\\">\\n          <ion-select-option *ngFor=\\\"let item of qualificationArray;\\\" [value]=\\\"item.id\\\">\\n            {{item.name}}</ion-select-option>\\n        </ion-select>\\n\\n  \\n\\n        <ion-item class=\\\"headerNameCss inoItem\\\">\\n            <ion-grid fixed>\\n              <ion-row>\\n                <ion-col size=\\\"10\\\">\\n                  <ion-label position=\\\"floating\\\" [ngClass]=\\\"{'redlabel' : showSkillsErrorMsg == true, 'blacklabel' : showSkillsErrorMsg == false}\\\">\\n                      Skills (Enter your skills separated by comma)\\n                  </ion-label>\\n                  <ion-input type=\\\"text\\\" name=\\\"skills\\\" [(ngModel)]=\\\"skills\\\" (ionChange)=\\\"employeeSkillsValidator()\\\" required\\n                    ></ion-input>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\" *ngIf=\\\"showSkillsErrorMsg\\\">\\n                  <ion-img class=\\\"errorimg\\\" src=\\\"assets/img/error.png\\\">\\n                  </ion-img>\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n          </ion-item>\\n          <ion-row>\\n            <ion-col size=\\\"10\\\">\\n              <p class=\\\"errorMsg \\\" *ngIf=\\\"showSkillsErrorMsg\\\">{{skillsErrorMsg}}</p>\\n            </ion-col>\\n          </ion-row>\\n\\n\\n          <ion-item class=\\\"headerNameCss inoItem\\\">\\n            <ion-grid fixed>\\n            <ion-row>\\n                <ion-col size=\\\"12\\\">\\n                  <ion-label position=\\\"floating\\\" >\\n                    Reference Code (Optional)\\n                  </ion-label>\\n                  <ion-input type=\\\"text\\\" name=\\\"referancecode\\\" [(ngModel)]=\\\"referancecode\\\"\\n                   ></ion-input>\\n                </ion-col>\\n                <ion-col size=\\\"2\\\">\\n\\n                </ion-col>\\n              </ion-row>\\n            </ion-grid>\\n              </ion-item>\\n\\n    \\n\\n    <ion-item class=\\\"inoItem headerNameCss\\\">\\n      <ion-grid fixed>\\n      <ion-row>      \\n            <ion-col size=\\\"10\\\">\\n            <ion-label position=\\\"floating\\\" >\\n              Candidate Profile (Optional)\\n            </ion-label>\\n            <ion-input type=\\\"text\\\" name=\\\"candidateprofile\\\" [(ngModel)]=\\\"candidateprofile\\\" ></ion-input>\\n          </ion-col>\\n          <ion-col size=\\\"2\\\">\\n\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n\\n    </div>\\n  <div class=\\\"saveButtonPadding\\\">\\n    <button class=\\\"buttonfont\\\" (click)=\\\"nextPage()\\\">CONTINUE</button>\\n  </div>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcGxveWVycG9zdGpvYnJlcXVpcmVtZW50L2VtcGxveWVycG9zdGpvYnJlcXVpcmVtZW50LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-employerpostjobrequirement',\n  templateUrl: './employerpostjobrequirement.page.html',\n  styleUrls: ['./employerpostjobrequirement.page.scss'],\n})\nexport class EmployerpostjobrequirementPage implements OnInit {\n\n  DDlListArray: any\n  jobrole: any\n  skills: any\n  candidateprofile: any\n  referancecode: any\n  postJobDetailArray = []\n  functionalArea = []\n  industryArray = []\n  qualificationArray = []\n  industryId: any\n  functionalAreaId: any\n  qualificationId: any\n  qualificationName = []\n  functional_area_id = \"\"\n  isIndustrySelected = false\n  showJobRoleErrorMsg = false\n  jobRoleErrorMsg: any\n  showSkillsErrorMsg = false\n  skillsErrorMsg: any\n  // showReferanceCodeErrorMsg= false\n  // referanceCodeErrorMsg: any\n  isQualificationSelected = false\n  isFunctionalAreaSelected = false\n  // showCandidateProfileErrorMsg = false\n  // candidateProfileErrorMsg: any\n  postJobRequirementArray = []\n  backwardJobRequirementFlag = \"\"\n  backPostJobRequirement = []\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n\n  ionViewWillEnter() {\n\n    this.DDlListArray = JSON.parse(localStorage.getItem('employerDDLResponse'));\n    this.functionalArea = this.DDlListArray.functional_area_list;\n    this.industryArray = this.DDlListArray.industry_list;\n    this.qualificationArray = this.DDlListArray.qualification_list\n    this.backPostJobRequirement = []\n    this.backwardJobRequirementFlag = localStorage.getItem('backwardJobRequirementFlag')\n    if (this.backwardJobRequirementFlag == \"1\") {\n      this.backPostJobRequirement = JSON.parse(localStorage.getItem('backPostJobRequirement'))\n      console.log('post Job Requirement LocalStorage :', this.backPostJobRequirement)\n      this.industryId = this.backPostJobRequirement[0].industryType;\n      this.functionalAreaId = this.backPostJobRequirement[0].functionalArea;\n      this.qualificationId = this.backPostJobRequirement[0].qualification;\n      this.skills = this.backPostJobRequirement[0].skills\n      this.jobrole = this.backPostJobRequirement[0].jobRole;\n      this.referancecode = this.backPostJobRequirement[0].reference_code;\n      this.candidateprofile = this.backPostJobRequirement[0].candidate_profile\n      // this.skills = this.backPostJobRequirement[0].skills\n    }\n\n    // this.postJobRequirementArray = JSON.parse(localStorage.getItem('postJobRequirementArray'))\n    // console.log(\"postJobRequirementArray:\",this.postJobRequirementArray)\n    //DDL List response\n\n\n\n    const contactInfo = (this.activatedRoute.snapshot.paramMap.get('item'));\n    this.postJobDetailArray = JSON.parse(contactInfo);\n    console.log(\"postJobDetailArray :: \" + JSON.stringify(this.postJobDetailArray))\n  }\n\n  // nIndustrySelect(item) {\n  //   this.industryId = JSON.stringify(item.detail.value.id);\n  //   console.log('Industry Type :: ' + JSON.stringify(item.detail.value.id))\n  // }\n\n  onFunctionalAreaSelect(item) {\n    this.functionalAreaId = []\n    this.functionalAreaId = item.detail.value;\n    console.log(\"Functional Area Id:: \", this.functionalAreaId)\n    for (let i = 0; i < this.functionalArea.length; i++) {\n      if (this.functionalAreaId == \"\" || this.functionalAreaId == null || this.functionalAreaId == \"0\" || this.functionalAreaId == undefined) {\n        this.isFunctionalAreaSelected = true\n      } else {\n        this.isFunctionalAreaSelected = false\n      }\n    }\n\n    this.functional_area_id = JSON.stringify(item.detail.value.id);\n    console.log('Fuctional Area :: ' + JSON.stringify(item.detail.value.id))\n  }\n  selectedIndustryTypeValue(item: any) {\n\n    this.industryId = item.detail.value;\n    console.log(\"industry id:: \", this.industryId)\n    for (let i = 0; i < this.industryArray.length; i++) {\n      if (this.industryId == \"\" || this.industryId == null || this.industryId == \"0\" || this.industryId == undefined) {\n        this.isIndustrySelected = true\n      } else {\n        this.isIndustrySelected = false\n      }\n    }\n  }\n\n\n  goBack() {\n    localStorage.setItem('backwardJobLocationFlag', '1')\n\n    // this.location.back();\n    this.router.navigate(['/employerpostjoblocation']);\n  }\n\n  employeeJobRoleValidator() {\n    if (this.jobrole == \"\" || this.jobrole == null || this.jobrole == undefined) {\n      this.showJobRoleErrorMsg = true\n      this.jobRoleErrorMsg = \"Please enter job role\"\n    } else {\n      this.showJobRoleErrorMsg = false\n    }\n  }\n  // employeeReferanceCodeValidator(){\n  //   if (this.referancecode == \"\" || this.referancecode == null || this.referancecode == undefined) {\n  //     this.showReferanceCodeErrorMsg = true\n  //     this.referanceCodeErrorMsg = \"Please enter referance code\"\n  //   } else {\n  //     this.showReferanceCodeErrorMsg = false\n  //   }\n  // }\n\n  // employeeCandidateProfileValidator(){\n  //   if (this.candidateprofile == \"\" || this.candidateprofile == null || this.candidateprofile == undefined) {\n  //     this.showCandidateProfileErrorMsg = true\n  //     this.candidateProfileErrorMsg = \"Please enter candidate profile\"\n  //   } else {\n  //     this.showCandidateProfileErrorMsg = false\n  //   }\n  // }\n\n  employeeSkillsValidator() {\n    if (this.skills == \"\" || this.skills == null || this.skills == undefined) {\n      this.showSkillsErrorMsg = true\n      this.skillsErrorMsg = \"Please enter skills\"\n    } else {\n      this.showSkillsErrorMsg = false\n    }\n  }\n\n  selectedQualificationTypeValue(item: any) {\n\n    let arrayLength = item.detail.value.length;\n    this.qualificationId = []\n    this.qualificationId = item.detail.value;\n    //   for (let i = 0; i < arrayLength; i++) {\n    // this.qualificationId = []\n    // this.qualificationId = item.detail.value;\n    //   }\n    // this.qualificationId.push(item.detail.value[i].id);\n    // this.qualificationName.push(item.detail.value[i].name)\n    if (this.qualificationId == \"\" || this.qualificationId == null || this.qualificationId == \"0\" || this.qualificationId == undefined) {\n      this.isQualificationSelected = true\n    } else {\n      this.isQualificationSelected = false\n    }\n\n    console.log('Qualification Type :: ' + this.qualificationId)\n  }\n\n\n  closePage() {\n    this.router.navigate(['/dashboardemployer'])\n  }\n\n  nextPage() {\n\n    if ((this.industryId == \"\" || this.industryId == null || this.industryId == \"0\" || this.industryId == undefined) &&\n      (this.qualificationId == \"\" || this.qualificationId == null || this.qualificationId == \"0\" || this.qualificationId == undefined) &&\n      (this.functionalAreaId == \"\" || this.functionalAreaId == null || this.functionalAreaId == \"0\" || this.functionalAreaId == undefined) &&\n      (this.jobrole == \"\" || this.jobrole == null || this.jobrole == undefined) &&\n      (this.referancecode == \"\" || this.referancecode == null || this.referancecode == undefined) &&\n      (this.skills == \"\" || this.skills == null || this.skills == undefined) &&\n      (this.candidateprofile == \"\" || this.candidateprofile == null || this.candidateprofile == undefined)) {\n      this.isIndustrySelected = true\n      this.isFunctionalAreaSelected = true;\n      this.isQualificationSelected = true\n      // this.showCandidateProfileErrorMsg = true\n      this.showJobRoleErrorMsg = true\n      // this.showReferanceCodeErrorMsg = true\n      this.showSkillsErrorMsg = true\n      // this.candidateProfileErrorMsg = \"Please enter candidate profile\"\n      this.jobRoleErrorMsg = \"Please enter job role\"\n      // this.referanceCodeErrorMsg = \"Please enter referance code\"\n      this.skillsErrorMsg = \"Please enter skills\"\n    }\n    else {\n      this.isIndustrySelected = false\n      this.isFunctionalAreaSelected = false\n      this.isQualificationSelected = false\n      // this.showCandidateProfileErrorMsg = false\n      this.showJobRoleErrorMsg = false\n      // this.showReferanceCodeErrorMsg = false\n      this.showSkillsErrorMsg = false\n\n    }\n    this.employeeJobRoleValidator();\n    // this.employeeReferanceCodeValidator();\n    this.employeeSkillsValidator();\n    // this.employeeCandidateProfileValidator();\n\n    if (this.functionalAreaId == \"\" || this.functionalAreaId == null || this.functionalAreaId == \"0\" || this.functionalAreaId == undefined) {\n      this.isFunctionalAreaSelected = true\n    } else {\n      this.isFunctionalAreaSelected = false\n    }\n\n\n    if (this.qualificationId == \"\" || this.qualificationId == null || this.qualificationId == \"0\" || this.qualificationId == undefined) {\n      this.isQualificationSelected = true\n    } else {\n      this.isQualificationSelected = false\n    }\n\n\n    if (this.industryId == \"\" || this.industryId == null || this.industryId == \"0\" || this.industryId == undefined) {\n      this.isIndustrySelected = true\n    } else {\n      this.isIndustrySelected = false\n    }\n\n    if (this.isIndustrySelected == false &&\n      this.isFunctionalAreaSelected == false &&\n      this.isQualificationSelected == false &&\n      // this.showCandidateProfileErrorMsg == false &&\n      this.showJobRoleErrorMsg == false &&\n      // this.showReferanceCodeErrorMsg == false &&\n      this.showSkillsErrorMsg == false) {\n      this.postJobRequirementArray.push(\n        {\n          industryType: this.industryId,\n          functionalArea: this.functionalAreaId,\n          jobRole: this.jobrole,\n          qualification: this.qualificationId,\n          skills: this.skills,\n          reference_code: this.referancecode,\n          candidate_profile: this.candidateprofile\n        }\n      )\n\n      localStorage.setItem('backPostJobRequirement', JSON.stringify(this.postJobRequirementArray))\n      // this.postJobRequirementArray = this.postJobRequirementArray.concat(this.postJobDetailArray)\n      // console.log(\"post job Requirement array:\",this.postJobRequirementArray)\n      // localStorage.setItem(\"JobPostLocalStorageData\",JSON.stringify(this.postJobRequirementArray))\n      this.router.navigate(['/employerpostjobmanagerresponses'])\n    }\n\n\n\n    // this.router.navigate(['/employerpostjobmanagerresponses', { item : JSON.stringify(this.postJobRequirementArray)}])\n  }\n\n}\n"],"sourceRoot":""}